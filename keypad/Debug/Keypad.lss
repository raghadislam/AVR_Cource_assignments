
Keypad.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000056c6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000118  00800060  000056c6  0000575a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000005  00800178  00800178  00005872  2**0
                  ALLOC
  3 .stab         00001f8c  00000000  00000000  00005874  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d29  00000000  00000000  00007800  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001c0  00000000  00000000  00008529  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000020e  00000000  00000000  000086e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00002ec7  00000000  00000000  000088f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000146f  00000000  00000000  0000b7be  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000147f  00000000  00000000  0000cc2d  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001e0  00000000  00000000  0000e0ac  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    00000348  00000000  00000000  0000e28c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000023b0  00000000  00000000  0000e5d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  00010984  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 ec       	ldi	r30, 0xC6	; 198
      68:	f6 e5       	ldi	r31, 0x56	; 86
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 37       	cpi	r26, 0x78	; 120
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a8 e7       	ldi	r26, 0x78	; 120
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ad 37       	cpi	r26, 0x7D	; 125
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 d0 2a 	call	0x55a0	; 0x55a0 <main>
      8a:	0c 94 61 2b 	jmp	0x56c2	; 0x56c2 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__lshrdi3>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	df 93       	push	r29
      9a:	cf 93       	push	r28
      9c:	cd b7       	in	r28, 0x3d	; 61
      9e:	de b7       	in	r29, 0x3e	; 62
      a0:	60 97       	sbiw	r28, 0x10	; 16
      a2:	0f b6       	in	r0, 0x3f	; 63
      a4:	f8 94       	cli
      a6:	de bf       	out	0x3e, r29	; 62
      a8:	0f be       	out	0x3f, r0	; 63
      aa:	cd bf       	out	0x3d, r28	; 61
      ac:	a8 2f       	mov	r26, r24
      ae:	00 23       	and	r16, r16
      b0:	09 f4       	brne	.+2      	; 0xb4 <__lshrdi3+0x22>
      b2:	61 c0       	rjmp	.+194    	; 0x176 <__lshrdi3+0xe4>
      b4:	7e 01       	movw	r14, r28
      b6:	08 94       	sec
      b8:	e1 1c       	adc	r14, r1
      ba:	f1 1c       	adc	r15, r1
      bc:	88 e0       	ldi	r24, 0x08	; 8
      be:	f7 01       	movw	r30, r14
      c0:	11 92       	st	Z+, r1
      c2:	8a 95       	dec	r24
      c4:	e9 f7       	brne	.-6      	; 0xc0 <__lshrdi3+0x2e>
      c6:	29 83       	std	Y+1, r18	; 0x01
      c8:	3a 83       	std	Y+2, r19	; 0x02
      ca:	4b 83       	std	Y+3, r20	; 0x03
      cc:	5c 83       	std	Y+4, r21	; 0x04
      ce:	6d 83       	std	Y+5, r22	; 0x05
      d0:	7e 83       	std	Y+6, r23	; 0x06
      d2:	af 83       	std	Y+7, r26	; 0x07
      d4:	98 87       	std	Y+8, r25	; 0x08
      d6:	80 e2       	ldi	r24, 0x20	; 32
      d8:	80 1b       	sub	r24, r16
      da:	e8 2f       	mov	r30, r24
      dc:	ff 27       	eor	r31, r31
      de:	e7 fd       	sbrc	r30, 7
      e0:	f0 95       	com	r31
      e2:	4d 81       	ldd	r20, Y+5	; 0x05
      e4:	5e 81       	ldd	r21, Y+6	; 0x06
      e6:	6f 81       	ldd	r22, Y+7	; 0x07
      e8:	78 85       	ldd	r23, Y+8	; 0x08
      ea:	18 16       	cp	r1, r24
      ec:	84 f0       	brlt	.+32     	; 0x10e <__lshrdi3+0x7c>
      ee:	1d 86       	std	Y+13, r1	; 0x0d
      f0:	1e 86       	std	Y+14, r1	; 0x0e
      f2:	1f 86       	std	Y+15, r1	; 0x0f
      f4:	18 8a       	std	Y+16, r1	; 0x10
      f6:	88 27       	eor	r24, r24
      f8:	99 27       	eor	r25, r25
      fa:	8e 1b       	sub	r24, r30
      fc:	9f 0b       	sbc	r25, r31
      fe:	04 c0       	rjmp	.+8      	; 0x108 <__lshrdi3+0x76>
     100:	76 95       	lsr	r23
     102:	67 95       	ror	r22
     104:	57 95       	ror	r21
     106:	47 95       	ror	r20
     108:	8a 95       	dec	r24
     10a:	d2 f7       	brpl	.-12     	; 0x100 <__lshrdi3+0x6e>
     10c:	28 c0       	rjmp	.+80     	; 0x15e <__lshrdi3+0xcc>
     10e:	20 2f       	mov	r18, r16
     110:	33 27       	eor	r19, r19
     112:	27 fd       	sbrc	r18, 7
     114:	30 95       	com	r19
     116:	db 01       	movw	r26, r22
     118:	ca 01       	movw	r24, r20
     11a:	02 2e       	mov	r0, r18
     11c:	04 c0       	rjmp	.+8      	; 0x126 <__lshrdi3+0x94>
     11e:	b6 95       	lsr	r27
     120:	a7 95       	ror	r26
     122:	97 95       	ror	r25
     124:	87 95       	ror	r24
     126:	0a 94       	dec	r0
     128:	d2 f7       	brpl	.-12     	; 0x11e <__lshrdi3+0x8c>
     12a:	8d 87       	std	Y+13, r24	; 0x0d
     12c:	9e 87       	std	Y+14, r25	; 0x0e
     12e:	af 87       	std	Y+15, r26	; 0x0f
     130:	b8 8b       	std	Y+16, r27	; 0x10
     132:	04 c0       	rjmp	.+8      	; 0x13c <__lshrdi3+0xaa>
     134:	44 0f       	add	r20, r20
     136:	55 1f       	adc	r21, r21
     138:	66 1f       	adc	r22, r22
     13a:	77 1f       	adc	r23, r23
     13c:	ea 95       	dec	r30
     13e:	d2 f7       	brpl	.-12     	; 0x134 <__lshrdi3+0xa2>
     140:	89 81       	ldd	r24, Y+1	; 0x01
     142:	9a 81       	ldd	r25, Y+2	; 0x02
     144:	ab 81       	ldd	r26, Y+3	; 0x03
     146:	bc 81       	ldd	r27, Y+4	; 0x04
     148:	04 c0       	rjmp	.+8      	; 0x152 <__lshrdi3+0xc0>
     14a:	b6 95       	lsr	r27
     14c:	a7 95       	ror	r26
     14e:	97 95       	ror	r25
     150:	87 95       	ror	r24
     152:	2a 95       	dec	r18
     154:	d2 f7       	brpl	.-12     	; 0x14a <__lshrdi3+0xb8>
     156:	48 2b       	or	r20, r24
     158:	59 2b       	or	r21, r25
     15a:	6a 2b       	or	r22, r26
     15c:	7b 2b       	or	r23, r27
     15e:	49 87       	std	Y+9, r20	; 0x09
     160:	5a 87       	std	Y+10, r21	; 0x0a
     162:	6b 87       	std	Y+11, r22	; 0x0b
     164:	7c 87       	std	Y+12, r23	; 0x0c
     166:	29 85       	ldd	r18, Y+9	; 0x09
     168:	3a 85       	ldd	r19, Y+10	; 0x0a
     16a:	4b 85       	ldd	r20, Y+11	; 0x0b
     16c:	5c 85       	ldd	r21, Y+12	; 0x0c
     16e:	6d 85       	ldd	r22, Y+13	; 0x0d
     170:	7e 85       	ldd	r23, Y+14	; 0x0e
     172:	af 85       	ldd	r26, Y+15	; 0x0f
     174:	98 89       	ldd	r25, Y+16	; 0x10
     176:	8a 2f       	mov	r24, r26
     178:	60 96       	adiw	r28, 0x10	; 16
     17a:	0f b6       	in	r0, 0x3f	; 63
     17c:	f8 94       	cli
     17e:	de bf       	out	0x3e, r29	; 62
     180:	0f be       	out	0x3f, r0	; 63
     182:	cd bf       	out	0x3d, r28	; 61
     184:	cf 91       	pop	r28
     186:	df 91       	pop	r29
     188:	0f 91       	pop	r16
     18a:	ff 90       	pop	r15
     18c:	ef 90       	pop	r14
     18e:	08 95       	ret

00000190 <__ashldi3>:
     190:	ef 92       	push	r14
     192:	ff 92       	push	r15
     194:	0f 93       	push	r16
     196:	df 93       	push	r29
     198:	cf 93       	push	r28
     19a:	cd b7       	in	r28, 0x3d	; 61
     19c:	de b7       	in	r29, 0x3e	; 62
     19e:	60 97       	sbiw	r28, 0x10	; 16
     1a0:	0f b6       	in	r0, 0x3f	; 63
     1a2:	f8 94       	cli
     1a4:	de bf       	out	0x3e, r29	; 62
     1a6:	0f be       	out	0x3f, r0	; 63
     1a8:	cd bf       	out	0x3d, r28	; 61
     1aa:	a8 2f       	mov	r26, r24
     1ac:	00 23       	and	r16, r16
     1ae:	09 f4       	brne	.+2      	; 0x1b2 <__ashldi3+0x22>
     1b0:	61 c0       	rjmp	.+194    	; 0x274 <__ashldi3+0xe4>
     1b2:	7e 01       	movw	r14, r28
     1b4:	08 94       	sec
     1b6:	e1 1c       	adc	r14, r1
     1b8:	f1 1c       	adc	r15, r1
     1ba:	88 e0       	ldi	r24, 0x08	; 8
     1bc:	f7 01       	movw	r30, r14
     1be:	11 92       	st	Z+, r1
     1c0:	8a 95       	dec	r24
     1c2:	e9 f7       	brne	.-6      	; 0x1be <__ashldi3+0x2e>
     1c4:	29 83       	std	Y+1, r18	; 0x01
     1c6:	3a 83       	std	Y+2, r19	; 0x02
     1c8:	4b 83       	std	Y+3, r20	; 0x03
     1ca:	5c 83       	std	Y+4, r21	; 0x04
     1cc:	6d 83       	std	Y+5, r22	; 0x05
     1ce:	7e 83       	std	Y+6, r23	; 0x06
     1d0:	af 83       	std	Y+7, r26	; 0x07
     1d2:	98 87       	std	Y+8, r25	; 0x08
     1d4:	80 e2       	ldi	r24, 0x20	; 32
     1d6:	80 1b       	sub	r24, r16
     1d8:	e8 2f       	mov	r30, r24
     1da:	ff 27       	eor	r31, r31
     1dc:	e7 fd       	sbrc	r30, 7
     1de:	f0 95       	com	r31
     1e0:	49 81       	ldd	r20, Y+1	; 0x01
     1e2:	5a 81       	ldd	r21, Y+2	; 0x02
     1e4:	6b 81       	ldd	r22, Y+3	; 0x03
     1e6:	7c 81       	ldd	r23, Y+4	; 0x04
     1e8:	18 16       	cp	r1, r24
     1ea:	84 f0       	brlt	.+32     	; 0x20c <__ashldi3+0x7c>
     1ec:	19 86       	std	Y+9, r1	; 0x09
     1ee:	1a 86       	std	Y+10, r1	; 0x0a
     1f0:	1b 86       	std	Y+11, r1	; 0x0b
     1f2:	1c 86       	std	Y+12, r1	; 0x0c
     1f4:	88 27       	eor	r24, r24
     1f6:	99 27       	eor	r25, r25
     1f8:	8e 1b       	sub	r24, r30
     1fa:	9f 0b       	sbc	r25, r31
     1fc:	04 c0       	rjmp	.+8      	; 0x206 <__ashldi3+0x76>
     1fe:	44 0f       	add	r20, r20
     200:	55 1f       	adc	r21, r21
     202:	66 1f       	adc	r22, r22
     204:	77 1f       	adc	r23, r23
     206:	8a 95       	dec	r24
     208:	d2 f7       	brpl	.-12     	; 0x1fe <__ashldi3+0x6e>
     20a:	28 c0       	rjmp	.+80     	; 0x25c <__ashldi3+0xcc>
     20c:	20 2f       	mov	r18, r16
     20e:	33 27       	eor	r19, r19
     210:	27 fd       	sbrc	r18, 7
     212:	30 95       	com	r19
     214:	db 01       	movw	r26, r22
     216:	ca 01       	movw	r24, r20
     218:	02 2e       	mov	r0, r18
     21a:	04 c0       	rjmp	.+8      	; 0x224 <__ashldi3+0x94>
     21c:	88 0f       	add	r24, r24
     21e:	99 1f       	adc	r25, r25
     220:	aa 1f       	adc	r26, r26
     222:	bb 1f       	adc	r27, r27
     224:	0a 94       	dec	r0
     226:	d2 f7       	brpl	.-12     	; 0x21c <__ashldi3+0x8c>
     228:	89 87       	std	Y+9, r24	; 0x09
     22a:	9a 87       	std	Y+10, r25	; 0x0a
     22c:	ab 87       	std	Y+11, r26	; 0x0b
     22e:	bc 87       	std	Y+12, r27	; 0x0c
     230:	04 c0       	rjmp	.+8      	; 0x23a <__ashldi3+0xaa>
     232:	76 95       	lsr	r23
     234:	67 95       	ror	r22
     236:	57 95       	ror	r21
     238:	47 95       	ror	r20
     23a:	ea 95       	dec	r30
     23c:	d2 f7       	brpl	.-12     	; 0x232 <__ashldi3+0xa2>
     23e:	8d 81       	ldd	r24, Y+5	; 0x05
     240:	9e 81       	ldd	r25, Y+6	; 0x06
     242:	af 81       	ldd	r26, Y+7	; 0x07
     244:	b8 85       	ldd	r27, Y+8	; 0x08
     246:	04 c0       	rjmp	.+8      	; 0x250 <__ashldi3+0xc0>
     248:	88 0f       	add	r24, r24
     24a:	99 1f       	adc	r25, r25
     24c:	aa 1f       	adc	r26, r26
     24e:	bb 1f       	adc	r27, r27
     250:	2a 95       	dec	r18
     252:	d2 f7       	brpl	.-12     	; 0x248 <__ashldi3+0xb8>
     254:	48 2b       	or	r20, r24
     256:	59 2b       	or	r21, r25
     258:	6a 2b       	or	r22, r26
     25a:	7b 2b       	or	r23, r27
     25c:	4d 87       	std	Y+13, r20	; 0x0d
     25e:	5e 87       	std	Y+14, r21	; 0x0e
     260:	6f 87       	std	Y+15, r22	; 0x0f
     262:	78 8b       	std	Y+16, r23	; 0x10
     264:	29 85       	ldd	r18, Y+9	; 0x09
     266:	3a 85       	ldd	r19, Y+10	; 0x0a
     268:	4b 85       	ldd	r20, Y+11	; 0x0b
     26a:	5c 85       	ldd	r21, Y+12	; 0x0c
     26c:	6d 85       	ldd	r22, Y+13	; 0x0d
     26e:	7e 85       	ldd	r23, Y+14	; 0x0e
     270:	af 85       	ldd	r26, Y+15	; 0x0f
     272:	98 89       	ldd	r25, Y+16	; 0x10
     274:	8a 2f       	mov	r24, r26
     276:	60 96       	adiw	r28, 0x10	; 16
     278:	0f b6       	in	r0, 0x3f	; 63
     27a:	f8 94       	cli
     27c:	de bf       	out	0x3e, r29	; 62
     27e:	0f be       	out	0x3f, r0	; 63
     280:	cd bf       	out	0x3d, r28	; 61
     282:	cf 91       	pop	r28
     284:	df 91       	pop	r29
     286:	0f 91       	pop	r16
     288:	ff 90       	pop	r15
     28a:	ef 90       	pop	r14
     28c:	08 95       	ret

0000028e <__fixunssfsi>:
     28e:	ef 92       	push	r14
     290:	ff 92       	push	r15
     292:	0f 93       	push	r16
     294:	1f 93       	push	r17
     296:	7b 01       	movw	r14, r22
     298:	8c 01       	movw	r16, r24
     29a:	20 e0       	ldi	r18, 0x00	; 0
     29c:	30 e0       	ldi	r19, 0x00	; 0
     29e:	40 e0       	ldi	r20, 0x00	; 0
     2a0:	5f e4       	ldi	r21, 0x4F	; 79
     2a2:	0e 94 ac 14 	call	0x2958	; 0x2958 <__gesf2>
     2a6:	88 23       	and	r24, r24
     2a8:	8c f0       	brlt	.+34     	; 0x2cc <__fixunssfsi+0x3e>
     2aa:	c8 01       	movw	r24, r16
     2ac:	b7 01       	movw	r22, r14
     2ae:	20 e0       	ldi	r18, 0x00	; 0
     2b0:	30 e0       	ldi	r19, 0x00	; 0
     2b2:	40 e0       	ldi	r20, 0x00	; 0
     2b4:	5f e4       	ldi	r21, 0x4F	; 79
     2b6:	0e 94 24 13 	call	0x2648	; 0x2648 <__subsf3>
     2ba:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <__fixsfsi>
     2be:	9b 01       	movw	r18, r22
     2c0:	ac 01       	movw	r20, r24
     2c2:	20 50       	subi	r18, 0x00	; 0
     2c4:	30 40       	sbci	r19, 0x00	; 0
     2c6:	40 40       	sbci	r20, 0x00	; 0
     2c8:	50 48       	sbci	r21, 0x80	; 128
     2ca:	06 c0       	rjmp	.+12     	; 0x2d8 <__fixunssfsi+0x4a>
     2cc:	c8 01       	movw	r24, r16
     2ce:	b7 01       	movw	r22, r14
     2d0:	0e 94 0c 15 	call	0x2a18	; 0x2a18 <__fixsfsi>
     2d4:	9b 01       	movw	r18, r22
     2d6:	ac 01       	movw	r20, r24
     2d8:	b9 01       	movw	r22, r18
     2da:	ca 01       	movw	r24, r20
     2dc:	1f 91       	pop	r17
     2de:	0f 91       	pop	r16
     2e0:	ff 90       	pop	r15
     2e2:	ef 90       	pop	r14
     2e4:	08 95       	ret

000002e6 <__divdi3>:
     2e6:	a2 e7       	ldi	r26, 0x72	; 114
     2e8:	b0 e0       	ldi	r27, 0x00	; 0
     2ea:	e9 e7       	ldi	r30, 0x79	; 121
     2ec:	f1 e0       	ldi	r31, 0x01	; 1
     2ee:	0c 94 2a 2b 	jmp	0x5654	; 0x5654 <__prologue_saves__>
     2f2:	98 2e       	mov	r9, r24
     2f4:	89 2e       	mov	r8, r25
     2f6:	71 2e       	mov	r7, r17
     2f8:	88 e0       	ldi	r24, 0x08	; 8
     2fa:	fe 01       	movw	r30, r28
     2fc:	31 96       	adiw	r30, 0x01	; 1
     2fe:	df 01       	movw	r26, r30
     300:	68 2e       	mov	r6, r24
     302:	1d 92       	st	X+, r1
     304:	6a 94       	dec	r6
     306:	e9 f7       	brne	.-6      	; 0x302 <__divdi3+0x1c>
     308:	29 83       	std	Y+1, r18	; 0x01
     30a:	3a 83       	std	Y+2, r19	; 0x02
     30c:	4b 83       	std	Y+3, r20	; 0x03
     30e:	5c 83       	std	Y+4, r21	; 0x04
     310:	6d 83       	std	Y+5, r22	; 0x05
     312:	7e 83       	std	Y+6, r23	; 0x06
     314:	9f 82       	std	Y+7, r9	; 0x07
     316:	98 87       	std	Y+8, r25	; 0x08
     318:	fe 01       	movw	r30, r28
     31a:	39 96       	adiw	r30, 0x09	; 9
     31c:	df 01       	movw	r26, r30
     31e:	1d 92       	st	X+, r1
     320:	8a 95       	dec	r24
     322:	e9 f7       	brne	.-6      	; 0x31e <__divdi3+0x38>
     324:	a9 86       	std	Y+9, r10	; 0x09
     326:	ba 86       	std	Y+10, r11	; 0x0a
     328:	cb 86       	std	Y+11, r12	; 0x0b
     32a:	dc 86       	std	Y+12, r13	; 0x0c
     32c:	ed 86       	std	Y+13, r14	; 0x0d
     32e:	fe 86       	std	Y+14, r15	; 0x0e
     330:	0f 87       	std	Y+15, r16	; 0x0f
     332:	18 8b       	std	Y+16, r17	; 0x10
     334:	8d 81       	ldd	r24, Y+5	; 0x05
     336:	9e 81       	ldd	r25, Y+6	; 0x06
     338:	af 81       	ldd	r26, Y+7	; 0x07
     33a:	b8 85       	ldd	r27, Y+8	; 0x08
     33c:	b7 fd       	sbrc	r27, 7
     33e:	07 c0       	rjmp	.+14     	; 0x34e <__divdi3+0x68>
     340:	e1 96       	adiw	r28, 0x31	; 49
     342:	1c ae       	std	Y+60, r1	; 0x3c
     344:	1d ae       	std	Y+61, r1	; 0x3d
     346:	1e ae       	std	Y+62, r1	; 0x3e
     348:	1f ae       	std	Y+63, r1	; 0x3f
     34a:	e1 97       	sbiw	r28, 0x31	; 49
     34c:	64 c0       	rjmp	.+200    	; 0x416 <__divdi3+0x130>
     34e:	21 95       	neg	r18
     350:	81 e0       	ldi	r24, 0x01	; 1
     352:	12 16       	cp	r1, r18
     354:	08 f0       	brcs	.+2      	; 0x358 <__divdi3+0x72>
     356:	80 e0       	ldi	r24, 0x00	; 0
     358:	31 95       	neg	r19
     35a:	91 e0       	ldi	r25, 0x01	; 1
     35c:	13 16       	cp	r1, r19
     35e:	08 f0       	brcs	.+2      	; 0x362 <__divdi3+0x7c>
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	b3 2f       	mov	r27, r19
     364:	b8 1b       	sub	r27, r24
     366:	81 e0       	ldi	r24, 0x01	; 1
     368:	3b 17       	cp	r19, r27
     36a:	08 f0       	brcs	.+2      	; 0x36e <__divdi3+0x88>
     36c:	80 e0       	ldi	r24, 0x00	; 0
     36e:	98 2b       	or	r25, r24
     370:	41 95       	neg	r20
     372:	31 e0       	ldi	r19, 0x01	; 1
     374:	14 16       	cp	r1, r20
     376:	08 f0       	brcs	.+2      	; 0x37a <__divdi3+0x94>
     378:	30 e0       	ldi	r19, 0x00	; 0
     37a:	a4 2f       	mov	r26, r20
     37c:	a9 1b       	sub	r26, r25
     37e:	81 e0       	ldi	r24, 0x01	; 1
     380:	4a 17       	cp	r20, r26
     382:	08 f0       	brcs	.+2      	; 0x386 <__divdi3+0xa0>
     384:	80 e0       	ldi	r24, 0x00	; 0
     386:	38 2b       	or	r19, r24
     388:	51 95       	neg	r21
     38a:	91 e0       	ldi	r25, 0x01	; 1
     38c:	15 16       	cp	r1, r21
     38e:	08 f0       	brcs	.+2      	; 0x392 <__divdi3+0xac>
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	f5 2f       	mov	r31, r21
     394:	f3 1b       	sub	r31, r19
     396:	81 e0       	ldi	r24, 0x01	; 1
     398:	5f 17       	cp	r21, r31
     39a:	08 f0       	brcs	.+2      	; 0x39e <__divdi3+0xb8>
     39c:	80 e0       	ldi	r24, 0x00	; 0
     39e:	98 2b       	or	r25, r24
     3a0:	61 95       	neg	r22
     3a2:	31 e0       	ldi	r19, 0x01	; 1
     3a4:	16 16       	cp	r1, r22
     3a6:	08 f0       	brcs	.+2      	; 0x3aa <__divdi3+0xc4>
     3a8:	30 e0       	ldi	r19, 0x00	; 0
     3aa:	e6 2f       	mov	r30, r22
     3ac:	e9 1b       	sub	r30, r25
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	6e 17       	cp	r22, r30
     3b2:	08 f0       	brcs	.+2      	; 0x3b6 <__divdi3+0xd0>
     3b4:	80 e0       	ldi	r24, 0x00	; 0
     3b6:	38 2b       	or	r19, r24
     3b8:	71 95       	neg	r23
     3ba:	41 e0       	ldi	r20, 0x01	; 1
     3bc:	17 16       	cp	r1, r23
     3be:	08 f0       	brcs	.+2      	; 0x3c2 <__divdi3+0xdc>
     3c0:	40 e0       	ldi	r20, 0x00	; 0
     3c2:	57 2f       	mov	r21, r23
     3c4:	53 1b       	sub	r21, r19
     3c6:	81 e0       	ldi	r24, 0x01	; 1
     3c8:	75 17       	cp	r23, r21
     3ca:	08 f0       	brcs	.+2      	; 0x3ce <__divdi3+0xe8>
     3cc:	80 e0       	ldi	r24, 0x00	; 0
     3ce:	48 2b       	or	r20, r24
     3d0:	89 2d       	mov	r24, r9
     3d2:	81 95       	neg	r24
     3d4:	91 e0       	ldi	r25, 0x01	; 1
     3d6:	18 16       	cp	r1, r24
     3d8:	08 f0       	brcs	.+2      	; 0x3dc <__divdi3+0xf6>
     3da:	90 e0       	ldi	r25, 0x00	; 0
     3dc:	68 2e       	mov	r6, r24
     3de:	64 1a       	sub	r6, r20
     3e0:	46 2d       	mov	r20, r6
     3e2:	31 e0       	ldi	r19, 0x01	; 1
     3e4:	86 15       	cp	r24, r6
     3e6:	08 f0       	brcs	.+2      	; 0x3ea <__divdi3+0x104>
     3e8:	30 e0       	ldi	r19, 0x00	; 0
     3ea:	93 2b       	or	r25, r19
     3ec:	88 2d       	mov	r24, r8
     3ee:	81 95       	neg	r24
     3f0:	89 1b       	sub	r24, r25
     3f2:	29 83       	std	Y+1, r18	; 0x01
     3f4:	ba 83       	std	Y+2, r27	; 0x02
     3f6:	ab 83       	std	Y+3, r26	; 0x03
     3f8:	fc 83       	std	Y+4, r31	; 0x04
     3fa:	ed 83       	std	Y+5, r30	; 0x05
     3fc:	5e 83       	std	Y+6, r21	; 0x06
     3fe:	4f 83       	std	Y+7, r20	; 0x07
     400:	88 87       	std	Y+8, r24	; 0x08
     402:	2f ef       	ldi	r18, 0xFF	; 255
     404:	3f ef       	ldi	r19, 0xFF	; 255
     406:	4f ef       	ldi	r20, 0xFF	; 255
     408:	5f ef       	ldi	r21, 0xFF	; 255
     40a:	e1 96       	adiw	r28, 0x31	; 49
     40c:	2c af       	std	Y+60, r18	; 0x3c
     40e:	3d af       	std	Y+61, r19	; 0x3d
     410:	4e af       	std	Y+62, r20	; 0x3e
     412:	5f af       	std	Y+63, r21	; 0x3f
     414:	e1 97       	sbiw	r28, 0x31	; 49
     416:	8d 85       	ldd	r24, Y+13	; 0x0d
     418:	9e 85       	ldd	r25, Y+14	; 0x0e
     41a:	af 85       	ldd	r26, Y+15	; 0x0f
     41c:	b8 89       	ldd	r27, Y+16	; 0x10
     41e:	b7 ff       	sbrs	r27, 7
     420:	6a c0       	rjmp	.+212    	; 0x4f6 <__divdi3+0x210>
     422:	e1 96       	adiw	r28, 0x31	; 49
     424:	4c ad       	ldd	r20, Y+60	; 0x3c
     426:	5d ad       	ldd	r21, Y+61	; 0x3d
     428:	6e ad       	ldd	r22, Y+62	; 0x3e
     42a:	7f ad       	ldd	r23, Y+63	; 0x3f
     42c:	e1 97       	sbiw	r28, 0x31	; 49
     42e:	40 95       	com	r20
     430:	50 95       	com	r21
     432:	60 95       	com	r22
     434:	70 95       	com	r23
     436:	e1 96       	adiw	r28, 0x31	; 49
     438:	4c af       	std	Y+60, r20	; 0x3c
     43a:	5d af       	std	Y+61, r21	; 0x3d
     43c:	6e af       	std	Y+62, r22	; 0x3e
     43e:	7f af       	std	Y+63, r23	; 0x3f
     440:	e1 97       	sbiw	r28, 0x31	; 49
     442:	a1 94       	neg	r10
     444:	81 e0       	ldi	r24, 0x01	; 1
     446:	1a 14       	cp	r1, r10
     448:	08 f0       	brcs	.+2      	; 0x44c <__divdi3+0x166>
     44a:	80 e0       	ldi	r24, 0x00	; 0
     44c:	b1 94       	neg	r11
     44e:	91 e0       	ldi	r25, 0x01	; 1
     450:	1b 14       	cp	r1, r11
     452:	08 f0       	brcs	.+2      	; 0x456 <__divdi3+0x170>
     454:	90 e0       	ldi	r25, 0x00	; 0
     456:	6b 2d       	mov	r22, r11
     458:	68 1b       	sub	r22, r24
     45a:	81 e0       	ldi	r24, 0x01	; 1
     45c:	b6 16       	cp	r11, r22
     45e:	08 f0       	brcs	.+2      	; 0x462 <__divdi3+0x17c>
     460:	80 e0       	ldi	r24, 0x00	; 0
     462:	98 2b       	or	r25, r24
     464:	c1 94       	neg	r12
     466:	21 e0       	ldi	r18, 0x01	; 1
     468:	1c 14       	cp	r1, r12
     46a:	08 f0       	brcs	.+2      	; 0x46e <__divdi3+0x188>
     46c:	20 e0       	ldi	r18, 0x00	; 0
     46e:	5c 2d       	mov	r21, r12
     470:	59 1b       	sub	r21, r25
     472:	81 e0       	ldi	r24, 0x01	; 1
     474:	c5 16       	cp	r12, r21
     476:	08 f0       	brcs	.+2      	; 0x47a <__divdi3+0x194>
     478:	80 e0       	ldi	r24, 0x00	; 0
     47a:	28 2b       	or	r18, r24
     47c:	d1 94       	neg	r13
     47e:	91 e0       	ldi	r25, 0x01	; 1
     480:	1d 14       	cp	r1, r13
     482:	08 f0       	brcs	.+2      	; 0x486 <__divdi3+0x1a0>
     484:	90 e0       	ldi	r25, 0x00	; 0
     486:	4d 2d       	mov	r20, r13
     488:	42 1b       	sub	r20, r18
     48a:	81 e0       	ldi	r24, 0x01	; 1
     48c:	d4 16       	cp	r13, r20
     48e:	08 f0       	brcs	.+2      	; 0x492 <__divdi3+0x1ac>
     490:	80 e0       	ldi	r24, 0x00	; 0
     492:	98 2b       	or	r25, r24
     494:	e1 94       	neg	r14
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	1e 14       	cp	r1, r14
     49a:	08 f0       	brcs	.+2      	; 0x49e <__divdi3+0x1b8>
     49c:	20 e0       	ldi	r18, 0x00	; 0
     49e:	3e 2d       	mov	r19, r14
     4a0:	39 1b       	sub	r19, r25
     4a2:	81 e0       	ldi	r24, 0x01	; 1
     4a4:	e3 16       	cp	r14, r19
     4a6:	08 f0       	brcs	.+2      	; 0x4aa <__divdi3+0x1c4>
     4a8:	80 e0       	ldi	r24, 0x00	; 0
     4aa:	28 2b       	or	r18, r24
     4ac:	f1 94       	neg	r15
     4ae:	91 e0       	ldi	r25, 0x01	; 1
     4b0:	1f 14       	cp	r1, r15
     4b2:	08 f0       	brcs	.+2      	; 0x4b6 <__divdi3+0x1d0>
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	7f 2d       	mov	r23, r15
     4b8:	72 1b       	sub	r23, r18
     4ba:	27 2f       	mov	r18, r23
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	f7 16       	cp	r15, r23
     4c0:	08 f0       	brcs	.+2      	; 0x4c4 <__divdi3+0x1de>
     4c2:	80 e0       	ldi	r24, 0x00	; 0
     4c4:	98 2b       	or	r25, r24
     4c6:	01 95       	neg	r16
     4c8:	11 e0       	ldi	r17, 0x01	; 1
     4ca:	10 16       	cp	r1, r16
     4cc:	08 f0       	brcs	.+2      	; 0x4d0 <__divdi3+0x1ea>
     4ce:	10 e0       	ldi	r17, 0x00	; 0
     4d0:	80 2f       	mov	r24, r16
     4d2:	89 1b       	sub	r24, r25
     4d4:	98 2f       	mov	r25, r24
     4d6:	81 e0       	ldi	r24, 0x01	; 1
     4d8:	09 17       	cp	r16, r25
     4da:	08 f0       	brcs	.+2      	; 0x4de <__divdi3+0x1f8>
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	18 2b       	or	r17, r24
     4e0:	87 2d       	mov	r24, r7
     4e2:	81 95       	neg	r24
     4e4:	81 1b       	sub	r24, r17
     4e6:	a9 86       	std	Y+9, r10	; 0x09
     4e8:	6a 87       	std	Y+10, r22	; 0x0a
     4ea:	5b 87       	std	Y+11, r21	; 0x0b
     4ec:	4c 87       	std	Y+12, r20	; 0x0c
     4ee:	3d 87       	std	Y+13, r19	; 0x0d
     4f0:	2e 87       	std	Y+14, r18	; 0x0e
     4f2:	9f 87       	std	Y+15, r25	; 0x0f
     4f4:	88 8b       	std	Y+16, r24	; 0x10
     4f6:	99 81       	ldd	r25, Y+1	; 0x01
     4f8:	2a 81       	ldd	r18, Y+2	; 0x02
     4fa:	3b 81       	ldd	r19, Y+3	; 0x03
     4fc:	4c 81       	ldd	r20, Y+4	; 0x04
     4fe:	5d 81       	ldd	r21, Y+5	; 0x05
     500:	6e 81       	ldd	r22, Y+6	; 0x06
     502:	7f 81       	ldd	r23, Y+7	; 0x07
     504:	a8 85       	ldd	r26, Y+8	; 0x08
     506:	b9 85       	ldd	r27, Y+9	; 0x09
     508:	1a 85       	ldd	r17, Y+10	; 0x0a
     50a:	0b 85       	ldd	r16, Y+11	; 0x0b
     50c:	fc 84       	ldd	r15, Y+12	; 0x0c
     50e:	ed 84       	ldd	r14, Y+13	; 0x0d
     510:	de 84       	ldd	r13, Y+14	; 0x0e
     512:	cf 84       	ldd	r12, Y+15	; 0x0f
     514:	b8 88       	ldd	r11, Y+16	; 0x10
     516:	88 e0       	ldi	r24, 0x08	; 8
     518:	e1 e1       	ldi	r30, 0x11	; 17
     51a:	8e 2e       	mov	r8, r30
     51c:	91 2c       	mov	r9, r1
     51e:	8c 0e       	add	r8, r28
     520:	9d 1e       	adc	r9, r29
     522:	f4 01       	movw	r30, r8
     524:	68 2e       	mov	r6, r24
     526:	11 92       	st	Z+, r1
     528:	6a 94       	dec	r6
     52a:	e9 f7       	brne	.-6      	; 0x526 <__divdi3+0x240>
     52c:	99 8b       	std	Y+17, r25	; 0x11
     52e:	2a 8b       	std	Y+18, r18	; 0x12
     530:	3b 8b       	std	Y+19, r19	; 0x13
     532:	4c 8b       	std	Y+20, r20	; 0x14
     534:	5d 8b       	std	Y+21, r21	; 0x15
     536:	6e 8b       	std	Y+22, r22	; 0x16
     538:	7f 8b       	std	Y+23, r23	; 0x17
     53a:	a8 8f       	std	Y+24, r26	; 0x18
     53c:	9e 01       	movw	r18, r28
     53e:	27 5e       	subi	r18, 0xE7	; 231
     540:	3f 4f       	sbci	r19, 0xFF	; 255
     542:	f9 01       	movw	r30, r18
     544:	11 92       	st	Z+, r1
     546:	8a 95       	dec	r24
     548:	e9 f7       	brne	.-6      	; 0x544 <__divdi3+0x25e>
     54a:	b9 8f       	std	Y+25, r27	; 0x19
     54c:	1a 8f       	std	Y+26, r17	; 0x1a
     54e:	0b 8f       	std	Y+27, r16	; 0x1b
     550:	fc 8e       	std	Y+28, r15	; 0x1c
     552:	ed 8e       	std	Y+29, r14	; 0x1d
     554:	de 8e       	std	Y+30, r13	; 0x1e
     556:	cf 8e       	std	Y+31, r12	; 0x1f
     558:	b8 a2       	std	Y+32, r11	; 0x20
     55a:	29 8c       	ldd	r2, Y+25	; 0x19
     55c:	3a 8c       	ldd	r3, Y+26	; 0x1a
     55e:	4b 8c       	ldd	r4, Y+27	; 0x1b
     560:	5c 8c       	ldd	r5, Y+28	; 0x1c
     562:	ed 8c       	ldd	r14, Y+29	; 0x1d
     564:	fe 8c       	ldd	r15, Y+30	; 0x1e
     566:	0f 8d       	ldd	r16, Y+31	; 0x1f
     568:	18 a1       	ldd	r17, Y+32	; 0x20
     56a:	69 88       	ldd	r6, Y+17	; 0x11
     56c:	7a 88       	ldd	r7, Y+18	; 0x12
     56e:	8b 88       	ldd	r8, Y+19	; 0x13
     570:	9c 88       	ldd	r9, Y+20	; 0x14
     572:	21 96       	adiw	r28, 0x01	; 1
     574:	6c ae       	std	Y+60, r6	; 0x3c
     576:	7d ae       	std	Y+61, r7	; 0x3d
     578:	8e ae       	std	Y+62, r8	; 0x3e
     57a:	9f ae       	std	Y+63, r9	; 0x3f
     57c:	21 97       	sbiw	r28, 0x01	; 1
     57e:	6d 88       	ldd	r6, Y+21	; 0x15
     580:	7e 88       	ldd	r7, Y+22	; 0x16
     582:	8f 88       	ldd	r8, Y+23	; 0x17
     584:	98 8c       	ldd	r9, Y+24	; 0x18
     586:	e1 14       	cp	r14, r1
     588:	f1 04       	cpc	r15, r1
     58a:	01 05       	cpc	r16, r1
     58c:	11 05       	cpc	r17, r1
     58e:	09 f0       	breq	.+2      	; 0x592 <__divdi3+0x2ac>
     590:	d9 c3       	rjmp	.+1970   	; 0xd44 <__stack+0x4e5>
     592:	62 14       	cp	r6, r2
     594:	73 04       	cpc	r7, r3
     596:	84 04       	cpc	r8, r4
     598:	95 04       	cpc	r9, r5
     59a:	08 f0       	brcs	.+2      	; 0x59e <__divdi3+0x2b8>
     59c:	57 c1       	rjmp	.+686    	; 0x84c <__divdi3+0x566>
     59e:	00 e0       	ldi	r16, 0x00	; 0
     5a0:	20 16       	cp	r2, r16
     5a2:	00 e0       	ldi	r16, 0x00	; 0
     5a4:	30 06       	cpc	r3, r16
     5a6:	01 e0       	ldi	r16, 0x01	; 1
     5a8:	40 06       	cpc	r4, r16
     5aa:	00 e0       	ldi	r16, 0x00	; 0
     5ac:	50 06       	cpc	r5, r16
     5ae:	88 f4       	brcc	.+34     	; 0x5d2 <__divdi3+0x2ec>
     5b0:	1f ef       	ldi	r17, 0xFF	; 255
     5b2:	21 16       	cp	r2, r17
     5b4:	31 04       	cpc	r3, r1
     5b6:	41 04       	cpc	r4, r1
     5b8:	51 04       	cpc	r5, r1
     5ba:	39 f0       	breq	.+14     	; 0x5ca <__divdi3+0x2e4>
     5bc:	30 f0       	brcs	.+12     	; 0x5ca <__divdi3+0x2e4>
     5be:	48 e0       	ldi	r20, 0x08	; 8
     5c0:	e4 2e       	mov	r14, r20
     5c2:	f1 2c       	mov	r15, r1
     5c4:	01 2d       	mov	r16, r1
     5c6:	11 2d       	mov	r17, r1
     5c8:	18 c0       	rjmp	.+48     	; 0x5fa <__divdi3+0x314>
     5ca:	ee 24       	eor	r14, r14
     5cc:	ff 24       	eor	r15, r15
     5ce:	87 01       	movw	r16, r14
     5d0:	14 c0       	rjmp	.+40     	; 0x5fa <__divdi3+0x314>
     5d2:	20 e0       	ldi	r18, 0x00	; 0
     5d4:	22 16       	cp	r2, r18
     5d6:	20 e0       	ldi	r18, 0x00	; 0
     5d8:	32 06       	cpc	r3, r18
     5da:	20 e0       	ldi	r18, 0x00	; 0
     5dc:	42 06       	cpc	r4, r18
     5de:	21 e0       	ldi	r18, 0x01	; 1
     5e0:	52 06       	cpc	r5, r18
     5e2:	30 f0       	brcs	.+12     	; 0x5f0 <__divdi3+0x30a>
     5e4:	38 e1       	ldi	r19, 0x18	; 24
     5e6:	e3 2e       	mov	r14, r19
     5e8:	f1 2c       	mov	r15, r1
     5ea:	01 2d       	mov	r16, r1
     5ec:	11 2d       	mov	r17, r1
     5ee:	05 c0       	rjmp	.+10     	; 0x5fa <__divdi3+0x314>
     5f0:	20 e1       	ldi	r18, 0x10	; 16
     5f2:	e2 2e       	mov	r14, r18
     5f4:	f1 2c       	mov	r15, r1
     5f6:	01 2d       	mov	r16, r1
     5f8:	11 2d       	mov	r17, r1
     5fa:	d2 01       	movw	r26, r4
     5fc:	c1 01       	movw	r24, r2
     5fe:	0e 2c       	mov	r0, r14
     600:	04 c0       	rjmp	.+8      	; 0x60a <__divdi3+0x324>
     602:	b6 95       	lsr	r27
     604:	a7 95       	ror	r26
     606:	97 95       	ror	r25
     608:	87 95       	ror	r24
     60a:	0a 94       	dec	r0
     60c:	d2 f7       	brpl	.-12     	; 0x602 <__divdi3+0x31c>
     60e:	88 59       	subi	r24, 0x98	; 152
     610:	9f 4f       	sbci	r25, 0xFF	; 255
     612:	dc 01       	movw	r26, r24
     614:	2c 91       	ld	r18, X
     616:	80 e2       	ldi	r24, 0x20	; 32
     618:	90 e0       	ldi	r25, 0x00	; 0
     61a:	a0 e0       	ldi	r26, 0x00	; 0
     61c:	b0 e0       	ldi	r27, 0x00	; 0
     61e:	8e 19       	sub	r24, r14
     620:	9f 09       	sbc	r25, r15
     622:	a0 0b       	sbc	r26, r16
     624:	b1 0b       	sbc	r27, r17
     626:	7c 01       	movw	r14, r24
     628:	8d 01       	movw	r16, r26
     62a:	e2 1a       	sub	r14, r18
     62c:	f1 08       	sbc	r15, r1
     62e:	01 09       	sbc	r16, r1
     630:	11 09       	sbc	r17, r1
     632:	e1 14       	cp	r14, r1
     634:	f1 04       	cpc	r15, r1
     636:	01 05       	cpc	r16, r1
     638:	11 05       	cpc	r17, r1
     63a:	d1 f1       	breq	.+116    	; 0x6b0 <__divdi3+0x3ca>
     63c:	0e 2c       	mov	r0, r14
     63e:	04 c0       	rjmp	.+8      	; 0x648 <__divdi3+0x362>
     640:	22 0c       	add	r2, r2
     642:	33 1c       	adc	r3, r3
     644:	44 1c       	adc	r4, r4
     646:	55 1c       	adc	r5, r5
     648:	0a 94       	dec	r0
     64a:	d2 f7       	brpl	.-12     	; 0x640 <__divdi3+0x35a>
     64c:	a4 01       	movw	r20, r8
     64e:	93 01       	movw	r18, r6
     650:	0e 2c       	mov	r0, r14
     652:	04 c0       	rjmp	.+8      	; 0x65c <__divdi3+0x376>
     654:	22 0f       	add	r18, r18
     656:	33 1f       	adc	r19, r19
     658:	44 1f       	adc	r20, r20
     65a:	55 1f       	adc	r21, r21
     65c:	0a 94       	dec	r0
     65e:	d2 f7       	brpl	.-12     	; 0x654 <__divdi3+0x36e>
     660:	80 e2       	ldi	r24, 0x20	; 32
     662:	90 e0       	ldi	r25, 0x00	; 0
     664:	8e 19       	sub	r24, r14
     666:	9f 09       	sbc	r25, r15
     668:	21 96       	adiw	r28, 0x01	; 1
     66a:	6c ac       	ldd	r6, Y+60	; 0x3c
     66c:	7d ac       	ldd	r7, Y+61	; 0x3d
     66e:	8e ac       	ldd	r8, Y+62	; 0x3e
     670:	9f ac       	ldd	r9, Y+63	; 0x3f
     672:	21 97       	sbiw	r28, 0x01	; 1
     674:	04 c0       	rjmp	.+8      	; 0x67e <__divdi3+0x398>
     676:	96 94       	lsr	r9
     678:	87 94       	ror	r8
     67a:	77 94       	ror	r7
     67c:	67 94       	ror	r6
     67e:	8a 95       	dec	r24
     680:	d2 f7       	brpl	.-12     	; 0x676 <__divdi3+0x390>
     682:	62 2a       	or	r6, r18
     684:	73 2a       	or	r7, r19
     686:	84 2a       	or	r8, r20
     688:	95 2a       	or	r9, r21
     68a:	21 96       	adiw	r28, 0x01	; 1
     68c:	ac ac       	ldd	r10, Y+60	; 0x3c
     68e:	bd ac       	ldd	r11, Y+61	; 0x3d
     690:	ce ac       	ldd	r12, Y+62	; 0x3e
     692:	df ac       	ldd	r13, Y+63	; 0x3f
     694:	21 97       	sbiw	r28, 0x01	; 1
     696:	04 c0       	rjmp	.+8      	; 0x6a0 <__divdi3+0x3ba>
     698:	aa 0c       	add	r10, r10
     69a:	bb 1c       	adc	r11, r11
     69c:	cc 1c       	adc	r12, r12
     69e:	dd 1c       	adc	r13, r13
     6a0:	ea 94       	dec	r14
     6a2:	d2 f7       	brpl	.-12     	; 0x698 <__divdi3+0x3b2>
     6a4:	21 96       	adiw	r28, 0x01	; 1
     6a6:	ac ae       	std	Y+60, r10	; 0x3c
     6a8:	bd ae       	std	Y+61, r11	; 0x3d
     6aa:	ce ae       	std	Y+62, r12	; 0x3e
     6ac:	df ae       	std	Y+63, r13	; 0x3f
     6ae:	21 97       	sbiw	r28, 0x01	; 1
     6b0:	62 01       	movw	r12, r4
     6b2:	ee 24       	eor	r14, r14
     6b4:	ff 24       	eor	r15, r15
     6b6:	29 96       	adiw	r28, 0x09	; 9
     6b8:	cc ae       	std	Y+60, r12	; 0x3c
     6ba:	dd ae       	std	Y+61, r13	; 0x3d
     6bc:	ee ae       	std	Y+62, r14	; 0x3e
     6be:	ff ae       	std	Y+63, r15	; 0x3f
     6c0:	29 97       	sbiw	r28, 0x09	; 9
     6c2:	92 01       	movw	r18, r4
     6c4:	81 01       	movw	r16, r2
     6c6:	20 70       	andi	r18, 0x00	; 0
     6c8:	30 70       	andi	r19, 0x00	; 0
     6ca:	2d 96       	adiw	r28, 0x0d	; 13
     6cc:	0c af       	std	Y+60, r16	; 0x3c
     6ce:	1d af       	std	Y+61, r17	; 0x3d
     6d0:	2e af       	std	Y+62, r18	; 0x3e
     6d2:	3f af       	std	Y+63, r19	; 0x3f
     6d4:	2d 97       	sbiw	r28, 0x0d	; 13
     6d6:	c4 01       	movw	r24, r8
     6d8:	b3 01       	movw	r22, r6
     6da:	a7 01       	movw	r20, r14
     6dc:	96 01       	movw	r18, r12
     6de:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     6e2:	7b 01       	movw	r14, r22
     6e4:	8c 01       	movw	r16, r24
     6e6:	c4 01       	movw	r24, r8
     6e8:	b3 01       	movw	r22, r6
     6ea:	29 96       	adiw	r28, 0x09	; 9
     6ec:	2c ad       	ldd	r18, Y+60	; 0x3c
     6ee:	3d ad       	ldd	r19, Y+61	; 0x3d
     6f0:	4e ad       	ldd	r20, Y+62	; 0x3e
     6f2:	5f ad       	ldd	r21, Y+63	; 0x3f
     6f4:	29 97       	sbiw	r28, 0x09	; 9
     6f6:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     6fa:	c9 01       	movw	r24, r18
     6fc:	da 01       	movw	r26, r20
     6fe:	3c 01       	movw	r6, r24
     700:	4d 01       	movw	r8, r26
     702:	c4 01       	movw	r24, r8
     704:	b3 01       	movw	r22, r6
     706:	2d 96       	adiw	r28, 0x0d	; 13
     708:	2c ad       	ldd	r18, Y+60	; 0x3c
     70a:	3d ad       	ldd	r19, Y+61	; 0x3d
     70c:	4e ad       	ldd	r20, Y+62	; 0x3e
     70e:	5f ad       	ldd	r21, Y+63	; 0x3f
     710:	2d 97       	sbiw	r28, 0x0d	; 13
     712:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
     716:	9b 01       	movw	r18, r22
     718:	ac 01       	movw	r20, r24
     71a:	87 01       	movw	r16, r14
     71c:	ff 24       	eor	r15, r15
     71e:	ee 24       	eor	r14, r14
     720:	21 96       	adiw	r28, 0x01	; 1
     722:	ac ac       	ldd	r10, Y+60	; 0x3c
     724:	bd ac       	ldd	r11, Y+61	; 0x3d
     726:	ce ac       	ldd	r12, Y+62	; 0x3e
     728:	df ac       	ldd	r13, Y+63	; 0x3f
     72a:	21 97       	sbiw	r28, 0x01	; 1
     72c:	c6 01       	movw	r24, r12
     72e:	aa 27       	eor	r26, r26
     730:	bb 27       	eor	r27, r27
     732:	57 01       	movw	r10, r14
     734:	68 01       	movw	r12, r16
     736:	a8 2a       	or	r10, r24
     738:	b9 2a       	or	r11, r25
     73a:	ca 2a       	or	r12, r26
     73c:	db 2a       	or	r13, r27
     73e:	a2 16       	cp	r10, r18
     740:	b3 06       	cpc	r11, r19
     742:	c4 06       	cpc	r12, r20
     744:	d5 06       	cpc	r13, r21
     746:	e0 f4       	brcc	.+56     	; 0x780 <__divdi3+0x49a>
     748:	08 94       	sec
     74a:	61 08       	sbc	r6, r1
     74c:	71 08       	sbc	r7, r1
     74e:	81 08       	sbc	r8, r1
     750:	91 08       	sbc	r9, r1
     752:	a2 0c       	add	r10, r2
     754:	b3 1c       	adc	r11, r3
     756:	c4 1c       	adc	r12, r4
     758:	d5 1c       	adc	r13, r5
     75a:	a2 14       	cp	r10, r2
     75c:	b3 04       	cpc	r11, r3
     75e:	c4 04       	cpc	r12, r4
     760:	d5 04       	cpc	r13, r5
     762:	70 f0       	brcs	.+28     	; 0x780 <__divdi3+0x49a>
     764:	a2 16       	cp	r10, r18
     766:	b3 06       	cpc	r11, r19
     768:	c4 06       	cpc	r12, r20
     76a:	d5 06       	cpc	r13, r21
     76c:	48 f4       	brcc	.+18     	; 0x780 <__divdi3+0x49a>
     76e:	08 94       	sec
     770:	61 08       	sbc	r6, r1
     772:	71 08       	sbc	r7, r1
     774:	81 08       	sbc	r8, r1
     776:	91 08       	sbc	r9, r1
     778:	a2 0c       	add	r10, r2
     77a:	b3 1c       	adc	r11, r3
     77c:	c4 1c       	adc	r12, r4
     77e:	d5 1c       	adc	r13, r5
     780:	a2 1a       	sub	r10, r18
     782:	b3 0a       	sbc	r11, r19
     784:	c4 0a       	sbc	r12, r20
     786:	d5 0a       	sbc	r13, r21
     788:	c6 01       	movw	r24, r12
     78a:	b5 01       	movw	r22, r10
     78c:	29 96       	adiw	r28, 0x09	; 9
     78e:	2c ad       	ldd	r18, Y+60	; 0x3c
     790:	3d ad       	ldd	r19, Y+61	; 0x3d
     792:	4e ad       	ldd	r20, Y+62	; 0x3e
     794:	5f ad       	ldd	r21, Y+63	; 0x3f
     796:	29 97       	sbiw	r28, 0x09	; 9
     798:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     79c:	7b 01       	movw	r14, r22
     79e:	8c 01       	movw	r16, r24
     7a0:	c6 01       	movw	r24, r12
     7a2:	b5 01       	movw	r22, r10
     7a4:	29 96       	adiw	r28, 0x09	; 9
     7a6:	2c ad       	ldd	r18, Y+60	; 0x3c
     7a8:	3d ad       	ldd	r19, Y+61	; 0x3d
     7aa:	4e ad       	ldd	r20, Y+62	; 0x3e
     7ac:	5f ad       	ldd	r21, Y+63	; 0x3f
     7ae:	29 97       	sbiw	r28, 0x09	; 9
     7b0:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     7b4:	c9 01       	movw	r24, r18
     7b6:	da 01       	movw	r26, r20
     7b8:	5c 01       	movw	r10, r24
     7ba:	6d 01       	movw	r12, r26
     7bc:	c6 01       	movw	r24, r12
     7be:	b5 01       	movw	r22, r10
     7c0:	2d 96       	adiw	r28, 0x0d	; 13
     7c2:	2c ad       	ldd	r18, Y+60	; 0x3c
     7c4:	3d ad       	ldd	r19, Y+61	; 0x3d
     7c6:	4e ad       	ldd	r20, Y+62	; 0x3e
     7c8:	5f ad       	ldd	r21, Y+63	; 0x3f
     7ca:	2d 97       	sbiw	r28, 0x0d	; 13
     7cc:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
     7d0:	9b 01       	movw	r18, r22
     7d2:	ac 01       	movw	r20, r24
     7d4:	87 01       	movw	r16, r14
     7d6:	ff 24       	eor	r15, r15
     7d8:	ee 24       	eor	r14, r14
     7da:	21 96       	adiw	r28, 0x01	; 1
     7dc:	8c ad       	ldd	r24, Y+60	; 0x3c
     7de:	9d ad       	ldd	r25, Y+61	; 0x3d
     7e0:	ae ad       	ldd	r26, Y+62	; 0x3e
     7e2:	bf ad       	ldd	r27, Y+63	; 0x3f
     7e4:	21 97       	sbiw	r28, 0x01	; 1
     7e6:	a0 70       	andi	r26, 0x00	; 0
     7e8:	b0 70       	andi	r27, 0x00	; 0
     7ea:	e8 2a       	or	r14, r24
     7ec:	f9 2a       	or	r15, r25
     7ee:	0a 2b       	or	r16, r26
     7f0:	1b 2b       	or	r17, r27
     7f2:	e2 16       	cp	r14, r18
     7f4:	f3 06       	cpc	r15, r19
     7f6:	04 07       	cpc	r16, r20
     7f8:	15 07       	cpc	r17, r21
     7fa:	c0 f4       	brcc	.+48     	; 0x82c <__divdi3+0x546>
     7fc:	08 94       	sec
     7fe:	a1 08       	sbc	r10, r1
     800:	b1 08       	sbc	r11, r1
     802:	c1 08       	sbc	r12, r1
     804:	d1 08       	sbc	r13, r1
     806:	e2 0c       	add	r14, r2
     808:	f3 1c       	adc	r15, r3
     80a:	04 1d       	adc	r16, r4
     80c:	15 1d       	adc	r17, r5
     80e:	e2 14       	cp	r14, r2
     810:	f3 04       	cpc	r15, r3
     812:	04 05       	cpc	r16, r4
     814:	15 05       	cpc	r17, r5
     816:	50 f0       	brcs	.+20     	; 0x82c <__divdi3+0x546>
     818:	e2 16       	cp	r14, r18
     81a:	f3 06       	cpc	r15, r19
     81c:	04 07       	cpc	r16, r20
     81e:	15 07       	cpc	r17, r21
     820:	28 f4       	brcc	.+10     	; 0x82c <__divdi3+0x546>
     822:	08 94       	sec
     824:	a1 08       	sbc	r10, r1
     826:	b1 08       	sbc	r11, r1
     828:	c1 08       	sbc	r12, r1
     82a:	d1 08       	sbc	r13, r1
     82c:	d3 01       	movw	r26, r6
     82e:	99 27       	eor	r25, r25
     830:	88 27       	eor	r24, r24
     832:	86 01       	movw	r16, r12
     834:	75 01       	movw	r14, r10
     836:	e8 2a       	or	r14, r24
     838:	f9 2a       	or	r15, r25
     83a:	0a 2b       	or	r16, r26
     83c:	1b 2b       	or	r17, r27
     83e:	25 96       	adiw	r28, 0x05	; 5
     840:	ec ae       	std	Y+60, r14	; 0x3c
     842:	fd ae       	std	Y+61, r15	; 0x3d
     844:	0e af       	std	Y+62, r16	; 0x3e
     846:	1f af       	std	Y+63, r17	; 0x3f
     848:	25 97       	sbiw	r28, 0x05	; 5
     84a:	eb c4       	rjmp	.+2518   	; 0x1222 <__stack+0x9c3>
     84c:	21 14       	cp	r2, r1
     84e:	31 04       	cpc	r3, r1
     850:	41 04       	cpc	r4, r1
     852:	51 04       	cpc	r5, r1
     854:	71 f4       	brne	.+28     	; 0x872 <__stack+0x13>
     856:	61 e0       	ldi	r22, 0x01	; 1
     858:	70 e0       	ldi	r23, 0x00	; 0
     85a:	80 e0       	ldi	r24, 0x00	; 0
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	20 e0       	ldi	r18, 0x00	; 0
     860:	30 e0       	ldi	r19, 0x00	; 0
     862:	40 e0       	ldi	r20, 0x00	; 0
     864:	50 e0       	ldi	r21, 0x00	; 0
     866:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     86a:	c9 01       	movw	r24, r18
     86c:	da 01       	movw	r26, r20
     86e:	1c 01       	movw	r2, r24
     870:	2d 01       	movw	r4, r26
     872:	00 e0       	ldi	r16, 0x00	; 0
     874:	20 16       	cp	r2, r16
     876:	00 e0       	ldi	r16, 0x00	; 0
     878:	30 06       	cpc	r3, r16
     87a:	01 e0       	ldi	r16, 0x01	; 1
     87c:	40 06       	cpc	r4, r16
     87e:	00 e0       	ldi	r16, 0x00	; 0
     880:	50 06       	cpc	r5, r16
     882:	88 f4       	brcc	.+34     	; 0x8a6 <__stack+0x47>
     884:	1f ef       	ldi	r17, 0xFF	; 255
     886:	21 16       	cp	r2, r17
     888:	31 04       	cpc	r3, r1
     88a:	41 04       	cpc	r4, r1
     88c:	51 04       	cpc	r5, r1
     88e:	31 f0       	breq	.+12     	; 0x89c <__stack+0x3d>
     890:	28 f0       	brcs	.+10     	; 0x89c <__stack+0x3d>
     892:	48 e0       	ldi	r20, 0x08	; 8
     894:	50 e0       	ldi	r21, 0x00	; 0
     896:	60 e0       	ldi	r22, 0x00	; 0
     898:	70 e0       	ldi	r23, 0x00	; 0
     89a:	17 c0       	rjmp	.+46     	; 0x8ca <__stack+0x6b>
     89c:	40 e0       	ldi	r20, 0x00	; 0
     89e:	50 e0       	ldi	r21, 0x00	; 0
     8a0:	60 e0       	ldi	r22, 0x00	; 0
     8a2:	70 e0       	ldi	r23, 0x00	; 0
     8a4:	12 c0       	rjmp	.+36     	; 0x8ca <__stack+0x6b>
     8a6:	20 e0       	ldi	r18, 0x00	; 0
     8a8:	22 16       	cp	r2, r18
     8aa:	20 e0       	ldi	r18, 0x00	; 0
     8ac:	32 06       	cpc	r3, r18
     8ae:	20 e0       	ldi	r18, 0x00	; 0
     8b0:	42 06       	cpc	r4, r18
     8b2:	21 e0       	ldi	r18, 0x01	; 1
     8b4:	52 06       	cpc	r5, r18
     8b6:	28 f0       	brcs	.+10     	; 0x8c2 <__stack+0x63>
     8b8:	48 e1       	ldi	r20, 0x18	; 24
     8ba:	50 e0       	ldi	r21, 0x00	; 0
     8bc:	60 e0       	ldi	r22, 0x00	; 0
     8be:	70 e0       	ldi	r23, 0x00	; 0
     8c0:	04 c0       	rjmp	.+8      	; 0x8ca <__stack+0x6b>
     8c2:	40 e1       	ldi	r20, 0x10	; 16
     8c4:	50 e0       	ldi	r21, 0x00	; 0
     8c6:	60 e0       	ldi	r22, 0x00	; 0
     8c8:	70 e0       	ldi	r23, 0x00	; 0
     8ca:	d2 01       	movw	r26, r4
     8cc:	c1 01       	movw	r24, r2
     8ce:	04 2e       	mov	r0, r20
     8d0:	04 c0       	rjmp	.+8      	; 0x8da <__stack+0x7b>
     8d2:	b6 95       	lsr	r27
     8d4:	a7 95       	ror	r26
     8d6:	97 95       	ror	r25
     8d8:	87 95       	ror	r24
     8da:	0a 94       	dec	r0
     8dc:	d2 f7       	brpl	.-12     	; 0x8d2 <__stack+0x73>
     8de:	88 59       	subi	r24, 0x98	; 152
     8e0:	9f 4f       	sbci	r25, 0xFF	; 255
     8e2:	dc 01       	movw	r26, r24
     8e4:	2c 91       	ld	r18, X
     8e6:	e0 e2       	ldi	r30, 0x20	; 32
     8e8:	ee 2e       	mov	r14, r30
     8ea:	f1 2c       	mov	r15, r1
     8ec:	01 2d       	mov	r16, r1
     8ee:	11 2d       	mov	r17, r1
     8f0:	d8 01       	movw	r26, r16
     8f2:	c7 01       	movw	r24, r14
     8f4:	84 1b       	sub	r24, r20
     8f6:	95 0b       	sbc	r25, r21
     8f8:	a6 0b       	sbc	r26, r22
     8fa:	b7 0b       	sbc	r27, r23
     8fc:	82 1b       	sub	r24, r18
     8fe:	91 09       	sbc	r25, r1
     900:	a1 09       	sbc	r26, r1
     902:	b1 09       	sbc	r27, r1
     904:	00 97       	sbiw	r24, 0x00	; 0
     906:	a1 05       	cpc	r26, r1
     908:	b1 05       	cpc	r27, r1
     90a:	61 f4       	brne	.+24     	; 0x924 <__stack+0xc5>
     90c:	64 01       	movw	r12, r8
     90e:	53 01       	movw	r10, r6
     910:	a2 18       	sub	r10, r2
     912:	b3 08       	sbc	r11, r3
     914:	c4 08       	sbc	r12, r4
     916:	d5 08       	sbc	r13, r5
     918:	31 e0       	ldi	r19, 0x01	; 1
     91a:	63 2e       	mov	r6, r19
     91c:	71 2c       	mov	r7, r1
     91e:	81 2c       	mov	r8, r1
     920:	91 2c       	mov	r9, r1
     922:	24 c1       	rjmp	.+584    	; 0xb6c <__stack+0x30d>
     924:	e3 96       	adiw	r28, 0x33	; 51
     926:	8f af       	std	Y+63, r24	; 0x3f
     928:	e3 97       	sbiw	r28, 0x33	; 51
     92a:	08 2e       	mov	r0, r24
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	22 0c       	add	r2, r2
     930:	33 1c       	adc	r3, r3
     932:	44 1c       	adc	r4, r4
     934:	55 1c       	adc	r5, r5
     936:	0a 94       	dec	r0
     938:	d2 f7       	brpl	.-12     	; 0x92e <__stack+0xcf>
     93a:	ee 2d       	mov	r30, r14
     93c:	e8 1b       	sub	r30, r24
     93e:	64 01       	movw	r12, r8
     940:	53 01       	movw	r10, r6
     942:	0e 2e       	mov	r0, r30
     944:	04 c0       	rjmp	.+8      	; 0x94e <__stack+0xef>
     946:	d6 94       	lsr	r13
     948:	c7 94       	ror	r12
     94a:	b7 94       	ror	r11
     94c:	a7 94       	ror	r10
     94e:	0a 94       	dec	r0
     950:	d2 f7       	brpl	.-12     	; 0x946 <__stack+0xe7>
     952:	a4 01       	movw	r20, r8
     954:	93 01       	movw	r18, r6
     956:	e3 96       	adiw	r28, 0x33	; 51
     958:	0f ac       	ldd	r0, Y+63	; 0x3f
     95a:	e3 97       	sbiw	r28, 0x33	; 51
     95c:	04 c0       	rjmp	.+8      	; 0x966 <__stack+0x107>
     95e:	22 0f       	add	r18, r18
     960:	33 1f       	adc	r19, r19
     962:	44 1f       	adc	r20, r20
     964:	55 1f       	adc	r21, r21
     966:	0a 94       	dec	r0
     968:	d2 f7       	brpl	.-12     	; 0x95e <__stack+0xff>
     96a:	21 96       	adiw	r28, 0x01	; 1
     96c:	6c ac       	ldd	r6, Y+60	; 0x3c
     96e:	7d ac       	ldd	r7, Y+61	; 0x3d
     970:	8e ac       	ldd	r8, Y+62	; 0x3e
     972:	9f ac       	ldd	r9, Y+63	; 0x3f
     974:	21 97       	sbiw	r28, 0x01	; 1
     976:	0e 2e       	mov	r0, r30
     978:	04 c0       	rjmp	.+8      	; 0x982 <__stack+0x123>
     97a:	96 94       	lsr	r9
     97c:	87 94       	ror	r8
     97e:	77 94       	ror	r7
     980:	67 94       	ror	r6
     982:	0a 94       	dec	r0
     984:	d2 f7       	brpl	.-12     	; 0x97a <__stack+0x11b>
     986:	84 01       	movw	r16, r8
     988:	73 01       	movw	r14, r6
     98a:	e2 2a       	or	r14, r18
     98c:	f3 2a       	or	r15, r19
     98e:	04 2b       	or	r16, r20
     990:	15 2b       	or	r17, r21
     992:	e9 ae       	std	Y+57, r14	; 0x39
     994:	fa ae       	std	Y+58, r15	; 0x3a
     996:	0b af       	std	Y+59, r16	; 0x3b
     998:	1c af       	std	Y+60, r17	; 0x3c
     99a:	32 01       	movw	r6, r4
     99c:	88 24       	eor	r8, r8
     99e:	99 24       	eor	r9, r9
     9a0:	92 01       	movw	r18, r4
     9a2:	81 01       	movw	r16, r2
     9a4:	20 70       	andi	r18, 0x00	; 0
     9a6:	30 70       	andi	r19, 0x00	; 0
     9a8:	61 96       	adiw	r28, 0x11	; 17
     9aa:	0c af       	std	Y+60, r16	; 0x3c
     9ac:	1d af       	std	Y+61, r17	; 0x3d
     9ae:	2e af       	std	Y+62, r18	; 0x3e
     9b0:	3f af       	std	Y+63, r19	; 0x3f
     9b2:	61 97       	sbiw	r28, 0x11	; 17
     9b4:	c6 01       	movw	r24, r12
     9b6:	b5 01       	movw	r22, r10
     9b8:	a4 01       	movw	r20, r8
     9ba:	93 01       	movw	r18, r6
     9bc:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     9c0:	7b 01       	movw	r14, r22
     9c2:	8c 01       	movw	r16, r24
     9c4:	c6 01       	movw	r24, r12
     9c6:	b5 01       	movw	r22, r10
     9c8:	a4 01       	movw	r20, r8
     9ca:	93 01       	movw	r18, r6
     9cc:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     9d0:	c9 01       	movw	r24, r18
     9d2:	da 01       	movw	r26, r20
     9d4:	65 96       	adiw	r28, 0x15	; 21
     9d6:	8c af       	std	Y+60, r24	; 0x3c
     9d8:	9d af       	std	Y+61, r25	; 0x3d
     9da:	ae af       	std	Y+62, r26	; 0x3e
     9dc:	bf af       	std	Y+63, r27	; 0x3f
     9de:	65 97       	sbiw	r28, 0x15	; 21
     9e0:	bc 01       	movw	r22, r24
     9e2:	cd 01       	movw	r24, r26
     9e4:	61 96       	adiw	r28, 0x11	; 17
     9e6:	2c ad       	ldd	r18, Y+60	; 0x3c
     9e8:	3d ad       	ldd	r19, Y+61	; 0x3d
     9ea:	4e ad       	ldd	r20, Y+62	; 0x3e
     9ec:	5f ad       	ldd	r21, Y+63	; 0x3f
     9ee:	61 97       	sbiw	r28, 0x11	; 17
     9f0:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
     9f4:	9b 01       	movw	r18, r22
     9f6:	ac 01       	movw	r20, r24
     9f8:	87 01       	movw	r16, r14
     9fa:	ff 24       	eor	r15, r15
     9fc:	ee 24       	eor	r14, r14
     9fe:	a9 ac       	ldd	r10, Y+57	; 0x39
     a00:	ba ac       	ldd	r11, Y+58	; 0x3a
     a02:	cb ac       	ldd	r12, Y+59	; 0x3b
     a04:	dc ac       	ldd	r13, Y+60	; 0x3c
     a06:	c6 01       	movw	r24, r12
     a08:	aa 27       	eor	r26, r26
     a0a:	bb 27       	eor	r27, r27
     a0c:	5c 01       	movw	r10, r24
     a0e:	6d 01       	movw	r12, r26
     a10:	ae 28       	or	r10, r14
     a12:	bf 28       	or	r11, r15
     a14:	c0 2a       	or	r12, r16
     a16:	d1 2a       	or	r13, r17
     a18:	a2 16       	cp	r10, r18
     a1a:	b3 06       	cpc	r11, r19
     a1c:	c4 06       	cpc	r12, r20
     a1e:	d5 06       	cpc	r13, r21
     a20:	60 f5       	brcc	.+88     	; 0xa7a <__stack+0x21b>
     a22:	65 96       	adiw	r28, 0x15	; 21
     a24:	6c ad       	ldd	r22, Y+60	; 0x3c
     a26:	7d ad       	ldd	r23, Y+61	; 0x3d
     a28:	8e ad       	ldd	r24, Y+62	; 0x3e
     a2a:	9f ad       	ldd	r25, Y+63	; 0x3f
     a2c:	65 97       	sbiw	r28, 0x15	; 21
     a2e:	61 50       	subi	r22, 0x01	; 1
     a30:	70 40       	sbci	r23, 0x00	; 0
     a32:	80 40       	sbci	r24, 0x00	; 0
     a34:	90 40       	sbci	r25, 0x00	; 0
     a36:	65 96       	adiw	r28, 0x15	; 21
     a38:	6c af       	std	Y+60, r22	; 0x3c
     a3a:	7d af       	std	Y+61, r23	; 0x3d
     a3c:	8e af       	std	Y+62, r24	; 0x3e
     a3e:	9f af       	std	Y+63, r25	; 0x3f
     a40:	65 97       	sbiw	r28, 0x15	; 21
     a42:	a2 0c       	add	r10, r2
     a44:	b3 1c       	adc	r11, r3
     a46:	c4 1c       	adc	r12, r4
     a48:	d5 1c       	adc	r13, r5
     a4a:	a2 14       	cp	r10, r2
     a4c:	b3 04       	cpc	r11, r3
     a4e:	c4 04       	cpc	r12, r4
     a50:	d5 04       	cpc	r13, r5
     a52:	98 f0       	brcs	.+38     	; 0xa7a <__stack+0x21b>
     a54:	a2 16       	cp	r10, r18
     a56:	b3 06       	cpc	r11, r19
     a58:	c4 06       	cpc	r12, r20
     a5a:	d5 06       	cpc	r13, r21
     a5c:	70 f4       	brcc	.+28     	; 0xa7a <__stack+0x21b>
     a5e:	61 50       	subi	r22, 0x01	; 1
     a60:	70 40       	sbci	r23, 0x00	; 0
     a62:	80 40       	sbci	r24, 0x00	; 0
     a64:	90 40       	sbci	r25, 0x00	; 0
     a66:	65 96       	adiw	r28, 0x15	; 21
     a68:	6c af       	std	Y+60, r22	; 0x3c
     a6a:	7d af       	std	Y+61, r23	; 0x3d
     a6c:	8e af       	std	Y+62, r24	; 0x3e
     a6e:	9f af       	std	Y+63, r25	; 0x3f
     a70:	65 97       	sbiw	r28, 0x15	; 21
     a72:	a2 0c       	add	r10, r2
     a74:	b3 1c       	adc	r11, r3
     a76:	c4 1c       	adc	r12, r4
     a78:	d5 1c       	adc	r13, r5
     a7a:	a2 1a       	sub	r10, r18
     a7c:	b3 0a       	sbc	r11, r19
     a7e:	c4 0a       	sbc	r12, r20
     a80:	d5 0a       	sbc	r13, r21
     a82:	c6 01       	movw	r24, r12
     a84:	b5 01       	movw	r22, r10
     a86:	a4 01       	movw	r20, r8
     a88:	93 01       	movw	r18, r6
     a8a:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     a8e:	7b 01       	movw	r14, r22
     a90:	8c 01       	movw	r16, r24
     a92:	c6 01       	movw	r24, r12
     a94:	b5 01       	movw	r22, r10
     a96:	a4 01       	movw	r20, r8
     a98:	93 01       	movw	r18, r6
     a9a:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     a9e:	c9 01       	movw	r24, r18
     aa0:	da 01       	movw	r26, r20
     aa2:	3c 01       	movw	r6, r24
     aa4:	4d 01       	movw	r8, r26
     aa6:	c4 01       	movw	r24, r8
     aa8:	b3 01       	movw	r22, r6
     aaa:	61 96       	adiw	r28, 0x11	; 17
     aac:	2c ad       	ldd	r18, Y+60	; 0x3c
     aae:	3d ad       	ldd	r19, Y+61	; 0x3d
     ab0:	4e ad       	ldd	r20, Y+62	; 0x3e
     ab2:	5f ad       	ldd	r21, Y+63	; 0x3f
     ab4:	61 97       	sbiw	r28, 0x11	; 17
     ab6:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
     aba:	9b 01       	movw	r18, r22
     abc:	ac 01       	movw	r20, r24
     abe:	87 01       	movw	r16, r14
     ac0:	ff 24       	eor	r15, r15
     ac2:	ee 24       	eor	r14, r14
     ac4:	89 ad       	ldd	r24, Y+57	; 0x39
     ac6:	9a ad       	ldd	r25, Y+58	; 0x3a
     ac8:	ab ad       	ldd	r26, Y+59	; 0x3b
     aca:	bc ad       	ldd	r27, Y+60	; 0x3c
     acc:	a0 70       	andi	r26, 0x00	; 0
     ace:	b0 70       	andi	r27, 0x00	; 0
     ad0:	57 01       	movw	r10, r14
     ad2:	68 01       	movw	r12, r16
     ad4:	a8 2a       	or	r10, r24
     ad6:	b9 2a       	or	r11, r25
     ad8:	ca 2a       	or	r12, r26
     ada:	db 2a       	or	r13, r27
     adc:	a2 16       	cp	r10, r18
     ade:	b3 06       	cpc	r11, r19
     ae0:	c4 06       	cpc	r12, r20
     ae2:	d5 06       	cpc	r13, r21
     ae4:	e0 f4       	brcc	.+56     	; 0xb1e <__stack+0x2bf>
     ae6:	08 94       	sec
     ae8:	61 08       	sbc	r6, r1
     aea:	71 08       	sbc	r7, r1
     aec:	81 08       	sbc	r8, r1
     aee:	91 08       	sbc	r9, r1
     af0:	a2 0c       	add	r10, r2
     af2:	b3 1c       	adc	r11, r3
     af4:	c4 1c       	adc	r12, r4
     af6:	d5 1c       	adc	r13, r5
     af8:	a2 14       	cp	r10, r2
     afa:	b3 04       	cpc	r11, r3
     afc:	c4 04       	cpc	r12, r4
     afe:	d5 04       	cpc	r13, r5
     b00:	70 f0       	brcs	.+28     	; 0xb1e <__stack+0x2bf>
     b02:	a2 16       	cp	r10, r18
     b04:	b3 06       	cpc	r11, r19
     b06:	c4 06       	cpc	r12, r20
     b08:	d5 06       	cpc	r13, r21
     b0a:	48 f4       	brcc	.+18     	; 0xb1e <__stack+0x2bf>
     b0c:	08 94       	sec
     b0e:	61 08       	sbc	r6, r1
     b10:	71 08       	sbc	r7, r1
     b12:	81 08       	sbc	r8, r1
     b14:	91 08       	sbc	r9, r1
     b16:	a2 0c       	add	r10, r2
     b18:	b3 1c       	adc	r11, r3
     b1a:	c4 1c       	adc	r12, r4
     b1c:	d5 1c       	adc	r13, r5
     b1e:	21 96       	adiw	r28, 0x01	; 1
     b20:	8c ad       	ldd	r24, Y+60	; 0x3c
     b22:	9d ad       	ldd	r25, Y+61	; 0x3d
     b24:	ae ad       	ldd	r26, Y+62	; 0x3e
     b26:	bf ad       	ldd	r27, Y+63	; 0x3f
     b28:	21 97       	sbiw	r28, 0x01	; 1
     b2a:	e3 96       	adiw	r28, 0x33	; 51
     b2c:	0f ac       	ldd	r0, Y+63	; 0x3f
     b2e:	e3 97       	sbiw	r28, 0x33	; 51
     b30:	04 c0       	rjmp	.+8      	; 0xb3a <__stack+0x2db>
     b32:	88 0f       	add	r24, r24
     b34:	99 1f       	adc	r25, r25
     b36:	aa 1f       	adc	r26, r26
     b38:	bb 1f       	adc	r27, r27
     b3a:	0a 94       	dec	r0
     b3c:	d2 f7       	brpl	.-12     	; 0xb32 <__stack+0x2d3>
     b3e:	21 96       	adiw	r28, 0x01	; 1
     b40:	8c af       	std	Y+60, r24	; 0x3c
     b42:	9d af       	std	Y+61, r25	; 0x3d
     b44:	ae af       	std	Y+62, r26	; 0x3e
     b46:	bf af       	std	Y+63, r27	; 0x3f
     b48:	21 97       	sbiw	r28, 0x01	; 1
     b4a:	a2 1a       	sub	r10, r18
     b4c:	b3 0a       	sbc	r11, r19
     b4e:	c4 0a       	sbc	r12, r20
     b50:	d5 0a       	sbc	r13, r21
     b52:	65 96       	adiw	r28, 0x15	; 21
     b54:	ec ac       	ldd	r14, Y+60	; 0x3c
     b56:	fd ac       	ldd	r15, Y+61	; 0x3d
     b58:	0e ad       	ldd	r16, Y+62	; 0x3e
     b5a:	1f ad       	ldd	r17, Y+63	; 0x3f
     b5c:	65 97       	sbiw	r28, 0x15	; 21
     b5e:	d7 01       	movw	r26, r14
     b60:	99 27       	eor	r25, r25
     b62:	88 27       	eor	r24, r24
     b64:	68 2a       	or	r6, r24
     b66:	79 2a       	or	r7, r25
     b68:	8a 2a       	or	r8, r26
     b6a:	9b 2a       	or	r9, r27
     b6c:	82 01       	movw	r16, r4
     b6e:	22 27       	eor	r18, r18
     b70:	33 27       	eor	r19, r19
     b72:	69 96       	adiw	r28, 0x19	; 25
     b74:	0c af       	std	Y+60, r16	; 0x3c
     b76:	1d af       	std	Y+61, r17	; 0x3d
     b78:	2e af       	std	Y+62, r18	; 0x3e
     b7a:	3f af       	std	Y+63, r19	; 0x3f
     b7c:	69 97       	sbiw	r28, 0x19	; 25
     b7e:	a2 01       	movw	r20, r4
     b80:	91 01       	movw	r18, r2
     b82:	40 70       	andi	r20, 0x00	; 0
     b84:	50 70       	andi	r21, 0x00	; 0
     b86:	6d 96       	adiw	r28, 0x1d	; 29
     b88:	2c af       	std	Y+60, r18	; 0x3c
     b8a:	3d af       	std	Y+61, r19	; 0x3d
     b8c:	4e af       	std	Y+62, r20	; 0x3e
     b8e:	5f af       	std	Y+63, r21	; 0x3f
     b90:	6d 97       	sbiw	r28, 0x1d	; 29
     b92:	c6 01       	movw	r24, r12
     b94:	b5 01       	movw	r22, r10
     b96:	69 96       	adiw	r28, 0x19	; 25
     b98:	2c ad       	ldd	r18, Y+60	; 0x3c
     b9a:	3d ad       	ldd	r19, Y+61	; 0x3d
     b9c:	4e ad       	ldd	r20, Y+62	; 0x3e
     b9e:	5f ad       	ldd	r21, Y+63	; 0x3f
     ba0:	69 97       	sbiw	r28, 0x19	; 25
     ba2:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     ba6:	7b 01       	movw	r14, r22
     ba8:	8c 01       	movw	r16, r24
     baa:	c6 01       	movw	r24, r12
     bac:	b5 01       	movw	r22, r10
     bae:	69 96       	adiw	r28, 0x19	; 25
     bb0:	2c ad       	ldd	r18, Y+60	; 0x3c
     bb2:	3d ad       	ldd	r19, Y+61	; 0x3d
     bb4:	4e ad       	ldd	r20, Y+62	; 0x3e
     bb6:	5f ad       	ldd	r21, Y+63	; 0x3f
     bb8:	69 97       	sbiw	r28, 0x19	; 25
     bba:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     bbe:	c9 01       	movw	r24, r18
     bc0:	da 01       	movw	r26, r20
     bc2:	a1 96       	adiw	r28, 0x21	; 33
     bc4:	8c af       	std	Y+60, r24	; 0x3c
     bc6:	9d af       	std	Y+61, r25	; 0x3d
     bc8:	ae af       	std	Y+62, r26	; 0x3e
     bca:	bf af       	std	Y+63, r27	; 0x3f
     bcc:	a1 97       	sbiw	r28, 0x21	; 33
     bce:	bc 01       	movw	r22, r24
     bd0:	cd 01       	movw	r24, r26
     bd2:	6d 96       	adiw	r28, 0x1d	; 29
     bd4:	2c ad       	ldd	r18, Y+60	; 0x3c
     bd6:	3d ad       	ldd	r19, Y+61	; 0x3d
     bd8:	4e ad       	ldd	r20, Y+62	; 0x3e
     bda:	5f ad       	ldd	r21, Y+63	; 0x3f
     bdc:	6d 97       	sbiw	r28, 0x1d	; 29
     bde:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
     be2:	9b 01       	movw	r18, r22
     be4:	ac 01       	movw	r20, r24
     be6:	87 01       	movw	r16, r14
     be8:	ff 24       	eor	r15, r15
     bea:	ee 24       	eor	r14, r14
     bec:	21 96       	adiw	r28, 0x01	; 1
     bee:	ac ac       	ldd	r10, Y+60	; 0x3c
     bf0:	bd ac       	ldd	r11, Y+61	; 0x3d
     bf2:	ce ac       	ldd	r12, Y+62	; 0x3e
     bf4:	df ac       	ldd	r13, Y+63	; 0x3f
     bf6:	21 97       	sbiw	r28, 0x01	; 1
     bf8:	c6 01       	movw	r24, r12
     bfa:	aa 27       	eor	r26, r26
     bfc:	bb 27       	eor	r27, r27
     bfe:	57 01       	movw	r10, r14
     c00:	68 01       	movw	r12, r16
     c02:	a8 2a       	or	r10, r24
     c04:	b9 2a       	or	r11, r25
     c06:	ca 2a       	or	r12, r26
     c08:	db 2a       	or	r13, r27
     c0a:	a2 16       	cp	r10, r18
     c0c:	b3 06       	cpc	r11, r19
     c0e:	c4 06       	cpc	r12, r20
     c10:	d5 06       	cpc	r13, r21
     c12:	60 f5       	brcc	.+88     	; 0xc6c <__stack+0x40d>
     c14:	a1 96       	adiw	r28, 0x21	; 33
     c16:	6c ad       	ldd	r22, Y+60	; 0x3c
     c18:	7d ad       	ldd	r23, Y+61	; 0x3d
     c1a:	8e ad       	ldd	r24, Y+62	; 0x3e
     c1c:	9f ad       	ldd	r25, Y+63	; 0x3f
     c1e:	a1 97       	sbiw	r28, 0x21	; 33
     c20:	61 50       	subi	r22, 0x01	; 1
     c22:	70 40       	sbci	r23, 0x00	; 0
     c24:	80 40       	sbci	r24, 0x00	; 0
     c26:	90 40       	sbci	r25, 0x00	; 0
     c28:	a1 96       	adiw	r28, 0x21	; 33
     c2a:	6c af       	std	Y+60, r22	; 0x3c
     c2c:	7d af       	std	Y+61, r23	; 0x3d
     c2e:	8e af       	std	Y+62, r24	; 0x3e
     c30:	9f af       	std	Y+63, r25	; 0x3f
     c32:	a1 97       	sbiw	r28, 0x21	; 33
     c34:	a2 0c       	add	r10, r2
     c36:	b3 1c       	adc	r11, r3
     c38:	c4 1c       	adc	r12, r4
     c3a:	d5 1c       	adc	r13, r5
     c3c:	a2 14       	cp	r10, r2
     c3e:	b3 04       	cpc	r11, r3
     c40:	c4 04       	cpc	r12, r4
     c42:	d5 04       	cpc	r13, r5
     c44:	98 f0       	brcs	.+38     	; 0xc6c <__stack+0x40d>
     c46:	a2 16       	cp	r10, r18
     c48:	b3 06       	cpc	r11, r19
     c4a:	c4 06       	cpc	r12, r20
     c4c:	d5 06       	cpc	r13, r21
     c4e:	70 f4       	brcc	.+28     	; 0xc6c <__stack+0x40d>
     c50:	61 50       	subi	r22, 0x01	; 1
     c52:	70 40       	sbci	r23, 0x00	; 0
     c54:	80 40       	sbci	r24, 0x00	; 0
     c56:	90 40       	sbci	r25, 0x00	; 0
     c58:	a1 96       	adiw	r28, 0x21	; 33
     c5a:	6c af       	std	Y+60, r22	; 0x3c
     c5c:	7d af       	std	Y+61, r23	; 0x3d
     c5e:	8e af       	std	Y+62, r24	; 0x3e
     c60:	9f af       	std	Y+63, r25	; 0x3f
     c62:	a1 97       	sbiw	r28, 0x21	; 33
     c64:	a2 0c       	add	r10, r2
     c66:	b3 1c       	adc	r11, r3
     c68:	c4 1c       	adc	r12, r4
     c6a:	d5 1c       	adc	r13, r5
     c6c:	a2 1a       	sub	r10, r18
     c6e:	b3 0a       	sbc	r11, r19
     c70:	c4 0a       	sbc	r12, r20
     c72:	d5 0a       	sbc	r13, r21
     c74:	c6 01       	movw	r24, r12
     c76:	b5 01       	movw	r22, r10
     c78:	69 96       	adiw	r28, 0x19	; 25
     c7a:	2c ad       	ldd	r18, Y+60	; 0x3c
     c7c:	3d ad       	ldd	r19, Y+61	; 0x3d
     c7e:	4e ad       	ldd	r20, Y+62	; 0x3e
     c80:	5f ad       	ldd	r21, Y+63	; 0x3f
     c82:	69 97       	sbiw	r28, 0x19	; 25
     c84:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     c88:	7b 01       	movw	r14, r22
     c8a:	8c 01       	movw	r16, r24
     c8c:	c6 01       	movw	r24, r12
     c8e:	b5 01       	movw	r22, r10
     c90:	69 96       	adiw	r28, 0x19	; 25
     c92:	2c ad       	ldd	r18, Y+60	; 0x3c
     c94:	3d ad       	ldd	r19, Y+61	; 0x3d
     c96:	4e ad       	ldd	r20, Y+62	; 0x3e
     c98:	5f ad       	ldd	r21, Y+63	; 0x3f
     c9a:	69 97       	sbiw	r28, 0x19	; 25
     c9c:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     ca0:	c9 01       	movw	r24, r18
     ca2:	da 01       	movw	r26, r20
     ca4:	5c 01       	movw	r10, r24
     ca6:	6d 01       	movw	r12, r26
     ca8:	c6 01       	movw	r24, r12
     caa:	b5 01       	movw	r22, r10
     cac:	6d 96       	adiw	r28, 0x1d	; 29
     cae:	2c ad       	ldd	r18, Y+60	; 0x3c
     cb0:	3d ad       	ldd	r19, Y+61	; 0x3d
     cb2:	4e ad       	ldd	r20, Y+62	; 0x3e
     cb4:	5f ad       	ldd	r21, Y+63	; 0x3f
     cb6:	6d 97       	sbiw	r28, 0x1d	; 29
     cb8:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
     cbc:	9b 01       	movw	r18, r22
     cbe:	ac 01       	movw	r20, r24
     cc0:	87 01       	movw	r16, r14
     cc2:	ff 24       	eor	r15, r15
     cc4:	ee 24       	eor	r14, r14
     cc6:	21 96       	adiw	r28, 0x01	; 1
     cc8:	8c ad       	ldd	r24, Y+60	; 0x3c
     cca:	9d ad       	ldd	r25, Y+61	; 0x3d
     ccc:	ae ad       	ldd	r26, Y+62	; 0x3e
     cce:	bf ad       	ldd	r27, Y+63	; 0x3f
     cd0:	21 97       	sbiw	r28, 0x01	; 1
     cd2:	a0 70       	andi	r26, 0x00	; 0
     cd4:	b0 70       	andi	r27, 0x00	; 0
     cd6:	e8 2a       	or	r14, r24
     cd8:	f9 2a       	or	r15, r25
     cda:	0a 2b       	or	r16, r26
     cdc:	1b 2b       	or	r17, r27
     cde:	e2 16       	cp	r14, r18
     ce0:	f3 06       	cpc	r15, r19
     ce2:	04 07       	cpc	r16, r20
     ce4:	15 07       	cpc	r17, r21
     ce6:	c0 f4       	brcc	.+48     	; 0xd18 <__stack+0x4b9>
     ce8:	08 94       	sec
     cea:	a1 08       	sbc	r10, r1
     cec:	b1 08       	sbc	r11, r1
     cee:	c1 08       	sbc	r12, r1
     cf0:	d1 08       	sbc	r13, r1
     cf2:	e2 0c       	add	r14, r2
     cf4:	f3 1c       	adc	r15, r3
     cf6:	04 1d       	adc	r16, r4
     cf8:	15 1d       	adc	r17, r5
     cfa:	e2 14       	cp	r14, r2
     cfc:	f3 04       	cpc	r15, r3
     cfe:	04 05       	cpc	r16, r4
     d00:	15 05       	cpc	r17, r5
     d02:	50 f0       	brcs	.+20     	; 0xd18 <__stack+0x4b9>
     d04:	e2 16       	cp	r14, r18
     d06:	f3 06       	cpc	r15, r19
     d08:	04 07       	cpc	r16, r20
     d0a:	15 07       	cpc	r17, r21
     d0c:	28 f4       	brcc	.+10     	; 0xd18 <__stack+0x4b9>
     d0e:	08 94       	sec
     d10:	a1 08       	sbc	r10, r1
     d12:	b1 08       	sbc	r11, r1
     d14:	c1 08       	sbc	r12, r1
     d16:	d1 08       	sbc	r13, r1
     d18:	a1 96       	adiw	r28, 0x21	; 33
     d1a:	ec ac       	ldd	r14, Y+60	; 0x3c
     d1c:	fd ac       	ldd	r15, Y+61	; 0x3d
     d1e:	0e ad       	ldd	r16, Y+62	; 0x3e
     d20:	1f ad       	ldd	r17, Y+63	; 0x3f
     d22:	a1 97       	sbiw	r28, 0x21	; 33
     d24:	d7 01       	movw	r26, r14
     d26:	99 27       	eor	r25, r25
     d28:	88 27       	eor	r24, r24
     d2a:	96 01       	movw	r18, r12
     d2c:	85 01       	movw	r16, r10
     d2e:	08 2b       	or	r16, r24
     d30:	19 2b       	or	r17, r25
     d32:	2a 2b       	or	r18, r26
     d34:	3b 2b       	or	r19, r27
     d36:	25 96       	adiw	r28, 0x05	; 5
     d38:	0c af       	std	Y+60, r16	; 0x3c
     d3a:	1d af       	std	Y+61, r17	; 0x3d
     d3c:	2e af       	std	Y+62, r18	; 0x3e
     d3e:	3f af       	std	Y+63, r19	; 0x3f
     d40:	25 97       	sbiw	r28, 0x05	; 5
     d42:	72 c2       	rjmp	.+1252   	; 0x1228 <__stack+0x9c9>
     d44:	6e 14       	cp	r6, r14
     d46:	7f 04       	cpc	r7, r15
     d48:	80 06       	cpc	r8, r16
     d4a:	91 06       	cpc	r9, r17
     d4c:	08 f4       	brcc	.+2      	; 0xd50 <__stack+0x4f1>
     d4e:	5f c2       	rjmp	.+1214   	; 0x120e <__stack+0x9af>
     d50:	20 e0       	ldi	r18, 0x00	; 0
     d52:	e2 16       	cp	r14, r18
     d54:	20 e0       	ldi	r18, 0x00	; 0
     d56:	f2 06       	cpc	r15, r18
     d58:	21 e0       	ldi	r18, 0x01	; 1
     d5a:	02 07       	cpc	r16, r18
     d5c:	20 e0       	ldi	r18, 0x00	; 0
     d5e:	12 07       	cpc	r17, r18
     d60:	88 f4       	brcc	.+34     	; 0xd84 <__stack+0x525>
     d62:	3f ef       	ldi	r19, 0xFF	; 255
     d64:	e3 16       	cp	r14, r19
     d66:	f1 04       	cpc	r15, r1
     d68:	01 05       	cpc	r16, r1
     d6a:	11 05       	cpc	r17, r1
     d6c:	31 f0       	breq	.+12     	; 0xd7a <__stack+0x51b>
     d6e:	28 f0       	brcs	.+10     	; 0xd7a <__stack+0x51b>
     d70:	48 e0       	ldi	r20, 0x08	; 8
     d72:	50 e0       	ldi	r21, 0x00	; 0
     d74:	60 e0       	ldi	r22, 0x00	; 0
     d76:	70 e0       	ldi	r23, 0x00	; 0
     d78:	17 c0       	rjmp	.+46     	; 0xda8 <__stack+0x549>
     d7a:	40 e0       	ldi	r20, 0x00	; 0
     d7c:	50 e0       	ldi	r21, 0x00	; 0
     d7e:	60 e0       	ldi	r22, 0x00	; 0
     d80:	70 e0       	ldi	r23, 0x00	; 0
     d82:	12 c0       	rjmp	.+36     	; 0xda8 <__stack+0x549>
     d84:	40 e0       	ldi	r20, 0x00	; 0
     d86:	e4 16       	cp	r14, r20
     d88:	40 e0       	ldi	r20, 0x00	; 0
     d8a:	f4 06       	cpc	r15, r20
     d8c:	40 e0       	ldi	r20, 0x00	; 0
     d8e:	04 07       	cpc	r16, r20
     d90:	41 e0       	ldi	r20, 0x01	; 1
     d92:	14 07       	cpc	r17, r20
     d94:	28 f0       	brcs	.+10     	; 0xda0 <__stack+0x541>
     d96:	48 e1       	ldi	r20, 0x18	; 24
     d98:	50 e0       	ldi	r21, 0x00	; 0
     d9a:	60 e0       	ldi	r22, 0x00	; 0
     d9c:	70 e0       	ldi	r23, 0x00	; 0
     d9e:	04 c0       	rjmp	.+8      	; 0xda8 <__stack+0x549>
     da0:	40 e1       	ldi	r20, 0x10	; 16
     da2:	50 e0       	ldi	r21, 0x00	; 0
     da4:	60 e0       	ldi	r22, 0x00	; 0
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	d8 01       	movw	r26, r16
     daa:	c7 01       	movw	r24, r14
     dac:	04 2e       	mov	r0, r20
     dae:	04 c0       	rjmp	.+8      	; 0xdb8 <__stack+0x559>
     db0:	b6 95       	lsr	r27
     db2:	a7 95       	ror	r26
     db4:	97 95       	ror	r25
     db6:	87 95       	ror	r24
     db8:	0a 94       	dec	r0
     dba:	d2 f7       	brpl	.-12     	; 0xdb0 <__stack+0x551>
     dbc:	88 59       	subi	r24, 0x98	; 152
     dbe:	9f 4f       	sbci	r25, 0xFF	; 255
     dc0:	dc 01       	movw	r26, r24
     dc2:	2c 91       	ld	r18, X
     dc4:	30 e2       	ldi	r19, 0x20	; 32
     dc6:	a3 2e       	mov	r10, r19
     dc8:	b1 2c       	mov	r11, r1
     dca:	c1 2c       	mov	r12, r1
     dcc:	d1 2c       	mov	r13, r1
     dce:	d6 01       	movw	r26, r12
     dd0:	c5 01       	movw	r24, r10
     dd2:	84 1b       	sub	r24, r20
     dd4:	95 0b       	sbc	r25, r21
     dd6:	a6 0b       	sbc	r26, r22
     dd8:	b7 0b       	sbc	r27, r23
     dda:	82 1b       	sub	r24, r18
     ddc:	91 09       	sbc	r25, r1
     dde:	a1 09       	sbc	r26, r1
     de0:	b1 09       	sbc	r27, r1
     de2:	00 97       	sbiw	r24, 0x00	; 0
     de4:	a1 05       	cpc	r26, r1
     de6:	b1 05       	cpc	r27, r1
     de8:	99 f4       	brne	.+38     	; 0xe10 <__stack+0x5b1>
     dea:	e6 14       	cp	r14, r6
     dec:	f7 04       	cpc	r15, r7
     dee:	08 05       	cpc	r16, r8
     df0:	19 05       	cpc	r17, r9
     df2:	08 f4       	brcc	.+2      	; 0xdf6 <__stack+0x597>
     df4:	fe c1       	rjmp	.+1020   	; 0x11f2 <__stack+0x993>
     df6:	21 96       	adiw	r28, 0x01	; 1
     df8:	6c ac       	ldd	r6, Y+60	; 0x3c
     dfa:	7d ac       	ldd	r7, Y+61	; 0x3d
     dfc:	8e ac       	ldd	r8, Y+62	; 0x3e
     dfe:	9f ac       	ldd	r9, Y+63	; 0x3f
     e00:	21 97       	sbiw	r28, 0x01	; 1
     e02:	62 14       	cp	r6, r2
     e04:	73 04       	cpc	r7, r3
     e06:	84 04       	cpc	r8, r4
     e08:	95 04       	cpc	r9, r5
     e0a:	08 f0       	brcs	.+2      	; 0xe0e <__stack+0x5af>
     e0c:	f2 c1       	rjmp	.+996    	; 0x11f2 <__stack+0x993>
     e0e:	ff c1       	rjmp	.+1022   	; 0x120e <__stack+0x9af>
     e10:	e2 96       	adiw	r28, 0x32	; 50
     e12:	8f af       	std	Y+63, r24	; 0x3f
     e14:	e2 97       	sbiw	r28, 0x32	; 50
     e16:	08 2e       	mov	r0, r24
     e18:	04 c0       	rjmp	.+8      	; 0xe22 <__stack+0x5c3>
     e1a:	ee 0c       	add	r14, r14
     e1c:	ff 1c       	adc	r15, r15
     e1e:	00 1f       	adc	r16, r16
     e20:	11 1f       	adc	r17, r17
     e22:	0a 94       	dec	r0
     e24:	d2 f7       	brpl	.-12     	; 0xe1a <__stack+0x5bb>
     e26:	6a 2d       	mov	r22, r10
     e28:	68 1b       	sub	r22, r24
     e2a:	d2 01       	movw	r26, r4
     e2c:	c1 01       	movw	r24, r2
     e2e:	06 2e       	mov	r0, r22
     e30:	04 c0       	rjmp	.+8      	; 0xe3a <__stack+0x5db>
     e32:	b6 95       	lsr	r27
     e34:	a7 95       	ror	r26
     e36:	97 95       	ror	r25
     e38:	87 95       	ror	r24
     e3a:	0a 94       	dec	r0
     e3c:	d2 f7       	brpl	.-12     	; 0xe32 <__stack+0x5d3>
     e3e:	5c 01       	movw	r10, r24
     e40:	6d 01       	movw	r12, r26
     e42:	ae 28       	or	r10, r14
     e44:	bf 28       	or	r11, r15
     e46:	c0 2a       	or	r12, r16
     e48:	d1 2a       	or	r13, r17
     e4a:	ad aa       	std	Y+53, r10	; 0x35
     e4c:	be aa       	std	Y+54, r11	; 0x36
     e4e:	cf aa       	std	Y+55, r12	; 0x37
     e50:	d8 ae       	std	Y+56, r13	; 0x38
     e52:	72 01       	movw	r14, r4
     e54:	61 01       	movw	r12, r2
     e56:	e2 96       	adiw	r28, 0x32	; 50
     e58:	0f ac       	ldd	r0, Y+63	; 0x3f
     e5a:	e2 97       	sbiw	r28, 0x32	; 50
     e5c:	04 c0       	rjmp	.+8      	; 0xe66 <__stack+0x607>
     e5e:	cc 0c       	add	r12, r12
     e60:	dd 1c       	adc	r13, r13
     e62:	ee 1c       	adc	r14, r14
     e64:	ff 1c       	adc	r15, r15
     e66:	0a 94       	dec	r0
     e68:	d2 f7       	brpl	.-12     	; 0xe5e <__stack+0x5ff>
     e6a:	c9 aa       	std	Y+49, r12	; 0x31
     e6c:	da aa       	std	Y+50, r13	; 0x32
     e6e:	eb aa       	std	Y+51, r14	; 0x33
     e70:	fc aa       	std	Y+52, r15	; 0x34
     e72:	64 01       	movw	r12, r8
     e74:	53 01       	movw	r10, r6
     e76:	06 2e       	mov	r0, r22
     e78:	04 c0       	rjmp	.+8      	; 0xe82 <__stack+0x623>
     e7a:	d6 94       	lsr	r13
     e7c:	c7 94       	ror	r12
     e7e:	b7 94       	ror	r11
     e80:	a7 94       	ror	r10
     e82:	0a 94       	dec	r0
     e84:	d2 f7       	brpl	.-12     	; 0xe7a <__stack+0x61b>
     e86:	d4 01       	movw	r26, r8
     e88:	c3 01       	movw	r24, r6
     e8a:	e2 96       	adiw	r28, 0x32	; 50
     e8c:	0f ac       	ldd	r0, Y+63	; 0x3f
     e8e:	e2 97       	sbiw	r28, 0x32	; 50
     e90:	04 c0       	rjmp	.+8      	; 0xe9a <__stack+0x63b>
     e92:	88 0f       	add	r24, r24
     e94:	99 1f       	adc	r25, r25
     e96:	aa 1f       	adc	r26, r26
     e98:	bb 1f       	adc	r27, r27
     e9a:	0a 94       	dec	r0
     e9c:	d2 f7       	brpl	.-12     	; 0xe92 <__stack+0x633>
     e9e:	21 96       	adiw	r28, 0x01	; 1
     ea0:	ec ac       	ldd	r14, Y+60	; 0x3c
     ea2:	fd ac       	ldd	r15, Y+61	; 0x3d
     ea4:	0e ad       	ldd	r16, Y+62	; 0x3e
     ea6:	1f ad       	ldd	r17, Y+63	; 0x3f
     ea8:	21 97       	sbiw	r28, 0x01	; 1
     eaa:	04 c0       	rjmp	.+8      	; 0xeb4 <__stack+0x655>
     eac:	16 95       	lsr	r17
     eae:	07 95       	ror	r16
     eb0:	f7 94       	ror	r15
     eb2:	e7 94       	ror	r14
     eb4:	6a 95       	dec	r22
     eb6:	d2 f7       	brpl	.-12     	; 0xeac <__stack+0x64d>
     eb8:	37 01       	movw	r6, r14
     eba:	48 01       	movw	r8, r16
     ebc:	68 2a       	or	r6, r24
     ebe:	79 2a       	or	r7, r25
     ec0:	8a 2a       	or	r8, r26
     ec2:	9b 2a       	or	r9, r27
     ec4:	6d a6       	std	Y+45, r6	; 0x2d
     ec6:	7e a6       	std	Y+46, r7	; 0x2e
     ec8:	8f a6       	std	Y+47, r8	; 0x2f
     eca:	98 aa       	std	Y+48, r9	; 0x30
     ecc:	ed a8       	ldd	r14, Y+53	; 0x35
     ece:	fe a8       	ldd	r15, Y+54	; 0x36
     ed0:	0f a9       	ldd	r16, Y+55	; 0x37
     ed2:	18 ad       	ldd	r17, Y+56	; 0x38
     ed4:	38 01       	movw	r6, r16
     ed6:	88 24       	eor	r8, r8
     ed8:	99 24       	eor	r9, r9
     eda:	98 01       	movw	r18, r16
     edc:	87 01       	movw	r16, r14
     ede:	20 70       	andi	r18, 0x00	; 0
     ee0:	30 70       	andi	r19, 0x00	; 0
     ee2:	a5 96       	adiw	r28, 0x25	; 37
     ee4:	0c af       	std	Y+60, r16	; 0x3c
     ee6:	1d af       	std	Y+61, r17	; 0x3d
     ee8:	2e af       	std	Y+62, r18	; 0x3e
     eea:	3f af       	std	Y+63, r19	; 0x3f
     eec:	a5 97       	sbiw	r28, 0x25	; 37
     eee:	c6 01       	movw	r24, r12
     ef0:	b5 01       	movw	r22, r10
     ef2:	a4 01       	movw	r20, r8
     ef4:	93 01       	movw	r18, r6
     ef6:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     efa:	7b 01       	movw	r14, r22
     efc:	8c 01       	movw	r16, r24
     efe:	c6 01       	movw	r24, r12
     f00:	b5 01       	movw	r22, r10
     f02:	a4 01       	movw	r20, r8
     f04:	93 01       	movw	r18, r6
     f06:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     f0a:	c9 01       	movw	r24, r18
     f0c:	da 01       	movw	r26, r20
     f0e:	1c 01       	movw	r2, r24
     f10:	2d 01       	movw	r4, r26
     f12:	c2 01       	movw	r24, r4
     f14:	b1 01       	movw	r22, r2
     f16:	a5 96       	adiw	r28, 0x25	; 37
     f18:	2c ad       	ldd	r18, Y+60	; 0x3c
     f1a:	3d ad       	ldd	r19, Y+61	; 0x3d
     f1c:	4e ad       	ldd	r20, Y+62	; 0x3e
     f1e:	5f ad       	ldd	r21, Y+63	; 0x3f
     f20:	a5 97       	sbiw	r28, 0x25	; 37
     f22:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
     f26:	9b 01       	movw	r18, r22
     f28:	ac 01       	movw	r20, r24
     f2a:	87 01       	movw	r16, r14
     f2c:	ff 24       	eor	r15, r15
     f2e:	ee 24       	eor	r14, r14
     f30:	ad a4       	ldd	r10, Y+45	; 0x2d
     f32:	be a4       	ldd	r11, Y+46	; 0x2e
     f34:	cf a4       	ldd	r12, Y+47	; 0x2f
     f36:	d8 a8       	ldd	r13, Y+48	; 0x30
     f38:	c6 01       	movw	r24, r12
     f3a:	aa 27       	eor	r26, r26
     f3c:	bb 27       	eor	r27, r27
     f3e:	57 01       	movw	r10, r14
     f40:	68 01       	movw	r12, r16
     f42:	a8 2a       	or	r10, r24
     f44:	b9 2a       	or	r11, r25
     f46:	ca 2a       	or	r12, r26
     f48:	db 2a       	or	r13, r27
     f4a:	a2 16       	cp	r10, r18
     f4c:	b3 06       	cpc	r11, r19
     f4e:	c4 06       	cpc	r12, r20
     f50:	d5 06       	cpc	r13, r21
     f52:	00 f5       	brcc	.+64     	; 0xf94 <__stack+0x735>
     f54:	08 94       	sec
     f56:	21 08       	sbc	r2, r1
     f58:	31 08       	sbc	r3, r1
     f5a:	41 08       	sbc	r4, r1
     f5c:	51 08       	sbc	r5, r1
     f5e:	ed a8       	ldd	r14, Y+53	; 0x35
     f60:	fe a8       	ldd	r15, Y+54	; 0x36
     f62:	0f a9       	ldd	r16, Y+55	; 0x37
     f64:	18 ad       	ldd	r17, Y+56	; 0x38
     f66:	ae 0c       	add	r10, r14
     f68:	bf 1c       	adc	r11, r15
     f6a:	c0 1e       	adc	r12, r16
     f6c:	d1 1e       	adc	r13, r17
     f6e:	ae 14       	cp	r10, r14
     f70:	bf 04       	cpc	r11, r15
     f72:	c0 06       	cpc	r12, r16
     f74:	d1 06       	cpc	r13, r17
     f76:	70 f0       	brcs	.+28     	; 0xf94 <__stack+0x735>
     f78:	a2 16       	cp	r10, r18
     f7a:	b3 06       	cpc	r11, r19
     f7c:	c4 06       	cpc	r12, r20
     f7e:	d5 06       	cpc	r13, r21
     f80:	48 f4       	brcc	.+18     	; 0xf94 <__stack+0x735>
     f82:	08 94       	sec
     f84:	21 08       	sbc	r2, r1
     f86:	31 08       	sbc	r3, r1
     f88:	41 08       	sbc	r4, r1
     f8a:	51 08       	sbc	r5, r1
     f8c:	ae 0c       	add	r10, r14
     f8e:	bf 1c       	adc	r11, r15
     f90:	c0 1e       	adc	r12, r16
     f92:	d1 1e       	adc	r13, r17
     f94:	a2 1a       	sub	r10, r18
     f96:	b3 0a       	sbc	r11, r19
     f98:	c4 0a       	sbc	r12, r20
     f9a:	d5 0a       	sbc	r13, r21
     f9c:	c6 01       	movw	r24, r12
     f9e:	b5 01       	movw	r22, r10
     fa0:	a4 01       	movw	r20, r8
     fa2:	93 01       	movw	r18, r6
     fa4:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     fa8:	7b 01       	movw	r14, r22
     faa:	8c 01       	movw	r16, r24
     fac:	c6 01       	movw	r24, r12
     fae:	b5 01       	movw	r22, r10
     fb0:	a4 01       	movw	r20, r8
     fb2:	93 01       	movw	r18, r6
     fb4:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
     fb8:	c9 01       	movw	r24, r18
     fba:	da 01       	movw	r26, r20
     fbc:	3c 01       	movw	r6, r24
     fbe:	4d 01       	movw	r8, r26
     fc0:	c4 01       	movw	r24, r8
     fc2:	b3 01       	movw	r22, r6
     fc4:	a5 96       	adiw	r28, 0x25	; 37
     fc6:	2c ad       	ldd	r18, Y+60	; 0x3c
     fc8:	3d ad       	ldd	r19, Y+61	; 0x3d
     fca:	4e ad       	ldd	r20, Y+62	; 0x3e
     fcc:	5f ad       	ldd	r21, Y+63	; 0x3f
     fce:	a5 97       	sbiw	r28, 0x25	; 37
     fd0:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
     fd4:	9b 01       	movw	r18, r22
     fd6:	ac 01       	movw	r20, r24
     fd8:	87 01       	movw	r16, r14
     fda:	ff 24       	eor	r15, r15
     fdc:	ee 24       	eor	r14, r14
     fde:	8d a5       	ldd	r24, Y+45	; 0x2d
     fe0:	9e a5       	ldd	r25, Y+46	; 0x2e
     fe2:	af a5       	ldd	r26, Y+47	; 0x2f
     fe4:	b8 a9       	ldd	r27, Y+48	; 0x30
     fe6:	a0 70       	andi	r26, 0x00	; 0
     fe8:	b0 70       	andi	r27, 0x00	; 0
     fea:	57 01       	movw	r10, r14
     fec:	68 01       	movw	r12, r16
     fee:	a8 2a       	or	r10, r24
     ff0:	b9 2a       	or	r11, r25
     ff2:	ca 2a       	or	r12, r26
     ff4:	db 2a       	or	r13, r27
     ff6:	a2 16       	cp	r10, r18
     ff8:	b3 06       	cpc	r11, r19
     ffa:	c4 06       	cpc	r12, r20
     ffc:	d5 06       	cpc	r13, r21
     ffe:	00 f5       	brcc	.+64     	; 0x1040 <__stack+0x7e1>
    1000:	08 94       	sec
    1002:	61 08       	sbc	r6, r1
    1004:	71 08       	sbc	r7, r1
    1006:	81 08       	sbc	r8, r1
    1008:	91 08       	sbc	r9, r1
    100a:	6d a9       	ldd	r22, Y+53	; 0x35
    100c:	7e a9       	ldd	r23, Y+54	; 0x36
    100e:	8f a9       	ldd	r24, Y+55	; 0x37
    1010:	98 ad       	ldd	r25, Y+56	; 0x38
    1012:	a6 0e       	add	r10, r22
    1014:	b7 1e       	adc	r11, r23
    1016:	c8 1e       	adc	r12, r24
    1018:	d9 1e       	adc	r13, r25
    101a:	a6 16       	cp	r10, r22
    101c:	b7 06       	cpc	r11, r23
    101e:	c8 06       	cpc	r12, r24
    1020:	d9 06       	cpc	r13, r25
    1022:	70 f0       	brcs	.+28     	; 0x1040 <__stack+0x7e1>
    1024:	a2 16       	cp	r10, r18
    1026:	b3 06       	cpc	r11, r19
    1028:	c4 06       	cpc	r12, r20
    102a:	d5 06       	cpc	r13, r21
    102c:	48 f4       	brcc	.+18     	; 0x1040 <__stack+0x7e1>
    102e:	08 94       	sec
    1030:	61 08       	sbc	r6, r1
    1032:	71 08       	sbc	r7, r1
    1034:	81 08       	sbc	r8, r1
    1036:	91 08       	sbc	r9, r1
    1038:	a6 0e       	add	r10, r22
    103a:	b7 1e       	adc	r11, r23
    103c:	c8 1e       	adc	r12, r24
    103e:	d9 1e       	adc	r13, r25
    1040:	d6 01       	movw	r26, r12
    1042:	c5 01       	movw	r24, r10
    1044:	82 1b       	sub	r24, r18
    1046:	93 0b       	sbc	r25, r19
    1048:	a4 0b       	sbc	r26, r20
    104a:	b5 0b       	sbc	r27, r21
    104c:	89 a7       	std	Y+41, r24	; 0x29
    104e:	9a a7       	std	Y+42, r25	; 0x2a
    1050:	ab a7       	std	Y+43, r26	; 0x2b
    1052:	bc a7       	std	Y+44, r27	; 0x2c
    1054:	d1 01       	movw	r26, r2
    1056:	99 27       	eor	r25, r25
    1058:	88 27       	eor	r24, r24
    105a:	64 01       	movw	r12, r8
    105c:	53 01       	movw	r10, r6
    105e:	a8 2a       	or	r10, r24
    1060:	b9 2a       	or	r11, r25
    1062:	ca 2a       	or	r12, r26
    1064:	db 2a       	or	r13, r27
    1066:	25 96       	adiw	r28, 0x05	; 5
    1068:	ac ae       	std	Y+60, r10	; 0x3c
    106a:	bd ae       	std	Y+61, r11	; 0x3d
    106c:	ce ae       	std	Y+62, r12	; 0x3e
    106e:	df ae       	std	Y+63, r13	; 0x3f
    1070:	25 97       	sbiw	r28, 0x05	; 5
    1072:	86 01       	movw	r16, r12
    1074:	75 01       	movw	r14, r10
    1076:	2f ef       	ldi	r18, 0xFF	; 255
    1078:	3f ef       	ldi	r19, 0xFF	; 255
    107a:	40 e0       	ldi	r20, 0x00	; 0
    107c:	50 e0       	ldi	r21, 0x00	; 0
    107e:	e2 22       	and	r14, r18
    1080:	f3 22       	and	r15, r19
    1082:	04 23       	and	r16, r20
    1084:	15 23       	and	r17, r21
    1086:	a6 01       	movw	r20, r12
    1088:	66 27       	eor	r22, r22
    108a:	77 27       	eor	r23, r23
    108c:	ad 96       	adiw	r28, 0x2d	; 45
    108e:	4c af       	std	Y+60, r20	; 0x3c
    1090:	5d af       	std	Y+61, r21	; 0x3d
    1092:	6e af       	std	Y+62, r22	; 0x3e
    1094:	7f af       	std	Y+63, r23	; 0x3f
    1096:	ad 97       	sbiw	r28, 0x2d	; 45
    1098:	a9 a8       	ldd	r10, Y+49	; 0x31
    109a:	ba a8       	ldd	r11, Y+50	; 0x32
    109c:	cb a8       	ldd	r12, Y+51	; 0x33
    109e:	dc a8       	ldd	r13, Y+52	; 0x34
    10a0:	6f ef       	ldi	r22, 0xFF	; 255
    10a2:	7f ef       	ldi	r23, 0xFF	; 255
    10a4:	80 e0       	ldi	r24, 0x00	; 0
    10a6:	90 e0       	ldi	r25, 0x00	; 0
    10a8:	a6 22       	and	r10, r22
    10aa:	b7 22       	and	r11, r23
    10ac:	c8 22       	and	r12, r24
    10ae:	d9 22       	and	r13, r25
    10b0:	89 a9       	ldd	r24, Y+49	; 0x31
    10b2:	9a a9       	ldd	r25, Y+50	; 0x32
    10b4:	ab a9       	ldd	r26, Y+51	; 0x33
    10b6:	bc a9       	ldd	r27, Y+52	; 0x34
    10b8:	1d 01       	movw	r2, r26
    10ba:	44 24       	eor	r4, r4
    10bc:	55 24       	eor	r5, r5
    10be:	c8 01       	movw	r24, r16
    10c0:	b7 01       	movw	r22, r14
    10c2:	a6 01       	movw	r20, r12
    10c4:	95 01       	movw	r18, r10
    10c6:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    10ca:	a9 96       	adiw	r28, 0x29	; 41
    10cc:	6c af       	std	Y+60, r22	; 0x3c
    10ce:	7d af       	std	Y+61, r23	; 0x3d
    10d0:	8e af       	std	Y+62, r24	; 0x3e
    10d2:	9f af       	std	Y+63, r25	; 0x3f
    10d4:	a9 97       	sbiw	r28, 0x29	; 41
    10d6:	c8 01       	movw	r24, r16
    10d8:	b7 01       	movw	r22, r14
    10da:	a2 01       	movw	r20, r4
    10dc:	91 01       	movw	r18, r2
    10de:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    10e2:	3b 01       	movw	r6, r22
    10e4:	4c 01       	movw	r8, r24
    10e6:	ad 96       	adiw	r28, 0x2d	; 45
    10e8:	6c ad       	ldd	r22, Y+60	; 0x3c
    10ea:	7d ad       	ldd	r23, Y+61	; 0x3d
    10ec:	8e ad       	ldd	r24, Y+62	; 0x3e
    10ee:	9f ad       	ldd	r25, Y+63	; 0x3f
    10f0:	ad 97       	sbiw	r28, 0x2d	; 45
    10f2:	a6 01       	movw	r20, r12
    10f4:	95 01       	movw	r18, r10
    10f6:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    10fa:	7b 01       	movw	r14, r22
    10fc:	8c 01       	movw	r16, r24
    10fe:	ad 96       	adiw	r28, 0x2d	; 45
    1100:	6c ad       	ldd	r22, Y+60	; 0x3c
    1102:	7d ad       	ldd	r23, Y+61	; 0x3d
    1104:	8e ad       	ldd	r24, Y+62	; 0x3e
    1106:	9f ad       	ldd	r25, Y+63	; 0x3f
    1108:	ad 97       	sbiw	r28, 0x2d	; 45
    110a:	a2 01       	movw	r20, r4
    110c:	91 01       	movw	r18, r2
    110e:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    1112:	5b 01       	movw	r10, r22
    1114:	6c 01       	movw	r12, r24
    1116:	a8 01       	movw	r20, r16
    1118:	97 01       	movw	r18, r14
    111a:	26 0d       	add	r18, r6
    111c:	37 1d       	adc	r19, r7
    111e:	48 1d       	adc	r20, r8
    1120:	59 1d       	adc	r21, r9
    1122:	a9 96       	adiw	r28, 0x29	; 41
    1124:	6c ac       	ldd	r6, Y+60	; 0x3c
    1126:	7d ac       	ldd	r7, Y+61	; 0x3d
    1128:	8e ac       	ldd	r8, Y+62	; 0x3e
    112a:	9f ac       	ldd	r9, Y+63	; 0x3f
    112c:	a9 97       	sbiw	r28, 0x29	; 41
    112e:	c4 01       	movw	r24, r8
    1130:	aa 27       	eor	r26, r26
    1132:	bb 27       	eor	r27, r27
    1134:	28 0f       	add	r18, r24
    1136:	39 1f       	adc	r19, r25
    1138:	4a 1f       	adc	r20, r26
    113a:	5b 1f       	adc	r21, r27
    113c:	2e 15       	cp	r18, r14
    113e:	3f 05       	cpc	r19, r15
    1140:	40 07       	cpc	r20, r16
    1142:	51 07       	cpc	r21, r17
    1144:	48 f4       	brcc	.+18     	; 0x1158 <__stack+0x8f9>
    1146:	e1 2c       	mov	r14, r1
    1148:	f1 2c       	mov	r15, r1
    114a:	61 e0       	ldi	r22, 0x01	; 1
    114c:	06 2f       	mov	r16, r22
    114e:	11 2d       	mov	r17, r1
    1150:	ae 0c       	add	r10, r14
    1152:	bf 1c       	adc	r11, r15
    1154:	c0 1e       	adc	r12, r16
    1156:	d1 1e       	adc	r13, r17
    1158:	ca 01       	movw	r24, r20
    115a:	aa 27       	eor	r26, r26
    115c:	bb 27       	eor	r27, r27
    115e:	bc 01       	movw	r22, r24
    1160:	cd 01       	movw	r24, r26
    1162:	6a 0d       	add	r22, r10
    1164:	7b 1d       	adc	r23, r11
    1166:	8c 1d       	adc	r24, r12
    1168:	9d 1d       	adc	r25, r13
    116a:	69 a4       	ldd	r6, Y+41	; 0x29
    116c:	7a a4       	ldd	r7, Y+42	; 0x2a
    116e:	8b a4       	ldd	r8, Y+43	; 0x2b
    1170:	9c a4       	ldd	r9, Y+44	; 0x2c
    1172:	66 16       	cp	r6, r22
    1174:	77 06       	cpc	r7, r23
    1176:	88 06       	cpc	r8, r24
    1178:	99 06       	cpc	r9, r25
    117a:	50 f1       	brcs	.+84     	; 0x11d0 <__stack+0x971>
    117c:	66 15       	cp	r22, r6
    117e:	77 05       	cpc	r23, r7
    1180:	88 05       	cpc	r24, r8
    1182:	99 05       	cpc	r25, r9
    1184:	09 f0       	breq	.+2      	; 0x1188 <__stack+0x929>
    1186:	4d c0       	rjmp	.+154    	; 0x1222 <__stack+0x9c3>
    1188:	d9 01       	movw	r26, r18
    118a:	99 27       	eor	r25, r25
    118c:	88 27       	eor	r24, r24
    118e:	a9 96       	adiw	r28, 0x29	; 41
    1190:	2c ad       	ldd	r18, Y+60	; 0x3c
    1192:	3d ad       	ldd	r19, Y+61	; 0x3d
    1194:	4e ad       	ldd	r20, Y+62	; 0x3e
    1196:	5f ad       	ldd	r21, Y+63	; 0x3f
    1198:	a9 97       	sbiw	r28, 0x29	; 41
    119a:	40 70       	andi	r20, 0x00	; 0
    119c:	50 70       	andi	r21, 0x00	; 0
    119e:	82 0f       	add	r24, r18
    11a0:	93 1f       	adc	r25, r19
    11a2:	a4 1f       	adc	r26, r20
    11a4:	b5 1f       	adc	r27, r21
    11a6:	21 96       	adiw	r28, 0x01	; 1
    11a8:	2c ad       	ldd	r18, Y+60	; 0x3c
    11aa:	3d ad       	ldd	r19, Y+61	; 0x3d
    11ac:	4e ad       	ldd	r20, Y+62	; 0x3e
    11ae:	5f ad       	ldd	r21, Y+63	; 0x3f
    11b0:	21 97       	sbiw	r28, 0x01	; 1
    11b2:	e2 96       	adiw	r28, 0x32	; 50
    11b4:	0f ac       	ldd	r0, Y+63	; 0x3f
    11b6:	e2 97       	sbiw	r28, 0x32	; 50
    11b8:	04 c0       	rjmp	.+8      	; 0x11c2 <__stack+0x963>
    11ba:	22 0f       	add	r18, r18
    11bc:	33 1f       	adc	r19, r19
    11be:	44 1f       	adc	r20, r20
    11c0:	55 1f       	adc	r21, r21
    11c2:	0a 94       	dec	r0
    11c4:	d2 f7       	brpl	.-12     	; 0x11ba <__stack+0x95b>
    11c6:	28 17       	cp	r18, r24
    11c8:	39 07       	cpc	r19, r25
    11ca:	4a 07       	cpc	r20, r26
    11cc:	5b 07       	cpc	r21, r27
    11ce:	48 f5       	brcc	.+82     	; 0x1222 <__stack+0x9c3>
    11d0:	25 96       	adiw	r28, 0x05	; 5
    11d2:	0c ad       	ldd	r16, Y+60	; 0x3c
    11d4:	1d ad       	ldd	r17, Y+61	; 0x3d
    11d6:	2e ad       	ldd	r18, Y+62	; 0x3e
    11d8:	3f ad       	ldd	r19, Y+63	; 0x3f
    11da:	25 97       	sbiw	r28, 0x05	; 5
    11dc:	01 50       	subi	r16, 0x01	; 1
    11de:	10 40       	sbci	r17, 0x00	; 0
    11e0:	20 40       	sbci	r18, 0x00	; 0
    11e2:	30 40       	sbci	r19, 0x00	; 0
    11e4:	25 96       	adiw	r28, 0x05	; 5
    11e6:	0c af       	std	Y+60, r16	; 0x3c
    11e8:	1d af       	std	Y+61, r17	; 0x3d
    11ea:	2e af       	std	Y+62, r18	; 0x3e
    11ec:	3f af       	std	Y+63, r19	; 0x3f
    11ee:	25 97       	sbiw	r28, 0x05	; 5
    11f0:	18 c0       	rjmp	.+48     	; 0x1222 <__stack+0x9c3>
    11f2:	66 24       	eor	r6, r6
    11f4:	77 24       	eor	r7, r7
    11f6:	43 01       	movw	r8, r6
    11f8:	21 e0       	ldi	r18, 0x01	; 1
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	40 e0       	ldi	r20, 0x00	; 0
    11fe:	50 e0       	ldi	r21, 0x00	; 0
    1200:	25 96       	adiw	r28, 0x05	; 5
    1202:	2c af       	std	Y+60, r18	; 0x3c
    1204:	3d af       	std	Y+61, r19	; 0x3d
    1206:	4e af       	std	Y+62, r20	; 0x3e
    1208:	5f af       	std	Y+63, r21	; 0x3f
    120a:	25 97       	sbiw	r28, 0x05	; 5
    120c:	0d c0       	rjmp	.+26     	; 0x1228 <__stack+0x9c9>
    120e:	66 24       	eor	r6, r6
    1210:	77 24       	eor	r7, r7
    1212:	43 01       	movw	r8, r6
    1214:	25 96       	adiw	r28, 0x05	; 5
    1216:	1c ae       	std	Y+60, r1	; 0x3c
    1218:	1d ae       	std	Y+61, r1	; 0x3d
    121a:	1e ae       	std	Y+62, r1	; 0x3e
    121c:	1f ae       	std	Y+63, r1	; 0x3f
    121e:	25 97       	sbiw	r28, 0x05	; 5
    1220:	03 c0       	rjmp	.+6      	; 0x1228 <__stack+0x9c9>
    1222:	66 24       	eor	r6, r6
    1224:	77 24       	eor	r7, r7
    1226:	43 01       	movw	r8, r6
    1228:	fe 01       	movw	r30, r28
    122a:	b1 96       	adiw	r30, 0x21	; 33
    122c:	88 e0       	ldi	r24, 0x08	; 8
    122e:	df 01       	movw	r26, r30
    1230:	1d 92       	st	X+, r1
    1232:	8a 95       	dec	r24
    1234:	e9 f7       	brne	.-6      	; 0x1230 <__stack+0x9d1>
    1236:	25 96       	adiw	r28, 0x05	; 5
    1238:	ac ac       	ldd	r10, Y+60	; 0x3c
    123a:	bd ac       	ldd	r11, Y+61	; 0x3d
    123c:	ce ac       	ldd	r12, Y+62	; 0x3e
    123e:	df ac       	ldd	r13, Y+63	; 0x3f
    1240:	25 97       	sbiw	r28, 0x05	; 5
    1242:	a9 a2       	std	Y+33, r10	; 0x21
    1244:	ba a2       	std	Y+34, r11	; 0x22
    1246:	cb a2       	std	Y+35, r12	; 0x23
    1248:	dc a2       	std	Y+36, r13	; 0x24
    124a:	6d a2       	std	Y+37, r6	; 0x25
    124c:	7e a2       	std	Y+38, r7	; 0x26
    124e:	8f a2       	std	Y+39, r8	; 0x27
    1250:	98 a6       	std	Y+40, r9	; 0x28
    1252:	22 96       	adiw	r28, 0x02	; 2
    1254:	2f ad       	ldd	r18, Y+63	; 0x3f
    1256:	22 97       	sbiw	r28, 0x02	; 2
    1258:	3a a1       	ldd	r19, Y+34	; 0x22
    125a:	4b a1       	ldd	r20, Y+35	; 0x23
    125c:	5c a1       	ldd	r21, Y+36	; 0x24
    125e:	66 2d       	mov	r22, r6
    1260:	7e a1       	ldd	r23, Y+38	; 0x26
    1262:	df a0       	ldd	r13, Y+39	; 0x27
    1264:	98 a5       	ldd	r25, Y+40	; 0x28
    1266:	e1 96       	adiw	r28, 0x31	; 49
    1268:	ec ac       	ldd	r14, Y+60	; 0x3c
    126a:	fd ac       	ldd	r15, Y+61	; 0x3d
    126c:	0e ad       	ldd	r16, Y+62	; 0x3e
    126e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1270:	e1 97       	sbiw	r28, 0x31	; 49
    1272:	e1 14       	cp	r14, r1
    1274:	f1 04       	cpc	r15, r1
    1276:	01 05       	cpc	r16, r1
    1278:	11 05       	cpc	r17, r1
    127a:	09 f4       	brne	.+2      	; 0x127e <__stack+0xa1f>
    127c:	56 c0       	rjmp	.+172    	; 0x132a <__stack+0xacb>
    127e:	21 95       	neg	r18
    1280:	81 e0       	ldi	r24, 0x01	; 1
    1282:	12 16       	cp	r1, r18
    1284:	08 f0       	brcs	.+2      	; 0x1288 <__stack+0xa29>
    1286:	80 e0       	ldi	r24, 0x00	; 0
    1288:	31 95       	neg	r19
    128a:	e1 e0       	ldi	r30, 0x01	; 1
    128c:	13 16       	cp	r1, r19
    128e:	08 f0       	brcs	.+2      	; 0x1292 <__stack+0xa33>
    1290:	e0 e0       	ldi	r30, 0x00	; 0
    1292:	93 2e       	mov	r9, r19
    1294:	98 1a       	sub	r9, r24
    1296:	81 e0       	ldi	r24, 0x01	; 1
    1298:	39 15       	cp	r19, r9
    129a:	08 f0       	brcs	.+2      	; 0x129e <__stack+0xa3f>
    129c:	80 e0       	ldi	r24, 0x00	; 0
    129e:	e8 2b       	or	r30, r24
    12a0:	41 95       	neg	r20
    12a2:	f1 e0       	ldi	r31, 0x01	; 1
    12a4:	14 16       	cp	r1, r20
    12a6:	08 f0       	brcs	.+2      	; 0x12aa <__stack+0xa4b>
    12a8:	f0 e0       	ldi	r31, 0x00	; 0
    12aa:	a4 2e       	mov	r10, r20
    12ac:	ae 1a       	sub	r10, r30
    12ae:	81 e0       	ldi	r24, 0x01	; 1
    12b0:	4a 15       	cp	r20, r10
    12b2:	08 f0       	brcs	.+2      	; 0x12b6 <__stack+0xa57>
    12b4:	80 e0       	ldi	r24, 0x00	; 0
    12b6:	f8 2b       	or	r31, r24
    12b8:	51 95       	neg	r21
    12ba:	e1 e0       	ldi	r30, 0x01	; 1
    12bc:	15 16       	cp	r1, r21
    12be:	08 f0       	brcs	.+2      	; 0x12c2 <__stack+0xa63>
    12c0:	e0 e0       	ldi	r30, 0x00	; 0
    12c2:	b5 2e       	mov	r11, r21
    12c4:	bf 1a       	sub	r11, r31
    12c6:	81 e0       	ldi	r24, 0x01	; 1
    12c8:	5b 15       	cp	r21, r11
    12ca:	08 f0       	brcs	.+2      	; 0x12ce <__stack+0xa6f>
    12cc:	80 e0       	ldi	r24, 0x00	; 0
    12ce:	e8 2b       	or	r30, r24
    12d0:	61 95       	neg	r22
    12d2:	f1 e0       	ldi	r31, 0x01	; 1
    12d4:	16 16       	cp	r1, r22
    12d6:	08 f0       	brcs	.+2      	; 0x12da <__stack+0xa7b>
    12d8:	f0 e0       	ldi	r31, 0x00	; 0
    12da:	a6 2f       	mov	r26, r22
    12dc:	ae 1b       	sub	r26, r30
    12de:	81 e0       	ldi	r24, 0x01	; 1
    12e0:	6a 17       	cp	r22, r26
    12e2:	08 f0       	brcs	.+2      	; 0x12e6 <__stack+0xa87>
    12e4:	80 e0       	ldi	r24, 0x00	; 0
    12e6:	f8 2b       	or	r31, r24
    12e8:	71 95       	neg	r23
    12ea:	e1 e0       	ldi	r30, 0x01	; 1
    12ec:	17 16       	cp	r1, r23
    12ee:	08 f0       	brcs	.+2      	; 0x12f2 <__stack+0xa93>
    12f0:	e0 e0       	ldi	r30, 0x00	; 0
    12f2:	c7 2e       	mov	r12, r23
    12f4:	cf 1a       	sub	r12, r31
    12f6:	81 e0       	ldi	r24, 0x01	; 1
    12f8:	7c 15       	cp	r23, r12
    12fa:	08 f0       	brcs	.+2      	; 0x12fe <__stack+0xa9f>
    12fc:	80 e0       	ldi	r24, 0x00	; 0
    12fe:	e8 2b       	or	r30, r24
    1300:	8d 2d       	mov	r24, r13
    1302:	81 95       	neg	r24
    1304:	f1 e0       	ldi	r31, 0x01	; 1
    1306:	18 16       	cp	r1, r24
    1308:	08 f0       	brcs	.+2      	; 0x130c <__stack+0xaad>
    130a:	f0 e0       	ldi	r31, 0x00	; 0
    130c:	d8 2e       	mov	r13, r24
    130e:	de 1a       	sub	r13, r30
    1310:	e1 e0       	ldi	r30, 0x01	; 1
    1312:	8d 15       	cp	r24, r13
    1314:	08 f0       	brcs	.+2      	; 0x1318 <__stack+0xab9>
    1316:	e0 e0       	ldi	r30, 0x00	; 0
    1318:	fe 2b       	or	r31, r30
    131a:	89 2f       	mov	r24, r25
    131c:	81 95       	neg	r24
    131e:	39 2d       	mov	r19, r9
    1320:	a5 01       	movw	r20, r10
    1322:	6a 2f       	mov	r22, r26
    1324:	7c 2d       	mov	r23, r12
    1326:	98 2f       	mov	r25, r24
    1328:	9f 1b       	sub	r25, r31
    132a:	8d 2d       	mov	r24, r13
    132c:	ce 58       	subi	r28, 0x8E	; 142
    132e:	df 4f       	sbci	r29, 0xFF	; 255
    1330:	e2 e1       	ldi	r30, 0x12	; 18
    1332:	0c 94 46 2b 	jmp	0x568c	; 0x568c <__epilogue_restores__>

00001336 <__moddi3>:
    1336:	a7 e7       	ldi	r26, 0x77	; 119
    1338:	b0 e0       	ldi	r27, 0x00	; 0
    133a:	e1 ea       	ldi	r30, 0xA1	; 161
    133c:	f9 e0       	ldi	r31, 0x09	; 9
    133e:	0c 94 2a 2b 	jmp	0x5654	; 0x5654 <__prologue_saves__>
    1342:	98 2e       	mov	r9, r24
    1344:	89 2e       	mov	r8, r25
    1346:	71 2e       	mov	r7, r17
    1348:	88 e0       	ldi	r24, 0x08	; 8
    134a:	fe 01       	movw	r30, r28
    134c:	31 96       	adiw	r30, 0x01	; 1
    134e:	df 01       	movw	r26, r30
    1350:	68 2e       	mov	r6, r24
    1352:	1d 92       	st	X+, r1
    1354:	6a 94       	dec	r6
    1356:	e9 f7       	brne	.-6      	; 0x1352 <__moddi3+0x1c>
    1358:	29 83       	std	Y+1, r18	; 0x01
    135a:	3a 83       	std	Y+2, r19	; 0x02
    135c:	4b 83       	std	Y+3, r20	; 0x03
    135e:	5c 83       	std	Y+4, r21	; 0x04
    1360:	6d 83       	std	Y+5, r22	; 0x05
    1362:	7e 83       	std	Y+6, r23	; 0x06
    1364:	9f 82       	std	Y+7, r9	; 0x07
    1366:	98 87       	std	Y+8, r25	; 0x08
    1368:	fe 01       	movw	r30, r28
    136a:	39 96       	adiw	r30, 0x09	; 9
    136c:	df 01       	movw	r26, r30
    136e:	1d 92       	st	X+, r1
    1370:	8a 95       	dec	r24
    1372:	e9 f7       	brne	.-6      	; 0x136e <__moddi3+0x38>
    1374:	a9 86       	std	Y+9, r10	; 0x09
    1376:	ba 86       	std	Y+10, r11	; 0x0a
    1378:	cb 86       	std	Y+11, r12	; 0x0b
    137a:	dc 86       	std	Y+12, r13	; 0x0c
    137c:	ed 86       	std	Y+13, r14	; 0x0d
    137e:	fe 86       	std	Y+14, r15	; 0x0e
    1380:	0f 87       	std	Y+15, r16	; 0x0f
    1382:	18 8b       	std	Y+16, r17	; 0x10
    1384:	8d 81       	ldd	r24, Y+5	; 0x05
    1386:	9e 81       	ldd	r25, Y+6	; 0x06
    1388:	af 81       	ldd	r26, Y+7	; 0x07
    138a:	b8 85       	ldd	r27, Y+8	; 0x08
    138c:	b7 fd       	sbrc	r27, 7
    138e:	07 c0       	rjmp	.+14     	; 0x139e <__moddi3+0x68>
    1390:	e1 96       	adiw	r28, 0x31	; 49
    1392:	1c ae       	std	Y+60, r1	; 0x3c
    1394:	1d ae       	std	Y+61, r1	; 0x3d
    1396:	1e ae       	std	Y+62, r1	; 0x3e
    1398:	1f ae       	std	Y+63, r1	; 0x3f
    139a:	e1 97       	sbiw	r28, 0x31	; 49
    139c:	64 c0       	rjmp	.+200    	; 0x1466 <__moddi3+0x130>
    139e:	21 95       	neg	r18
    13a0:	81 e0       	ldi	r24, 0x01	; 1
    13a2:	12 16       	cp	r1, r18
    13a4:	08 f0       	brcs	.+2      	; 0x13a8 <__moddi3+0x72>
    13a6:	80 e0       	ldi	r24, 0x00	; 0
    13a8:	31 95       	neg	r19
    13aa:	91 e0       	ldi	r25, 0x01	; 1
    13ac:	13 16       	cp	r1, r19
    13ae:	08 f0       	brcs	.+2      	; 0x13b2 <__moddi3+0x7c>
    13b0:	90 e0       	ldi	r25, 0x00	; 0
    13b2:	b3 2f       	mov	r27, r19
    13b4:	b8 1b       	sub	r27, r24
    13b6:	81 e0       	ldi	r24, 0x01	; 1
    13b8:	3b 17       	cp	r19, r27
    13ba:	08 f0       	brcs	.+2      	; 0x13be <__moddi3+0x88>
    13bc:	80 e0       	ldi	r24, 0x00	; 0
    13be:	98 2b       	or	r25, r24
    13c0:	41 95       	neg	r20
    13c2:	31 e0       	ldi	r19, 0x01	; 1
    13c4:	14 16       	cp	r1, r20
    13c6:	08 f0       	brcs	.+2      	; 0x13ca <__moddi3+0x94>
    13c8:	30 e0       	ldi	r19, 0x00	; 0
    13ca:	a4 2f       	mov	r26, r20
    13cc:	a9 1b       	sub	r26, r25
    13ce:	81 e0       	ldi	r24, 0x01	; 1
    13d0:	4a 17       	cp	r20, r26
    13d2:	08 f0       	brcs	.+2      	; 0x13d6 <__moddi3+0xa0>
    13d4:	80 e0       	ldi	r24, 0x00	; 0
    13d6:	38 2b       	or	r19, r24
    13d8:	51 95       	neg	r21
    13da:	91 e0       	ldi	r25, 0x01	; 1
    13dc:	15 16       	cp	r1, r21
    13de:	08 f0       	brcs	.+2      	; 0x13e2 <__moddi3+0xac>
    13e0:	90 e0       	ldi	r25, 0x00	; 0
    13e2:	f5 2f       	mov	r31, r21
    13e4:	f3 1b       	sub	r31, r19
    13e6:	81 e0       	ldi	r24, 0x01	; 1
    13e8:	5f 17       	cp	r21, r31
    13ea:	08 f0       	brcs	.+2      	; 0x13ee <__moddi3+0xb8>
    13ec:	80 e0       	ldi	r24, 0x00	; 0
    13ee:	98 2b       	or	r25, r24
    13f0:	61 95       	neg	r22
    13f2:	31 e0       	ldi	r19, 0x01	; 1
    13f4:	16 16       	cp	r1, r22
    13f6:	08 f0       	brcs	.+2      	; 0x13fa <__moddi3+0xc4>
    13f8:	30 e0       	ldi	r19, 0x00	; 0
    13fa:	e6 2f       	mov	r30, r22
    13fc:	e9 1b       	sub	r30, r25
    13fe:	81 e0       	ldi	r24, 0x01	; 1
    1400:	6e 17       	cp	r22, r30
    1402:	08 f0       	brcs	.+2      	; 0x1406 <__moddi3+0xd0>
    1404:	80 e0       	ldi	r24, 0x00	; 0
    1406:	38 2b       	or	r19, r24
    1408:	71 95       	neg	r23
    140a:	41 e0       	ldi	r20, 0x01	; 1
    140c:	17 16       	cp	r1, r23
    140e:	08 f0       	brcs	.+2      	; 0x1412 <__moddi3+0xdc>
    1410:	40 e0       	ldi	r20, 0x00	; 0
    1412:	57 2f       	mov	r21, r23
    1414:	53 1b       	sub	r21, r19
    1416:	81 e0       	ldi	r24, 0x01	; 1
    1418:	75 17       	cp	r23, r21
    141a:	08 f0       	brcs	.+2      	; 0x141e <__moddi3+0xe8>
    141c:	80 e0       	ldi	r24, 0x00	; 0
    141e:	48 2b       	or	r20, r24
    1420:	89 2d       	mov	r24, r9
    1422:	81 95       	neg	r24
    1424:	91 e0       	ldi	r25, 0x01	; 1
    1426:	18 16       	cp	r1, r24
    1428:	08 f0       	brcs	.+2      	; 0x142c <__moddi3+0xf6>
    142a:	90 e0       	ldi	r25, 0x00	; 0
    142c:	68 2e       	mov	r6, r24
    142e:	64 1a       	sub	r6, r20
    1430:	46 2d       	mov	r20, r6
    1432:	31 e0       	ldi	r19, 0x01	; 1
    1434:	86 15       	cp	r24, r6
    1436:	08 f0       	brcs	.+2      	; 0x143a <__moddi3+0x104>
    1438:	30 e0       	ldi	r19, 0x00	; 0
    143a:	93 2b       	or	r25, r19
    143c:	88 2d       	mov	r24, r8
    143e:	81 95       	neg	r24
    1440:	89 1b       	sub	r24, r25
    1442:	29 83       	std	Y+1, r18	; 0x01
    1444:	ba 83       	std	Y+2, r27	; 0x02
    1446:	ab 83       	std	Y+3, r26	; 0x03
    1448:	fc 83       	std	Y+4, r31	; 0x04
    144a:	ed 83       	std	Y+5, r30	; 0x05
    144c:	5e 83       	std	Y+6, r21	; 0x06
    144e:	4f 83       	std	Y+7, r20	; 0x07
    1450:	88 87       	std	Y+8, r24	; 0x08
    1452:	2f ef       	ldi	r18, 0xFF	; 255
    1454:	3f ef       	ldi	r19, 0xFF	; 255
    1456:	4f ef       	ldi	r20, 0xFF	; 255
    1458:	5f ef       	ldi	r21, 0xFF	; 255
    145a:	e1 96       	adiw	r28, 0x31	; 49
    145c:	2c af       	std	Y+60, r18	; 0x3c
    145e:	3d af       	std	Y+61, r19	; 0x3d
    1460:	4e af       	std	Y+62, r20	; 0x3e
    1462:	5f af       	std	Y+63, r21	; 0x3f
    1464:	e1 97       	sbiw	r28, 0x31	; 49
    1466:	8d 85       	ldd	r24, Y+13	; 0x0d
    1468:	9e 85       	ldd	r25, Y+14	; 0x0e
    146a:	af 85       	ldd	r26, Y+15	; 0x0f
    146c:	b8 89       	ldd	r27, Y+16	; 0x10
    146e:	b7 ff       	sbrs	r27, 7
    1470:	5a c0       	rjmp	.+180    	; 0x1526 <__moddi3+0x1f0>
    1472:	a1 94       	neg	r10
    1474:	81 e0       	ldi	r24, 0x01	; 1
    1476:	1a 14       	cp	r1, r10
    1478:	08 f0       	brcs	.+2      	; 0x147c <__moddi3+0x146>
    147a:	80 e0       	ldi	r24, 0x00	; 0
    147c:	b1 94       	neg	r11
    147e:	91 e0       	ldi	r25, 0x01	; 1
    1480:	1b 14       	cp	r1, r11
    1482:	08 f0       	brcs	.+2      	; 0x1486 <__moddi3+0x150>
    1484:	90 e0       	ldi	r25, 0x00	; 0
    1486:	6b 2d       	mov	r22, r11
    1488:	68 1b       	sub	r22, r24
    148a:	81 e0       	ldi	r24, 0x01	; 1
    148c:	b6 16       	cp	r11, r22
    148e:	08 f0       	brcs	.+2      	; 0x1492 <__moddi3+0x15c>
    1490:	80 e0       	ldi	r24, 0x00	; 0
    1492:	98 2b       	or	r25, r24
    1494:	c1 94       	neg	r12
    1496:	21 e0       	ldi	r18, 0x01	; 1
    1498:	1c 14       	cp	r1, r12
    149a:	08 f0       	brcs	.+2      	; 0x149e <__moddi3+0x168>
    149c:	20 e0       	ldi	r18, 0x00	; 0
    149e:	5c 2d       	mov	r21, r12
    14a0:	59 1b       	sub	r21, r25
    14a2:	81 e0       	ldi	r24, 0x01	; 1
    14a4:	c5 16       	cp	r12, r21
    14a6:	08 f0       	brcs	.+2      	; 0x14aa <__moddi3+0x174>
    14a8:	80 e0       	ldi	r24, 0x00	; 0
    14aa:	28 2b       	or	r18, r24
    14ac:	d1 94       	neg	r13
    14ae:	91 e0       	ldi	r25, 0x01	; 1
    14b0:	1d 14       	cp	r1, r13
    14b2:	08 f0       	brcs	.+2      	; 0x14b6 <__moddi3+0x180>
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	4d 2d       	mov	r20, r13
    14b8:	42 1b       	sub	r20, r18
    14ba:	81 e0       	ldi	r24, 0x01	; 1
    14bc:	d4 16       	cp	r13, r20
    14be:	08 f0       	brcs	.+2      	; 0x14c2 <__moddi3+0x18c>
    14c0:	80 e0       	ldi	r24, 0x00	; 0
    14c2:	98 2b       	or	r25, r24
    14c4:	e1 94       	neg	r14
    14c6:	21 e0       	ldi	r18, 0x01	; 1
    14c8:	1e 14       	cp	r1, r14
    14ca:	08 f0       	brcs	.+2      	; 0x14ce <__moddi3+0x198>
    14cc:	20 e0       	ldi	r18, 0x00	; 0
    14ce:	3e 2d       	mov	r19, r14
    14d0:	39 1b       	sub	r19, r25
    14d2:	81 e0       	ldi	r24, 0x01	; 1
    14d4:	e3 16       	cp	r14, r19
    14d6:	08 f0       	brcs	.+2      	; 0x14da <__moddi3+0x1a4>
    14d8:	80 e0       	ldi	r24, 0x00	; 0
    14da:	28 2b       	or	r18, r24
    14dc:	f1 94       	neg	r15
    14de:	91 e0       	ldi	r25, 0x01	; 1
    14e0:	1f 14       	cp	r1, r15
    14e2:	08 f0       	brcs	.+2      	; 0x14e6 <__moddi3+0x1b0>
    14e4:	90 e0       	ldi	r25, 0x00	; 0
    14e6:	7f 2d       	mov	r23, r15
    14e8:	72 1b       	sub	r23, r18
    14ea:	27 2f       	mov	r18, r23
    14ec:	81 e0       	ldi	r24, 0x01	; 1
    14ee:	f7 16       	cp	r15, r23
    14f0:	08 f0       	brcs	.+2      	; 0x14f4 <__moddi3+0x1be>
    14f2:	80 e0       	ldi	r24, 0x00	; 0
    14f4:	98 2b       	or	r25, r24
    14f6:	01 95       	neg	r16
    14f8:	11 e0       	ldi	r17, 0x01	; 1
    14fa:	10 16       	cp	r1, r16
    14fc:	08 f0       	brcs	.+2      	; 0x1500 <__moddi3+0x1ca>
    14fe:	10 e0       	ldi	r17, 0x00	; 0
    1500:	80 2f       	mov	r24, r16
    1502:	89 1b       	sub	r24, r25
    1504:	98 2f       	mov	r25, r24
    1506:	81 e0       	ldi	r24, 0x01	; 1
    1508:	09 17       	cp	r16, r25
    150a:	08 f0       	brcs	.+2      	; 0x150e <__moddi3+0x1d8>
    150c:	80 e0       	ldi	r24, 0x00	; 0
    150e:	18 2b       	or	r17, r24
    1510:	87 2d       	mov	r24, r7
    1512:	81 95       	neg	r24
    1514:	81 1b       	sub	r24, r17
    1516:	a9 86       	std	Y+9, r10	; 0x09
    1518:	6a 87       	std	Y+10, r22	; 0x0a
    151a:	5b 87       	std	Y+11, r21	; 0x0b
    151c:	4c 87       	std	Y+12, r20	; 0x0c
    151e:	3d 87       	std	Y+13, r19	; 0x0d
    1520:	2e 87       	std	Y+14, r18	; 0x0e
    1522:	9f 87       	std	Y+15, r25	; 0x0f
    1524:	88 8b       	std	Y+16, r24	; 0x10
    1526:	99 81       	ldd	r25, Y+1	; 0x01
    1528:	2a 81       	ldd	r18, Y+2	; 0x02
    152a:	3b 81       	ldd	r19, Y+3	; 0x03
    152c:	4c 81       	ldd	r20, Y+4	; 0x04
    152e:	5d 81       	ldd	r21, Y+5	; 0x05
    1530:	6e 81       	ldd	r22, Y+6	; 0x06
    1532:	7f 81       	ldd	r23, Y+7	; 0x07
    1534:	a8 85       	ldd	r26, Y+8	; 0x08
    1536:	b9 85       	ldd	r27, Y+9	; 0x09
    1538:	1a 85       	ldd	r17, Y+10	; 0x0a
    153a:	0b 85       	ldd	r16, Y+11	; 0x0b
    153c:	fc 84       	ldd	r15, Y+12	; 0x0c
    153e:	ed 84       	ldd	r14, Y+13	; 0x0d
    1540:	de 84       	ldd	r13, Y+14	; 0x0e
    1542:	cf 84       	ldd	r12, Y+15	; 0x0f
    1544:	b8 88       	ldd	r11, Y+16	; 0x10
    1546:	88 e0       	ldi	r24, 0x08	; 8
    1548:	e9 e1       	ldi	r30, 0x19	; 25
    154a:	8e 2e       	mov	r8, r30
    154c:	91 2c       	mov	r9, r1
    154e:	8c 0e       	add	r8, r28
    1550:	9d 1e       	adc	r9, r29
    1552:	f4 01       	movw	r30, r8
    1554:	68 2e       	mov	r6, r24
    1556:	11 92       	st	Z+, r1
    1558:	6a 94       	dec	r6
    155a:	e9 f7       	brne	.-6      	; 0x1556 <__moddi3+0x220>
    155c:	99 8f       	std	Y+25, r25	; 0x19
    155e:	2a 8f       	std	Y+26, r18	; 0x1a
    1560:	3b 8f       	std	Y+27, r19	; 0x1b
    1562:	4c 8f       	std	Y+28, r20	; 0x1c
    1564:	5d 8f       	std	Y+29, r21	; 0x1d
    1566:	6e 8f       	std	Y+30, r22	; 0x1e
    1568:	7f 8f       	std	Y+31, r23	; 0x1f
    156a:	a8 a3       	std	Y+32, r26	; 0x20
    156c:	9e 01       	movw	r18, r28
    156e:	2f 5d       	subi	r18, 0xDF	; 223
    1570:	3f 4f       	sbci	r19, 0xFF	; 255
    1572:	f9 01       	movw	r30, r18
    1574:	11 92       	st	Z+, r1
    1576:	8a 95       	dec	r24
    1578:	e9 f7       	brne	.-6      	; 0x1574 <__moddi3+0x23e>
    157a:	b9 a3       	std	Y+33, r27	; 0x21
    157c:	1a a3       	std	Y+34, r17	; 0x22
    157e:	0b a3       	std	Y+35, r16	; 0x23
    1580:	fc a2       	std	Y+36, r15	; 0x24
    1582:	ed a2       	std	Y+37, r14	; 0x25
    1584:	de a2       	std	Y+38, r13	; 0x26
    1586:	cf a2       	std	Y+39, r12	; 0x27
    1588:	b8 a6       	std	Y+40, r11	; 0x28
    158a:	29 a0       	ldd	r2, Y+33	; 0x21
    158c:	3a a0       	ldd	r3, Y+34	; 0x22
    158e:	4b a0       	ldd	r4, Y+35	; 0x23
    1590:	5c a0       	ldd	r5, Y+36	; 0x24
    1592:	ad a0       	ldd	r10, Y+37	; 0x25
    1594:	be a0       	ldd	r11, Y+38	; 0x26
    1596:	cf a0       	ldd	r12, Y+39	; 0x27
    1598:	d8 a4       	ldd	r13, Y+40	; 0x28
    159a:	49 8d       	ldd	r20, Y+25	; 0x19
    159c:	5a 8d       	ldd	r21, Y+26	; 0x1a
    159e:	6b 8d       	ldd	r22, Y+27	; 0x1b
    15a0:	7c 8d       	ldd	r23, Y+28	; 0x1c
    15a2:	e5 96       	adiw	r28, 0x35	; 53
    15a4:	4f af       	std	Y+63, r20	; 0x3f
    15a6:	e5 97       	sbiw	r28, 0x35	; 53
    15a8:	e6 96       	adiw	r28, 0x36	; 54
    15aa:	5f af       	std	Y+63, r21	; 0x3f
    15ac:	e6 97       	sbiw	r28, 0x36	; 54
    15ae:	e7 96       	adiw	r28, 0x37	; 55
    15b0:	6f af       	std	Y+63, r22	; 0x3f
    15b2:	e7 97       	sbiw	r28, 0x37	; 55
    15b4:	e8 96       	adiw	r28, 0x38	; 56
    15b6:	7f af       	std	Y+63, r23	; 0x3f
    15b8:	e8 97       	sbiw	r28, 0x38	; 56
    15ba:	e8 96       	adiw	r28, 0x38	; 56
    15bc:	6c ac       	ldd	r6, Y+60	; 0x3c
    15be:	7d ac       	ldd	r7, Y+61	; 0x3d
    15c0:	8e ac       	ldd	r8, Y+62	; 0x3e
    15c2:	9f ac       	ldd	r9, Y+63	; 0x3f
    15c4:	e8 97       	sbiw	r28, 0x38	; 56
    15c6:	2d 96       	adiw	r28, 0x0d	; 13
    15c8:	6c ae       	std	Y+60, r6	; 0x3c
    15ca:	7d ae       	std	Y+61, r7	; 0x3d
    15cc:	8e ae       	std	Y+62, r8	; 0x3e
    15ce:	9f ae       	std	Y+63, r9	; 0x3f
    15d0:	2d 97       	sbiw	r28, 0x0d	; 13
    15d2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    15d4:	9e 8d       	ldd	r25, Y+30	; 0x1e
    15d6:	2f 8d       	ldd	r18, Y+31	; 0x1f
    15d8:	38 a1       	ldd	r19, Y+32	; 0x20
    15da:	3c 01       	movw	r6, r24
    15dc:	49 01       	movw	r8, r18
    15de:	61 96       	adiw	r28, 0x11	; 17
    15e0:	6c ae       	std	Y+60, r6	; 0x3c
    15e2:	7d ae       	std	Y+61, r7	; 0x3d
    15e4:	8e ae       	std	Y+62, r8	; 0x3e
    15e6:	9f ae       	std	Y+63, r9	; 0x3f
    15e8:	61 97       	sbiw	r28, 0x11	; 17
    15ea:	a1 14       	cp	r10, r1
    15ec:	b1 04       	cpc	r11, r1
    15ee:	c1 04       	cpc	r12, r1
    15f0:	d1 04       	cpc	r13, r1
    15f2:	09 f0       	breq	.+2      	; 0x15f6 <__moddi3+0x2c0>
    15f4:	28 c3       	rjmp	.+1616   	; 0x1c46 <__moddi3+0x910>
    15f6:	62 14       	cp	r6, r2
    15f8:	73 04       	cpc	r7, r3
    15fa:	84 04       	cpc	r8, r4
    15fc:	95 04       	cpc	r9, r5
    15fe:	08 f0       	brcs	.+2      	; 0x1602 <__moddi3+0x2cc>
    1600:	0e c1       	rjmp	.+540    	; 0x181e <__moddi3+0x4e8>
    1602:	00 e0       	ldi	r16, 0x00	; 0
    1604:	20 16       	cp	r2, r16
    1606:	00 e0       	ldi	r16, 0x00	; 0
    1608:	30 06       	cpc	r3, r16
    160a:	01 e0       	ldi	r16, 0x01	; 1
    160c:	40 06       	cpc	r4, r16
    160e:	00 e0       	ldi	r16, 0x00	; 0
    1610:	50 06       	cpc	r5, r16
    1612:	88 f4       	brcc	.+34     	; 0x1636 <__moddi3+0x300>
    1614:	1f ef       	ldi	r17, 0xFF	; 255
    1616:	21 16       	cp	r2, r17
    1618:	31 04       	cpc	r3, r1
    161a:	41 04       	cpc	r4, r1
    161c:	51 04       	cpc	r5, r1
    161e:	39 f0       	breq	.+14     	; 0x162e <__moddi3+0x2f8>
    1620:	30 f0       	brcs	.+12     	; 0x162e <__moddi3+0x2f8>
    1622:	88 e0       	ldi	r24, 0x08	; 8
    1624:	e8 2e       	mov	r14, r24
    1626:	f1 2c       	mov	r15, r1
    1628:	01 2d       	mov	r16, r1
    162a:	11 2d       	mov	r17, r1
    162c:	18 c0       	rjmp	.+48     	; 0x165e <__moddi3+0x328>
    162e:	ee 24       	eor	r14, r14
    1630:	ff 24       	eor	r15, r15
    1632:	87 01       	movw	r16, r14
    1634:	14 c0       	rjmp	.+40     	; 0x165e <__moddi3+0x328>
    1636:	20 e0       	ldi	r18, 0x00	; 0
    1638:	22 16       	cp	r2, r18
    163a:	20 e0       	ldi	r18, 0x00	; 0
    163c:	32 06       	cpc	r3, r18
    163e:	20 e0       	ldi	r18, 0x00	; 0
    1640:	42 06       	cpc	r4, r18
    1642:	21 e0       	ldi	r18, 0x01	; 1
    1644:	52 06       	cpc	r5, r18
    1646:	30 f0       	brcs	.+12     	; 0x1654 <__moddi3+0x31e>
    1648:	b8 e1       	ldi	r27, 0x18	; 24
    164a:	eb 2e       	mov	r14, r27
    164c:	f1 2c       	mov	r15, r1
    164e:	01 2d       	mov	r16, r1
    1650:	11 2d       	mov	r17, r1
    1652:	05 c0       	rjmp	.+10     	; 0x165e <__moddi3+0x328>
    1654:	a0 e1       	ldi	r26, 0x10	; 16
    1656:	ea 2e       	mov	r14, r26
    1658:	f1 2c       	mov	r15, r1
    165a:	01 2d       	mov	r16, r1
    165c:	11 2d       	mov	r17, r1
    165e:	d2 01       	movw	r26, r4
    1660:	c1 01       	movw	r24, r2
    1662:	0e 2c       	mov	r0, r14
    1664:	04 c0       	rjmp	.+8      	; 0x166e <__moddi3+0x338>
    1666:	b6 95       	lsr	r27
    1668:	a7 95       	ror	r26
    166a:	97 95       	ror	r25
    166c:	87 95       	ror	r24
    166e:	0a 94       	dec	r0
    1670:	d2 f7       	brpl	.-12     	; 0x1666 <__moddi3+0x330>
    1672:	88 59       	subi	r24, 0x98	; 152
    1674:	9f 4f       	sbci	r25, 0xFF	; 255
    1676:	dc 01       	movw	r26, r24
    1678:	2c 91       	ld	r18, X
    167a:	80 e2       	ldi	r24, 0x20	; 32
    167c:	90 e0       	ldi	r25, 0x00	; 0
    167e:	a0 e0       	ldi	r26, 0x00	; 0
    1680:	b0 e0       	ldi	r27, 0x00	; 0
    1682:	8e 19       	sub	r24, r14
    1684:	9f 09       	sbc	r25, r15
    1686:	a0 0b       	sbc	r26, r16
    1688:	b1 0b       	sbc	r27, r17
    168a:	5c 01       	movw	r10, r24
    168c:	6d 01       	movw	r12, r26
    168e:	a2 1a       	sub	r10, r18
    1690:	b1 08       	sbc	r11, r1
    1692:	c1 08       	sbc	r12, r1
    1694:	d1 08       	sbc	r13, r1
    1696:	65 96       	adiw	r28, 0x15	; 21
    1698:	ac ae       	std	Y+60, r10	; 0x3c
    169a:	bd ae       	std	Y+61, r11	; 0x3d
    169c:	ce ae       	std	Y+62, r12	; 0x3e
    169e:	df ae       	std	Y+63, r13	; 0x3f
    16a0:	65 97       	sbiw	r28, 0x15	; 21
    16a2:	a1 14       	cp	r10, r1
    16a4:	b1 04       	cpc	r11, r1
    16a6:	c1 04       	cpc	r12, r1
    16a8:	d1 04       	cpc	r13, r1
    16aa:	09 f4       	brne	.+2      	; 0x16ae <__moddi3+0x378>
    16ac:	45 c0       	rjmp	.+138    	; 0x1738 <__moddi3+0x402>
    16ae:	62 96       	adiw	r28, 0x12	; 18
    16b0:	6f ad       	ldd	r22, Y+63	; 0x3f
    16b2:	62 97       	sbiw	r28, 0x12	; 18
    16b4:	06 2e       	mov	r0, r22
    16b6:	04 c0       	rjmp	.+8      	; 0x16c0 <__moddi3+0x38a>
    16b8:	22 0c       	add	r2, r2
    16ba:	33 1c       	adc	r3, r3
    16bc:	44 1c       	adc	r4, r4
    16be:	55 1c       	adc	r5, r5
    16c0:	0a 94       	dec	r0
    16c2:	d2 f7       	brpl	.-12     	; 0x16b8 <__moddi3+0x382>
    16c4:	a4 01       	movw	r20, r8
    16c6:	93 01       	movw	r18, r6
    16c8:	06 2e       	mov	r0, r22
    16ca:	04 c0       	rjmp	.+8      	; 0x16d4 <__moddi3+0x39e>
    16cc:	22 0f       	add	r18, r18
    16ce:	33 1f       	adc	r19, r19
    16d0:	44 1f       	adc	r20, r20
    16d2:	55 1f       	adc	r21, r21
    16d4:	0a 94       	dec	r0
    16d6:	d2 f7       	brpl	.-12     	; 0x16cc <__moddi3+0x396>
    16d8:	80 e2       	ldi	r24, 0x20	; 32
    16da:	90 e0       	ldi	r25, 0x00	; 0
    16dc:	8a 19       	sub	r24, r10
    16de:	9b 09       	sbc	r25, r11
    16e0:	e8 96       	adiw	r28, 0x38	; 56
    16e2:	cc ac       	ldd	r12, Y+60	; 0x3c
    16e4:	dd ac       	ldd	r13, Y+61	; 0x3d
    16e6:	ee ac       	ldd	r14, Y+62	; 0x3e
    16e8:	ff ac       	ldd	r15, Y+63	; 0x3f
    16ea:	e8 97       	sbiw	r28, 0x38	; 56
    16ec:	04 c0       	rjmp	.+8      	; 0x16f6 <__moddi3+0x3c0>
    16ee:	f6 94       	lsr	r15
    16f0:	e7 94       	ror	r14
    16f2:	d7 94       	ror	r13
    16f4:	c7 94       	ror	r12
    16f6:	8a 95       	dec	r24
    16f8:	d2 f7       	brpl	.-12     	; 0x16ee <__moddi3+0x3b8>
    16fa:	87 01       	movw	r16, r14
    16fc:	76 01       	movw	r14, r12
    16fe:	e2 2a       	or	r14, r18
    1700:	f3 2a       	or	r15, r19
    1702:	04 2b       	or	r16, r20
    1704:	15 2b       	or	r17, r21
    1706:	61 96       	adiw	r28, 0x11	; 17
    1708:	ec ae       	std	Y+60, r14	; 0x3c
    170a:	fd ae       	std	Y+61, r15	; 0x3d
    170c:	0e af       	std	Y+62, r16	; 0x3e
    170e:	1f af       	std	Y+63, r17	; 0x3f
    1710:	61 97       	sbiw	r28, 0x11	; 17
    1712:	e8 96       	adiw	r28, 0x38	; 56
    1714:	0c ad       	ldd	r16, Y+60	; 0x3c
    1716:	1d ad       	ldd	r17, Y+61	; 0x3d
    1718:	2e ad       	ldd	r18, Y+62	; 0x3e
    171a:	3f ad       	ldd	r19, Y+63	; 0x3f
    171c:	e8 97       	sbiw	r28, 0x38	; 56
    171e:	04 c0       	rjmp	.+8      	; 0x1728 <__moddi3+0x3f2>
    1720:	00 0f       	add	r16, r16
    1722:	11 1f       	adc	r17, r17
    1724:	22 1f       	adc	r18, r18
    1726:	33 1f       	adc	r19, r19
    1728:	6a 95       	dec	r22
    172a:	d2 f7       	brpl	.-12     	; 0x1720 <__moddi3+0x3ea>
    172c:	2d 96       	adiw	r28, 0x0d	; 13
    172e:	0c af       	std	Y+60, r16	; 0x3c
    1730:	1d af       	std	Y+61, r17	; 0x3d
    1732:	2e af       	std	Y+62, r18	; 0x3e
    1734:	3f af       	std	Y+63, r19	; 0x3f
    1736:	2d 97       	sbiw	r28, 0x0d	; 13
    1738:	32 01       	movw	r6, r4
    173a:	88 24       	eor	r8, r8
    173c:	99 24       	eor	r9, r9
    173e:	a2 01       	movw	r20, r4
    1740:	91 01       	movw	r18, r2
    1742:	40 70       	andi	r20, 0x00	; 0
    1744:	50 70       	andi	r21, 0x00	; 0
    1746:	69 96       	adiw	r28, 0x19	; 25
    1748:	2c af       	std	Y+60, r18	; 0x3c
    174a:	3d af       	std	Y+61, r19	; 0x3d
    174c:	4e af       	std	Y+62, r20	; 0x3e
    174e:	5f af       	std	Y+63, r21	; 0x3f
    1750:	69 97       	sbiw	r28, 0x19	; 25
    1752:	61 96       	adiw	r28, 0x11	; 17
    1754:	6c ad       	ldd	r22, Y+60	; 0x3c
    1756:	7d ad       	ldd	r23, Y+61	; 0x3d
    1758:	8e ad       	ldd	r24, Y+62	; 0x3e
    175a:	9f ad       	ldd	r25, Y+63	; 0x3f
    175c:	61 97       	sbiw	r28, 0x11	; 17
    175e:	a4 01       	movw	r20, r8
    1760:	93 01       	movw	r18, r6
    1762:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1766:	7b 01       	movw	r14, r22
    1768:	8c 01       	movw	r16, r24
    176a:	61 96       	adiw	r28, 0x11	; 17
    176c:	6c ad       	ldd	r22, Y+60	; 0x3c
    176e:	7d ad       	ldd	r23, Y+61	; 0x3d
    1770:	8e ad       	ldd	r24, Y+62	; 0x3e
    1772:	9f ad       	ldd	r25, Y+63	; 0x3f
    1774:	61 97       	sbiw	r28, 0x11	; 17
    1776:	a4 01       	movw	r20, r8
    1778:	93 01       	movw	r18, r6
    177a:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    177e:	ca 01       	movw	r24, r20
    1780:	b9 01       	movw	r22, r18
    1782:	69 96       	adiw	r28, 0x19	; 25
    1784:	2c ad       	ldd	r18, Y+60	; 0x3c
    1786:	3d ad       	ldd	r19, Y+61	; 0x3d
    1788:	4e ad       	ldd	r20, Y+62	; 0x3e
    178a:	5f ad       	ldd	r21, Y+63	; 0x3f
    178c:	69 97       	sbiw	r28, 0x19	; 25
    178e:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    1792:	9b 01       	movw	r18, r22
    1794:	ac 01       	movw	r20, r24
    1796:	87 01       	movw	r16, r14
    1798:	ff 24       	eor	r15, r15
    179a:	ee 24       	eor	r14, r14
    179c:	2d 96       	adiw	r28, 0x0d	; 13
    179e:	ac ac       	ldd	r10, Y+60	; 0x3c
    17a0:	bd ac       	ldd	r11, Y+61	; 0x3d
    17a2:	ce ac       	ldd	r12, Y+62	; 0x3e
    17a4:	df ac       	ldd	r13, Y+63	; 0x3f
    17a6:	2d 97       	sbiw	r28, 0x0d	; 13
    17a8:	c6 01       	movw	r24, r12
    17aa:	aa 27       	eor	r26, r26
    17ac:	bb 27       	eor	r27, r27
    17ae:	57 01       	movw	r10, r14
    17b0:	68 01       	movw	r12, r16
    17b2:	a8 2a       	or	r10, r24
    17b4:	b9 2a       	or	r11, r25
    17b6:	ca 2a       	or	r12, r26
    17b8:	db 2a       	or	r13, r27
    17ba:	a2 16       	cp	r10, r18
    17bc:	b3 06       	cpc	r11, r19
    17be:	c4 06       	cpc	r12, r20
    17c0:	d5 06       	cpc	r13, r21
    17c2:	90 f4       	brcc	.+36     	; 0x17e8 <__moddi3+0x4b2>
    17c4:	a2 0c       	add	r10, r2
    17c6:	b3 1c       	adc	r11, r3
    17c8:	c4 1c       	adc	r12, r4
    17ca:	d5 1c       	adc	r13, r5
    17cc:	a2 14       	cp	r10, r2
    17ce:	b3 04       	cpc	r11, r3
    17d0:	c4 04       	cpc	r12, r4
    17d2:	d5 04       	cpc	r13, r5
    17d4:	48 f0       	brcs	.+18     	; 0x17e8 <__moddi3+0x4b2>
    17d6:	a2 16       	cp	r10, r18
    17d8:	b3 06       	cpc	r11, r19
    17da:	c4 06       	cpc	r12, r20
    17dc:	d5 06       	cpc	r13, r21
    17de:	20 f4       	brcc	.+8      	; 0x17e8 <__moddi3+0x4b2>
    17e0:	a2 0c       	add	r10, r2
    17e2:	b3 1c       	adc	r11, r3
    17e4:	c4 1c       	adc	r12, r4
    17e6:	d5 1c       	adc	r13, r5
    17e8:	a2 1a       	sub	r10, r18
    17ea:	b3 0a       	sbc	r11, r19
    17ec:	c4 0a       	sbc	r12, r20
    17ee:	d5 0a       	sbc	r13, r21
    17f0:	c6 01       	movw	r24, r12
    17f2:	b5 01       	movw	r22, r10
    17f4:	a4 01       	movw	r20, r8
    17f6:	93 01       	movw	r18, r6
    17f8:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    17fc:	7b 01       	movw	r14, r22
    17fe:	8c 01       	movw	r16, r24
    1800:	c6 01       	movw	r24, r12
    1802:	b5 01       	movw	r22, r10
    1804:	a4 01       	movw	r20, r8
    1806:	93 01       	movw	r18, r6
    1808:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    180c:	ca 01       	movw	r24, r20
    180e:	b9 01       	movw	r22, r18
    1810:	69 96       	adiw	r28, 0x19	; 25
    1812:	2c ad       	ldd	r18, Y+60	; 0x3c
    1814:	3d ad       	ldd	r19, Y+61	; 0x3d
    1816:	4e ad       	ldd	r20, Y+62	; 0x3e
    1818:	5f ad       	ldd	r21, Y+63	; 0x3f
    181a:	69 97       	sbiw	r28, 0x19	; 25
    181c:	c8 c1       	rjmp	.+912    	; 0x1bae <__moddi3+0x878>
    181e:	21 14       	cp	r2, r1
    1820:	31 04       	cpc	r3, r1
    1822:	41 04       	cpc	r4, r1
    1824:	51 04       	cpc	r5, r1
    1826:	71 f4       	brne	.+28     	; 0x1844 <__moddi3+0x50e>
    1828:	61 e0       	ldi	r22, 0x01	; 1
    182a:	70 e0       	ldi	r23, 0x00	; 0
    182c:	80 e0       	ldi	r24, 0x00	; 0
    182e:	90 e0       	ldi	r25, 0x00	; 0
    1830:	20 e0       	ldi	r18, 0x00	; 0
    1832:	30 e0       	ldi	r19, 0x00	; 0
    1834:	40 e0       	ldi	r20, 0x00	; 0
    1836:	50 e0       	ldi	r21, 0x00	; 0
    1838:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    183c:	c9 01       	movw	r24, r18
    183e:	da 01       	movw	r26, r20
    1840:	1c 01       	movw	r2, r24
    1842:	2d 01       	movw	r4, r26
    1844:	00 e0       	ldi	r16, 0x00	; 0
    1846:	20 16       	cp	r2, r16
    1848:	00 e0       	ldi	r16, 0x00	; 0
    184a:	30 06       	cpc	r3, r16
    184c:	01 e0       	ldi	r16, 0x01	; 1
    184e:	40 06       	cpc	r4, r16
    1850:	00 e0       	ldi	r16, 0x00	; 0
    1852:	50 06       	cpc	r5, r16
    1854:	88 f4       	brcc	.+34     	; 0x1878 <__moddi3+0x542>
    1856:	1f ef       	ldi	r17, 0xFF	; 255
    1858:	21 16       	cp	r2, r17
    185a:	31 04       	cpc	r3, r1
    185c:	41 04       	cpc	r4, r1
    185e:	51 04       	cpc	r5, r1
    1860:	39 f0       	breq	.+14     	; 0x1870 <__moddi3+0x53a>
    1862:	30 f0       	brcs	.+12     	; 0x1870 <__moddi3+0x53a>
    1864:	68 e0       	ldi	r22, 0x08	; 8
    1866:	e6 2e       	mov	r14, r22
    1868:	f1 2c       	mov	r15, r1
    186a:	01 2d       	mov	r16, r1
    186c:	11 2d       	mov	r17, r1
    186e:	18 c0       	rjmp	.+48     	; 0x18a0 <__moddi3+0x56a>
    1870:	ee 24       	eor	r14, r14
    1872:	ff 24       	eor	r15, r15
    1874:	87 01       	movw	r16, r14
    1876:	14 c0       	rjmp	.+40     	; 0x18a0 <__moddi3+0x56a>
    1878:	20 e0       	ldi	r18, 0x00	; 0
    187a:	22 16       	cp	r2, r18
    187c:	20 e0       	ldi	r18, 0x00	; 0
    187e:	32 06       	cpc	r3, r18
    1880:	20 e0       	ldi	r18, 0x00	; 0
    1882:	42 06       	cpc	r4, r18
    1884:	21 e0       	ldi	r18, 0x01	; 1
    1886:	52 06       	cpc	r5, r18
    1888:	30 f0       	brcs	.+12     	; 0x1896 <__moddi3+0x560>
    188a:	58 e1       	ldi	r21, 0x18	; 24
    188c:	e5 2e       	mov	r14, r21
    188e:	f1 2c       	mov	r15, r1
    1890:	01 2d       	mov	r16, r1
    1892:	11 2d       	mov	r17, r1
    1894:	05 c0       	rjmp	.+10     	; 0x18a0 <__moddi3+0x56a>
    1896:	40 e1       	ldi	r20, 0x10	; 16
    1898:	e4 2e       	mov	r14, r20
    189a:	f1 2c       	mov	r15, r1
    189c:	01 2d       	mov	r16, r1
    189e:	11 2d       	mov	r17, r1
    18a0:	d2 01       	movw	r26, r4
    18a2:	c1 01       	movw	r24, r2
    18a4:	0e 2c       	mov	r0, r14
    18a6:	04 c0       	rjmp	.+8      	; 0x18b0 <__moddi3+0x57a>
    18a8:	b6 95       	lsr	r27
    18aa:	a7 95       	ror	r26
    18ac:	97 95       	ror	r25
    18ae:	87 95       	ror	r24
    18b0:	0a 94       	dec	r0
    18b2:	d2 f7       	brpl	.-12     	; 0x18a8 <__moddi3+0x572>
    18b4:	88 59       	subi	r24, 0x98	; 152
    18b6:	9f 4f       	sbci	r25, 0xFF	; 255
    18b8:	dc 01       	movw	r26, r24
    18ba:	2c 91       	ld	r18, X
    18bc:	30 e2       	ldi	r19, 0x20	; 32
    18be:	a3 2e       	mov	r10, r19
    18c0:	b1 2c       	mov	r11, r1
    18c2:	c1 2c       	mov	r12, r1
    18c4:	d1 2c       	mov	r13, r1
    18c6:	d6 01       	movw	r26, r12
    18c8:	c5 01       	movw	r24, r10
    18ca:	8e 19       	sub	r24, r14
    18cc:	9f 09       	sbc	r25, r15
    18ce:	a0 0b       	sbc	r26, r16
    18d0:	b1 0b       	sbc	r27, r17
    18d2:	7c 01       	movw	r14, r24
    18d4:	8d 01       	movw	r16, r26
    18d6:	e2 1a       	sub	r14, r18
    18d8:	f1 08       	sbc	r15, r1
    18da:	01 09       	sbc	r16, r1
    18dc:	11 09       	sbc	r17, r1
    18de:	65 96       	adiw	r28, 0x15	; 21
    18e0:	ec ae       	std	Y+60, r14	; 0x3c
    18e2:	fd ae       	std	Y+61, r15	; 0x3d
    18e4:	0e af       	std	Y+62, r16	; 0x3e
    18e6:	1f af       	std	Y+63, r17	; 0x3f
    18e8:	65 97       	sbiw	r28, 0x15	; 21
    18ea:	e1 14       	cp	r14, r1
    18ec:	f1 04       	cpc	r15, r1
    18ee:	01 05       	cpc	r16, r1
    18f0:	11 05       	cpc	r17, r1
    18f2:	39 f4       	brne	.+14     	; 0x1902 <__moddi3+0x5cc>
    18f4:	64 01       	movw	r12, r8
    18f6:	53 01       	movw	r10, r6
    18f8:	a2 18       	sub	r10, r2
    18fa:	b3 08       	sbc	r11, r3
    18fc:	c4 08       	sbc	r12, r4
    18fe:	d5 08       	sbc	r13, r5
    1900:	ec c0       	rjmp	.+472    	; 0x1ada <__moddi3+0x7a4>
    1902:	62 96       	adiw	r28, 0x12	; 18
    1904:	ff ac       	ldd	r15, Y+63	; 0x3f
    1906:	62 97       	sbiw	r28, 0x12	; 18
    1908:	e4 96       	adiw	r28, 0x34	; 52
    190a:	ff ae       	std	Y+63, r15	; 0x3f
    190c:	e4 97       	sbiw	r28, 0x34	; 52
    190e:	0f 2c       	mov	r0, r15
    1910:	04 c0       	rjmp	.+8      	; 0x191a <__moddi3+0x5e4>
    1912:	22 0c       	add	r2, r2
    1914:	33 1c       	adc	r3, r3
    1916:	44 1c       	adc	r4, r4
    1918:	55 1c       	adc	r5, r5
    191a:	0a 94       	dec	r0
    191c:	d2 f7       	brpl	.-12     	; 0x1912 <__moddi3+0x5dc>
    191e:	8a 2d       	mov	r24, r10
    1920:	8f 19       	sub	r24, r15
    1922:	64 01       	movw	r12, r8
    1924:	53 01       	movw	r10, r6
    1926:	08 2e       	mov	r0, r24
    1928:	04 c0       	rjmp	.+8      	; 0x1932 <__moddi3+0x5fc>
    192a:	d6 94       	lsr	r13
    192c:	c7 94       	ror	r12
    192e:	b7 94       	ror	r11
    1930:	a7 94       	ror	r10
    1932:	0a 94       	dec	r0
    1934:	d2 f7       	brpl	.-12     	; 0x192a <__moddi3+0x5f4>
    1936:	a4 01       	movw	r20, r8
    1938:	93 01       	movw	r18, r6
    193a:	04 c0       	rjmp	.+8      	; 0x1944 <__moddi3+0x60e>
    193c:	22 0f       	add	r18, r18
    193e:	33 1f       	adc	r19, r19
    1940:	44 1f       	adc	r20, r20
    1942:	55 1f       	adc	r21, r21
    1944:	fa 94       	dec	r15
    1946:	d2 f7       	brpl	.-12     	; 0x193c <__moddi3+0x606>
    1948:	e8 96       	adiw	r28, 0x38	; 56
    194a:	6c ac       	ldd	r6, Y+60	; 0x3c
    194c:	7d ac       	ldd	r7, Y+61	; 0x3d
    194e:	8e ac       	ldd	r8, Y+62	; 0x3e
    1950:	9f ac       	ldd	r9, Y+63	; 0x3f
    1952:	e8 97       	sbiw	r28, 0x38	; 56
    1954:	04 c0       	rjmp	.+8      	; 0x195e <__moddi3+0x628>
    1956:	96 94       	lsr	r9
    1958:	87 94       	ror	r8
    195a:	77 94       	ror	r7
    195c:	67 94       	ror	r6
    195e:	8a 95       	dec	r24
    1960:	d2 f7       	brpl	.-12     	; 0x1956 <__moddi3+0x620>
    1962:	84 01       	movw	r16, r8
    1964:	73 01       	movw	r14, r6
    1966:	e2 2a       	or	r14, r18
    1968:	f3 2a       	or	r15, r19
    196a:	04 2b       	or	r16, r20
    196c:	15 2b       	or	r17, r21
    196e:	29 96       	adiw	r28, 0x09	; 9
    1970:	ec ae       	std	Y+60, r14	; 0x3c
    1972:	fd ae       	std	Y+61, r15	; 0x3d
    1974:	0e af       	std	Y+62, r16	; 0x3e
    1976:	1f af       	std	Y+63, r17	; 0x3f
    1978:	29 97       	sbiw	r28, 0x09	; 9
    197a:	32 01       	movw	r6, r4
    197c:	88 24       	eor	r8, r8
    197e:	99 24       	eor	r9, r9
    1980:	92 01       	movw	r18, r4
    1982:	81 01       	movw	r16, r2
    1984:	20 70       	andi	r18, 0x00	; 0
    1986:	30 70       	andi	r19, 0x00	; 0
    1988:	6d 96       	adiw	r28, 0x1d	; 29
    198a:	0c af       	std	Y+60, r16	; 0x3c
    198c:	1d af       	std	Y+61, r17	; 0x3d
    198e:	2e af       	std	Y+62, r18	; 0x3e
    1990:	3f af       	std	Y+63, r19	; 0x3f
    1992:	6d 97       	sbiw	r28, 0x1d	; 29
    1994:	c6 01       	movw	r24, r12
    1996:	b5 01       	movw	r22, r10
    1998:	a4 01       	movw	r20, r8
    199a:	93 01       	movw	r18, r6
    199c:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    19a0:	7b 01       	movw	r14, r22
    19a2:	8c 01       	movw	r16, r24
    19a4:	c6 01       	movw	r24, r12
    19a6:	b5 01       	movw	r22, r10
    19a8:	a4 01       	movw	r20, r8
    19aa:	93 01       	movw	r18, r6
    19ac:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    19b0:	ca 01       	movw	r24, r20
    19b2:	b9 01       	movw	r22, r18
    19b4:	6d 96       	adiw	r28, 0x1d	; 29
    19b6:	2c ad       	ldd	r18, Y+60	; 0x3c
    19b8:	3d ad       	ldd	r19, Y+61	; 0x3d
    19ba:	4e ad       	ldd	r20, Y+62	; 0x3e
    19bc:	5f ad       	ldd	r21, Y+63	; 0x3f
    19be:	6d 97       	sbiw	r28, 0x1d	; 29
    19c0:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    19c4:	9b 01       	movw	r18, r22
    19c6:	ac 01       	movw	r20, r24
    19c8:	87 01       	movw	r16, r14
    19ca:	ff 24       	eor	r15, r15
    19cc:	ee 24       	eor	r14, r14
    19ce:	29 96       	adiw	r28, 0x09	; 9
    19d0:	ac ac       	ldd	r10, Y+60	; 0x3c
    19d2:	bd ac       	ldd	r11, Y+61	; 0x3d
    19d4:	ce ac       	ldd	r12, Y+62	; 0x3e
    19d6:	df ac       	ldd	r13, Y+63	; 0x3f
    19d8:	29 97       	sbiw	r28, 0x09	; 9
    19da:	c6 01       	movw	r24, r12
    19dc:	aa 27       	eor	r26, r26
    19de:	bb 27       	eor	r27, r27
    19e0:	5c 01       	movw	r10, r24
    19e2:	6d 01       	movw	r12, r26
    19e4:	ae 28       	or	r10, r14
    19e6:	bf 28       	or	r11, r15
    19e8:	c0 2a       	or	r12, r16
    19ea:	d1 2a       	or	r13, r17
    19ec:	a2 16       	cp	r10, r18
    19ee:	b3 06       	cpc	r11, r19
    19f0:	c4 06       	cpc	r12, r20
    19f2:	d5 06       	cpc	r13, r21
    19f4:	90 f4       	brcc	.+36     	; 0x1a1a <__moddi3+0x6e4>
    19f6:	a2 0c       	add	r10, r2
    19f8:	b3 1c       	adc	r11, r3
    19fa:	c4 1c       	adc	r12, r4
    19fc:	d5 1c       	adc	r13, r5
    19fe:	a2 14       	cp	r10, r2
    1a00:	b3 04       	cpc	r11, r3
    1a02:	c4 04       	cpc	r12, r4
    1a04:	d5 04       	cpc	r13, r5
    1a06:	48 f0       	brcs	.+18     	; 0x1a1a <__moddi3+0x6e4>
    1a08:	a2 16       	cp	r10, r18
    1a0a:	b3 06       	cpc	r11, r19
    1a0c:	c4 06       	cpc	r12, r20
    1a0e:	d5 06       	cpc	r13, r21
    1a10:	20 f4       	brcc	.+8      	; 0x1a1a <__moddi3+0x6e4>
    1a12:	a2 0c       	add	r10, r2
    1a14:	b3 1c       	adc	r11, r3
    1a16:	c4 1c       	adc	r12, r4
    1a18:	d5 1c       	adc	r13, r5
    1a1a:	a2 1a       	sub	r10, r18
    1a1c:	b3 0a       	sbc	r11, r19
    1a1e:	c4 0a       	sbc	r12, r20
    1a20:	d5 0a       	sbc	r13, r21
    1a22:	c6 01       	movw	r24, r12
    1a24:	b5 01       	movw	r22, r10
    1a26:	a4 01       	movw	r20, r8
    1a28:	93 01       	movw	r18, r6
    1a2a:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1a2e:	7b 01       	movw	r14, r22
    1a30:	8c 01       	movw	r16, r24
    1a32:	c6 01       	movw	r24, r12
    1a34:	b5 01       	movw	r22, r10
    1a36:	a4 01       	movw	r20, r8
    1a38:	93 01       	movw	r18, r6
    1a3a:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1a3e:	ca 01       	movw	r24, r20
    1a40:	b9 01       	movw	r22, r18
    1a42:	6d 96       	adiw	r28, 0x1d	; 29
    1a44:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a46:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a48:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a4a:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a4c:	6d 97       	sbiw	r28, 0x1d	; 29
    1a4e:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    1a52:	9b 01       	movw	r18, r22
    1a54:	ac 01       	movw	r20, r24
    1a56:	87 01       	movw	r16, r14
    1a58:	ff 24       	eor	r15, r15
    1a5a:	ee 24       	eor	r14, r14
    1a5c:	29 96       	adiw	r28, 0x09	; 9
    1a5e:	8c ad       	ldd	r24, Y+60	; 0x3c
    1a60:	9d ad       	ldd	r25, Y+61	; 0x3d
    1a62:	ae ad       	ldd	r26, Y+62	; 0x3e
    1a64:	bf ad       	ldd	r27, Y+63	; 0x3f
    1a66:	29 97       	sbiw	r28, 0x09	; 9
    1a68:	a0 70       	andi	r26, 0x00	; 0
    1a6a:	b0 70       	andi	r27, 0x00	; 0
    1a6c:	57 01       	movw	r10, r14
    1a6e:	68 01       	movw	r12, r16
    1a70:	a8 2a       	or	r10, r24
    1a72:	b9 2a       	or	r11, r25
    1a74:	ca 2a       	or	r12, r26
    1a76:	db 2a       	or	r13, r27
    1a78:	a2 16       	cp	r10, r18
    1a7a:	b3 06       	cpc	r11, r19
    1a7c:	c4 06       	cpc	r12, r20
    1a7e:	d5 06       	cpc	r13, r21
    1a80:	90 f4       	brcc	.+36     	; 0x1aa6 <__moddi3+0x770>
    1a82:	a2 0c       	add	r10, r2
    1a84:	b3 1c       	adc	r11, r3
    1a86:	c4 1c       	adc	r12, r4
    1a88:	d5 1c       	adc	r13, r5
    1a8a:	a2 14       	cp	r10, r2
    1a8c:	b3 04       	cpc	r11, r3
    1a8e:	c4 04       	cpc	r12, r4
    1a90:	d5 04       	cpc	r13, r5
    1a92:	48 f0       	brcs	.+18     	; 0x1aa6 <__moddi3+0x770>
    1a94:	a2 16       	cp	r10, r18
    1a96:	b3 06       	cpc	r11, r19
    1a98:	c4 06       	cpc	r12, r20
    1a9a:	d5 06       	cpc	r13, r21
    1a9c:	20 f4       	brcc	.+8      	; 0x1aa6 <__moddi3+0x770>
    1a9e:	a2 0c       	add	r10, r2
    1aa0:	b3 1c       	adc	r11, r3
    1aa2:	c4 1c       	adc	r12, r4
    1aa4:	d5 1c       	adc	r13, r5
    1aa6:	e8 96       	adiw	r28, 0x38	; 56
    1aa8:	ec ac       	ldd	r14, Y+60	; 0x3c
    1aaa:	fd ac       	ldd	r15, Y+61	; 0x3d
    1aac:	0e ad       	ldd	r16, Y+62	; 0x3e
    1aae:	1f ad       	ldd	r17, Y+63	; 0x3f
    1ab0:	e8 97       	sbiw	r28, 0x38	; 56
    1ab2:	e4 96       	adiw	r28, 0x34	; 52
    1ab4:	0f ac       	ldd	r0, Y+63	; 0x3f
    1ab6:	e4 97       	sbiw	r28, 0x34	; 52
    1ab8:	04 c0       	rjmp	.+8      	; 0x1ac2 <__moddi3+0x78c>
    1aba:	ee 0c       	add	r14, r14
    1abc:	ff 1c       	adc	r15, r15
    1abe:	00 1f       	adc	r16, r16
    1ac0:	11 1f       	adc	r17, r17
    1ac2:	0a 94       	dec	r0
    1ac4:	d2 f7       	brpl	.-12     	; 0x1aba <__moddi3+0x784>
    1ac6:	2d 96       	adiw	r28, 0x0d	; 13
    1ac8:	ec ae       	std	Y+60, r14	; 0x3c
    1aca:	fd ae       	std	Y+61, r15	; 0x3d
    1acc:	0e af       	std	Y+62, r16	; 0x3e
    1ace:	1f af       	std	Y+63, r17	; 0x3f
    1ad0:	2d 97       	sbiw	r28, 0x0d	; 13
    1ad2:	a2 1a       	sub	r10, r18
    1ad4:	b3 0a       	sbc	r11, r19
    1ad6:	c4 0a       	sbc	r12, r20
    1ad8:	d5 0a       	sbc	r13, r21
    1ada:	32 01       	movw	r6, r4
    1adc:	88 24       	eor	r8, r8
    1ade:	99 24       	eor	r9, r9
    1ae0:	92 01       	movw	r18, r4
    1ae2:	81 01       	movw	r16, r2
    1ae4:	20 70       	andi	r18, 0x00	; 0
    1ae6:	30 70       	andi	r19, 0x00	; 0
    1ae8:	a1 96       	adiw	r28, 0x21	; 33
    1aea:	0c af       	std	Y+60, r16	; 0x3c
    1aec:	1d af       	std	Y+61, r17	; 0x3d
    1aee:	2e af       	std	Y+62, r18	; 0x3e
    1af0:	3f af       	std	Y+63, r19	; 0x3f
    1af2:	a1 97       	sbiw	r28, 0x21	; 33
    1af4:	c6 01       	movw	r24, r12
    1af6:	b5 01       	movw	r22, r10
    1af8:	a4 01       	movw	r20, r8
    1afa:	93 01       	movw	r18, r6
    1afc:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1b00:	7b 01       	movw	r14, r22
    1b02:	8c 01       	movw	r16, r24
    1b04:	c6 01       	movw	r24, r12
    1b06:	b5 01       	movw	r22, r10
    1b08:	a4 01       	movw	r20, r8
    1b0a:	93 01       	movw	r18, r6
    1b0c:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1b10:	ca 01       	movw	r24, r20
    1b12:	b9 01       	movw	r22, r18
    1b14:	a1 96       	adiw	r28, 0x21	; 33
    1b16:	2c ad       	ldd	r18, Y+60	; 0x3c
    1b18:	3d ad       	ldd	r19, Y+61	; 0x3d
    1b1a:	4e ad       	ldd	r20, Y+62	; 0x3e
    1b1c:	5f ad       	ldd	r21, Y+63	; 0x3f
    1b1e:	a1 97       	sbiw	r28, 0x21	; 33
    1b20:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    1b24:	9b 01       	movw	r18, r22
    1b26:	ac 01       	movw	r20, r24
    1b28:	87 01       	movw	r16, r14
    1b2a:	ff 24       	eor	r15, r15
    1b2c:	ee 24       	eor	r14, r14
    1b2e:	2d 96       	adiw	r28, 0x0d	; 13
    1b30:	ac ac       	ldd	r10, Y+60	; 0x3c
    1b32:	bd ac       	ldd	r11, Y+61	; 0x3d
    1b34:	ce ac       	ldd	r12, Y+62	; 0x3e
    1b36:	df ac       	ldd	r13, Y+63	; 0x3f
    1b38:	2d 97       	sbiw	r28, 0x0d	; 13
    1b3a:	c6 01       	movw	r24, r12
    1b3c:	aa 27       	eor	r26, r26
    1b3e:	bb 27       	eor	r27, r27
    1b40:	57 01       	movw	r10, r14
    1b42:	68 01       	movw	r12, r16
    1b44:	a8 2a       	or	r10, r24
    1b46:	b9 2a       	or	r11, r25
    1b48:	ca 2a       	or	r12, r26
    1b4a:	db 2a       	or	r13, r27
    1b4c:	a2 16       	cp	r10, r18
    1b4e:	b3 06       	cpc	r11, r19
    1b50:	c4 06       	cpc	r12, r20
    1b52:	d5 06       	cpc	r13, r21
    1b54:	90 f4       	brcc	.+36     	; 0x1b7a <__moddi3+0x844>
    1b56:	a2 0c       	add	r10, r2
    1b58:	b3 1c       	adc	r11, r3
    1b5a:	c4 1c       	adc	r12, r4
    1b5c:	d5 1c       	adc	r13, r5
    1b5e:	a2 14       	cp	r10, r2
    1b60:	b3 04       	cpc	r11, r3
    1b62:	c4 04       	cpc	r12, r4
    1b64:	d5 04       	cpc	r13, r5
    1b66:	48 f0       	brcs	.+18     	; 0x1b7a <__moddi3+0x844>
    1b68:	a2 16       	cp	r10, r18
    1b6a:	b3 06       	cpc	r11, r19
    1b6c:	c4 06       	cpc	r12, r20
    1b6e:	d5 06       	cpc	r13, r21
    1b70:	20 f4       	brcc	.+8      	; 0x1b7a <__moddi3+0x844>
    1b72:	a2 0c       	add	r10, r2
    1b74:	b3 1c       	adc	r11, r3
    1b76:	c4 1c       	adc	r12, r4
    1b78:	d5 1c       	adc	r13, r5
    1b7a:	a2 1a       	sub	r10, r18
    1b7c:	b3 0a       	sbc	r11, r19
    1b7e:	c4 0a       	sbc	r12, r20
    1b80:	d5 0a       	sbc	r13, r21
    1b82:	c6 01       	movw	r24, r12
    1b84:	b5 01       	movw	r22, r10
    1b86:	a4 01       	movw	r20, r8
    1b88:	93 01       	movw	r18, r6
    1b8a:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1b8e:	7b 01       	movw	r14, r22
    1b90:	8c 01       	movw	r16, r24
    1b92:	c6 01       	movw	r24, r12
    1b94:	b5 01       	movw	r22, r10
    1b96:	a4 01       	movw	r20, r8
    1b98:	93 01       	movw	r18, r6
    1b9a:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1b9e:	ca 01       	movw	r24, r20
    1ba0:	b9 01       	movw	r22, r18
    1ba2:	a1 96       	adiw	r28, 0x21	; 33
    1ba4:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ba6:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ba8:	4e ad       	ldd	r20, Y+62	; 0x3e
    1baa:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bac:	a1 97       	sbiw	r28, 0x21	; 33
    1bae:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    1bb2:	9b 01       	movw	r18, r22
    1bb4:	ac 01       	movw	r20, r24
    1bb6:	87 01       	movw	r16, r14
    1bb8:	ff 24       	eor	r15, r15
    1bba:	ee 24       	eor	r14, r14
    1bbc:	2d 96       	adiw	r28, 0x0d	; 13
    1bbe:	8c ad       	ldd	r24, Y+60	; 0x3c
    1bc0:	9d ad       	ldd	r25, Y+61	; 0x3d
    1bc2:	ae ad       	ldd	r26, Y+62	; 0x3e
    1bc4:	bf ad       	ldd	r27, Y+63	; 0x3f
    1bc6:	2d 97       	sbiw	r28, 0x0d	; 13
    1bc8:	a0 70       	andi	r26, 0x00	; 0
    1bca:	b0 70       	andi	r27, 0x00	; 0
    1bcc:	e8 2a       	or	r14, r24
    1bce:	f9 2a       	or	r15, r25
    1bd0:	0a 2b       	or	r16, r26
    1bd2:	1b 2b       	or	r17, r27
    1bd4:	e2 16       	cp	r14, r18
    1bd6:	f3 06       	cpc	r15, r19
    1bd8:	04 07       	cpc	r16, r20
    1bda:	15 07       	cpc	r17, r21
    1bdc:	90 f4       	brcc	.+36     	; 0x1c02 <__moddi3+0x8cc>
    1bde:	e2 0c       	add	r14, r2
    1be0:	f3 1c       	adc	r15, r3
    1be2:	04 1d       	adc	r16, r4
    1be4:	15 1d       	adc	r17, r5
    1be6:	e2 14       	cp	r14, r2
    1be8:	f3 04       	cpc	r15, r3
    1bea:	04 05       	cpc	r16, r4
    1bec:	15 05       	cpc	r17, r5
    1bee:	48 f0       	brcs	.+18     	; 0x1c02 <__moddi3+0x8cc>
    1bf0:	e2 16       	cp	r14, r18
    1bf2:	f3 06       	cpc	r15, r19
    1bf4:	04 07       	cpc	r16, r20
    1bf6:	15 07       	cpc	r17, r21
    1bf8:	20 f4       	brcc	.+8      	; 0x1c02 <__moddi3+0x8cc>
    1bfa:	e2 0c       	add	r14, r2
    1bfc:	f3 1c       	adc	r15, r3
    1bfe:	04 1d       	adc	r16, r4
    1c00:	15 1d       	adc	r17, r5
    1c02:	e2 1a       	sub	r14, r18
    1c04:	f3 0a       	sbc	r15, r19
    1c06:	04 0b       	sbc	r16, r20
    1c08:	15 0b       	sbc	r17, r21
    1c0a:	d8 01       	movw	r26, r16
    1c0c:	c7 01       	movw	r24, r14
    1c0e:	62 96       	adiw	r28, 0x12	; 18
    1c10:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c12:	62 97       	sbiw	r28, 0x12	; 18
    1c14:	04 c0       	rjmp	.+8      	; 0x1c1e <__moddi3+0x8e8>
    1c16:	b6 95       	lsr	r27
    1c18:	a7 95       	ror	r26
    1c1a:	97 95       	ror	r25
    1c1c:	87 95       	ror	r24
    1c1e:	0a 94       	dec	r0
    1c20:	d2 f7       	brpl	.-12     	; 0x1c16 <__moddi3+0x8e0>
    1c22:	89 a7       	std	Y+41, r24	; 0x29
    1c24:	9a a7       	std	Y+42, r25	; 0x2a
    1c26:	ab a7       	std	Y+43, r26	; 0x2b
    1c28:	bc a7       	std	Y+44, r27	; 0x2c
    1c2a:	1d a6       	std	Y+45, r1	; 0x2d
    1c2c:	1e a6       	std	Y+46, r1	; 0x2e
    1c2e:	1f a6       	std	Y+47, r1	; 0x2f
    1c30:	18 aa       	std	Y+48, r1	; 0x30
    1c32:	89 8b       	std	Y+17, r24	; 0x11
    1c34:	8a a5       	ldd	r24, Y+42	; 0x2a
    1c36:	8a 8b       	std	Y+18, r24	; 0x12
    1c38:	8b a5       	ldd	r24, Y+43	; 0x2b
    1c3a:	8b 8b       	std	Y+19, r24	; 0x13
    1c3c:	8c a5       	ldd	r24, Y+44	; 0x2c
    1c3e:	8c 8b       	std	Y+20, r24	; 0x14
    1c40:	8d a5       	ldd	r24, Y+45	; 0x2d
    1c42:	8d 8b       	std	Y+21, r24	; 0x15
    1c44:	2f c3       	rjmp	.+1630   	; 0x22a4 <__moddi3+0xf6e>
    1c46:	6a 14       	cp	r6, r10
    1c48:	7b 04       	cpc	r7, r11
    1c4a:	8c 04       	cpc	r8, r12
    1c4c:	9d 04       	cpc	r9, r13
    1c4e:	48 f4       	brcc	.+18     	; 0x1c62 <__moddi3+0x92c>
    1c50:	49 8b       	std	Y+17, r20	; 0x11
    1c52:	5a 8b       	std	Y+18, r21	; 0x12
    1c54:	6b 8b       	std	Y+19, r22	; 0x13
    1c56:	7c 8b       	std	Y+20, r23	; 0x14
    1c58:	8d 8b       	std	Y+21, r24	; 0x15
    1c5a:	9e 8b       	std	Y+22, r25	; 0x16
    1c5c:	2f 8b       	std	Y+23, r18	; 0x17
    1c5e:	38 8f       	std	Y+24, r19	; 0x18
    1c60:	27 c3       	rjmp	.+1614   	; 0x22b0 <__moddi3+0xf7a>
    1c62:	00 e0       	ldi	r16, 0x00	; 0
    1c64:	a0 16       	cp	r10, r16
    1c66:	00 e0       	ldi	r16, 0x00	; 0
    1c68:	b0 06       	cpc	r11, r16
    1c6a:	01 e0       	ldi	r16, 0x01	; 1
    1c6c:	c0 06       	cpc	r12, r16
    1c6e:	00 e0       	ldi	r16, 0x00	; 0
    1c70:	d0 06       	cpc	r13, r16
    1c72:	88 f4       	brcc	.+34     	; 0x1c96 <__moddi3+0x960>
    1c74:	1f ef       	ldi	r17, 0xFF	; 255
    1c76:	a1 16       	cp	r10, r17
    1c78:	b1 04       	cpc	r11, r1
    1c7a:	c1 04       	cpc	r12, r1
    1c7c:	d1 04       	cpc	r13, r1
    1c7e:	39 f0       	breq	.+14     	; 0x1c8e <__moddi3+0x958>
    1c80:	30 f0       	brcs	.+12     	; 0x1c8e <__moddi3+0x958>
    1c82:	28 e0       	ldi	r18, 0x08	; 8
    1c84:	e2 2e       	mov	r14, r18
    1c86:	f1 2c       	mov	r15, r1
    1c88:	01 2d       	mov	r16, r1
    1c8a:	11 2d       	mov	r17, r1
    1c8c:	18 c0       	rjmp	.+48     	; 0x1cbe <__moddi3+0x988>
    1c8e:	ee 24       	eor	r14, r14
    1c90:	ff 24       	eor	r15, r15
    1c92:	87 01       	movw	r16, r14
    1c94:	14 c0       	rjmp	.+40     	; 0x1cbe <__moddi3+0x988>
    1c96:	20 e0       	ldi	r18, 0x00	; 0
    1c98:	a2 16       	cp	r10, r18
    1c9a:	20 e0       	ldi	r18, 0x00	; 0
    1c9c:	b2 06       	cpc	r11, r18
    1c9e:	20 e0       	ldi	r18, 0x00	; 0
    1ca0:	c2 06       	cpc	r12, r18
    1ca2:	21 e0       	ldi	r18, 0x01	; 1
    1ca4:	d2 06       	cpc	r13, r18
    1ca6:	30 f0       	brcs	.+12     	; 0x1cb4 <__moddi3+0x97e>
    1ca8:	98 e1       	ldi	r25, 0x18	; 24
    1caa:	e9 2e       	mov	r14, r25
    1cac:	f1 2c       	mov	r15, r1
    1cae:	01 2d       	mov	r16, r1
    1cb0:	11 2d       	mov	r17, r1
    1cb2:	05 c0       	rjmp	.+10     	; 0x1cbe <__moddi3+0x988>
    1cb4:	80 e1       	ldi	r24, 0x10	; 16
    1cb6:	e8 2e       	mov	r14, r24
    1cb8:	f1 2c       	mov	r15, r1
    1cba:	01 2d       	mov	r16, r1
    1cbc:	11 2d       	mov	r17, r1
    1cbe:	d6 01       	movw	r26, r12
    1cc0:	c5 01       	movw	r24, r10
    1cc2:	0e 2c       	mov	r0, r14
    1cc4:	04 c0       	rjmp	.+8      	; 0x1cce <__moddi3+0x998>
    1cc6:	b6 95       	lsr	r27
    1cc8:	a7 95       	ror	r26
    1cca:	97 95       	ror	r25
    1ccc:	87 95       	ror	r24
    1cce:	0a 94       	dec	r0
    1cd0:	d2 f7       	brpl	.-12     	; 0x1cc6 <__moddi3+0x990>
    1cd2:	88 59       	subi	r24, 0x98	; 152
    1cd4:	9f 4f       	sbci	r25, 0xFF	; 255
    1cd6:	dc 01       	movw	r26, r24
    1cd8:	2c 91       	ld	r18, X
    1cda:	80 e2       	ldi	r24, 0x20	; 32
    1cdc:	90 e0       	ldi	r25, 0x00	; 0
    1cde:	a0 e0       	ldi	r26, 0x00	; 0
    1ce0:	b0 e0       	ldi	r27, 0x00	; 0
    1ce2:	8e 19       	sub	r24, r14
    1ce4:	9f 09       	sbc	r25, r15
    1ce6:	a0 0b       	sbc	r26, r16
    1ce8:	b1 0b       	sbc	r27, r17
    1cea:	82 1b       	sub	r24, r18
    1cec:	91 09       	sbc	r25, r1
    1cee:	a1 09       	sbc	r26, r1
    1cf0:	b1 09       	sbc	r27, r1
    1cf2:	00 97       	sbiw	r24, 0x00	; 0
    1cf4:	a1 05       	cpc	r26, r1
    1cf6:	b1 05       	cpc	r27, r1
    1cf8:	09 f0       	breq	.+2      	; 0x1cfc <__moddi3+0x9c6>
    1cfa:	59 c0       	rjmp	.+178    	; 0x1dae <__moddi3+0xa78>
    1cfc:	a6 14       	cp	r10, r6
    1cfe:	b7 04       	cpc	r11, r7
    1d00:	c8 04       	cpc	r12, r8
    1d02:	d9 04       	cpc	r13, r9
    1d04:	70 f0       	brcs	.+28     	; 0x1d22 <__moddi3+0x9ec>
    1d06:	e8 96       	adiw	r28, 0x38	; 56
    1d08:	ec ac       	ldd	r14, Y+60	; 0x3c
    1d0a:	fd ac       	ldd	r15, Y+61	; 0x3d
    1d0c:	0e ad       	ldd	r16, Y+62	; 0x3e
    1d0e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1d10:	e8 97       	sbiw	r28, 0x38	; 56
    1d12:	e2 14       	cp	r14, r2
    1d14:	f3 04       	cpc	r15, r3
    1d16:	04 05       	cpc	r16, r4
    1d18:	15 05       	cpc	r17, r5
    1d1a:	18 f4       	brcc	.+6      	; 0x1d22 <__moddi3+0x9ec>
    1d1c:	d8 01       	movw	r26, r16
    1d1e:	c7 01       	movw	r24, r14
    1d20:	2f c0       	rjmp	.+94     	; 0x1d80 <__moddi3+0xa4a>
    1d22:	e8 96       	adiw	r28, 0x38	; 56
    1d24:	8c ad       	ldd	r24, Y+60	; 0x3c
    1d26:	9d ad       	ldd	r25, Y+61	; 0x3d
    1d28:	ae ad       	ldd	r26, Y+62	; 0x3e
    1d2a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1d2c:	e8 97       	sbiw	r28, 0x38	; 56
    1d2e:	82 19       	sub	r24, r2
    1d30:	93 09       	sbc	r25, r3
    1d32:	a4 09       	sbc	r26, r4
    1d34:	b5 09       	sbc	r27, r5
    1d36:	a4 01       	movw	r20, r8
    1d38:	93 01       	movw	r18, r6
    1d3a:	2a 19       	sub	r18, r10
    1d3c:	3b 09       	sbc	r19, r11
    1d3e:	4c 09       	sbc	r20, r12
    1d40:	5d 09       	sbc	r21, r13
    1d42:	aa 24       	eor	r10, r10
    1d44:	bb 24       	eor	r11, r11
    1d46:	65 01       	movw	r12, r10
    1d48:	e8 96       	adiw	r28, 0x38	; 56
    1d4a:	6c ac       	ldd	r6, Y+60	; 0x3c
    1d4c:	7d ac       	ldd	r7, Y+61	; 0x3d
    1d4e:	8e ac       	ldd	r8, Y+62	; 0x3e
    1d50:	9f ac       	ldd	r9, Y+63	; 0x3f
    1d52:	e8 97       	sbiw	r28, 0x38	; 56
    1d54:	68 16       	cp	r6, r24
    1d56:	79 06       	cpc	r7, r25
    1d58:	8a 06       	cpc	r8, r26
    1d5a:	9b 06       	cpc	r9, r27
    1d5c:	28 f4       	brcc	.+10     	; 0x1d68 <__moddi3+0xa32>
    1d5e:	11 e0       	ldi	r17, 0x01	; 1
    1d60:	a1 2e       	mov	r10, r17
    1d62:	b1 2c       	mov	r11, r1
    1d64:	c1 2c       	mov	r12, r1
    1d66:	d1 2c       	mov	r13, r1
    1d68:	79 01       	movw	r14, r18
    1d6a:	8a 01       	movw	r16, r20
    1d6c:	ea 18       	sub	r14, r10
    1d6e:	fb 08       	sbc	r15, r11
    1d70:	0c 09       	sbc	r16, r12
    1d72:	1d 09       	sbc	r17, r13
    1d74:	61 96       	adiw	r28, 0x11	; 17
    1d76:	ec ae       	std	Y+60, r14	; 0x3c
    1d78:	fd ae       	std	Y+61, r15	; 0x3d
    1d7a:	0e af       	std	Y+62, r16	; 0x3e
    1d7c:	1f af       	std	Y+63, r17	; 0x3f
    1d7e:	61 97       	sbiw	r28, 0x11	; 17
    1d80:	89 a7       	std	Y+41, r24	; 0x29
    1d82:	9a a7       	std	Y+42, r25	; 0x2a
    1d84:	ab a7       	std	Y+43, r26	; 0x2b
    1d86:	bc a7       	std	Y+44, r27	; 0x2c
    1d88:	61 96       	adiw	r28, 0x11	; 17
    1d8a:	0c ad       	ldd	r16, Y+60	; 0x3c
    1d8c:	1d ad       	ldd	r17, Y+61	; 0x3d
    1d8e:	2e ad       	ldd	r18, Y+62	; 0x3e
    1d90:	3f ad       	ldd	r19, Y+63	; 0x3f
    1d92:	61 97       	sbiw	r28, 0x11	; 17
    1d94:	0d a7       	std	Y+45, r16	; 0x2d
    1d96:	1e a7       	std	Y+46, r17	; 0x2e
    1d98:	2f a7       	std	Y+47, r18	; 0x2f
    1d9a:	38 ab       	std	Y+48, r19	; 0x30
    1d9c:	89 8b       	std	Y+17, r24	; 0x11
    1d9e:	8a a5       	ldd	r24, Y+42	; 0x2a
    1da0:	8a 8b       	std	Y+18, r24	; 0x12
    1da2:	8b a5       	ldd	r24, Y+43	; 0x2b
    1da4:	8b 8b       	std	Y+19, r24	; 0x13
    1da6:	8c a5       	ldd	r24, Y+44	; 0x2c
    1da8:	8c 8b       	std	Y+20, r24	; 0x14
    1daa:	0d 8b       	std	Y+21, r16	; 0x15
    1dac:	7b c2       	rjmp	.+1270   	; 0x22a4 <__moddi3+0xf6e>
    1dae:	e3 96       	adiw	r28, 0x33	; 51
    1db0:	8f af       	std	Y+63, r24	; 0x3f
    1db2:	e3 97       	sbiw	r28, 0x33	; 51
    1db4:	a6 01       	movw	r20, r12
    1db6:	95 01       	movw	r18, r10
    1db8:	08 2e       	mov	r0, r24
    1dba:	04 c0       	rjmp	.+8      	; 0x1dc4 <__moddi3+0xa8e>
    1dbc:	22 0f       	add	r18, r18
    1dbe:	33 1f       	adc	r19, r19
    1dc0:	44 1f       	adc	r20, r20
    1dc2:	55 1f       	adc	r21, r21
    1dc4:	0a 94       	dec	r0
    1dc6:	d2 f7       	brpl	.-12     	; 0x1dbc <__moddi3+0xa86>
    1dc8:	10 e2       	ldi	r17, 0x20	; 32
    1dca:	18 1b       	sub	r17, r24
    1dcc:	e2 96       	adiw	r28, 0x32	; 50
    1dce:	1f af       	std	Y+63, r17	; 0x3f
    1dd0:	e2 97       	sbiw	r28, 0x32	; 50
    1dd2:	d2 01       	movw	r26, r4
    1dd4:	c1 01       	movw	r24, r2
    1dd6:	01 2e       	mov	r0, r17
    1dd8:	04 c0       	rjmp	.+8      	; 0x1de2 <__moddi3+0xaac>
    1dda:	b6 95       	lsr	r27
    1ddc:	a7 95       	ror	r26
    1dde:	97 95       	ror	r25
    1de0:	87 95       	ror	r24
    1de2:	0a 94       	dec	r0
    1de4:	d2 f7       	brpl	.-12     	; 0x1dda <__moddi3+0xaa4>
    1de6:	5c 01       	movw	r10, r24
    1de8:	6d 01       	movw	r12, r26
    1dea:	a2 2a       	or	r10, r18
    1dec:	b3 2a       	or	r11, r19
    1dee:	c4 2a       	or	r12, r20
    1df0:	d5 2a       	or	r13, r21
    1df2:	25 96       	adiw	r28, 0x05	; 5
    1df4:	ac ae       	std	Y+60, r10	; 0x3c
    1df6:	bd ae       	std	Y+61, r11	; 0x3d
    1df8:	ce ae       	std	Y+62, r12	; 0x3e
    1dfa:	df ae       	std	Y+63, r13	; 0x3f
    1dfc:	25 97       	sbiw	r28, 0x05	; 5
    1dfe:	72 01       	movw	r14, r4
    1e00:	61 01       	movw	r12, r2
    1e02:	e3 96       	adiw	r28, 0x33	; 51
    1e04:	0f ac       	ldd	r0, Y+63	; 0x3f
    1e06:	e3 97       	sbiw	r28, 0x33	; 51
    1e08:	04 c0       	rjmp	.+8      	; 0x1e12 <__moddi3+0xadc>
    1e0a:	cc 0c       	add	r12, r12
    1e0c:	dd 1c       	adc	r13, r13
    1e0e:	ee 1c       	adc	r14, r14
    1e10:	ff 1c       	adc	r15, r15
    1e12:	0a 94       	dec	r0
    1e14:	d2 f7       	brpl	.-12     	; 0x1e0a <__moddi3+0xad4>
    1e16:	21 96       	adiw	r28, 0x01	; 1
    1e18:	cc ae       	std	Y+60, r12	; 0x3c
    1e1a:	dd ae       	std	Y+61, r13	; 0x3d
    1e1c:	ee ae       	std	Y+62, r14	; 0x3e
    1e1e:	ff ae       	std	Y+63, r15	; 0x3f
    1e20:	21 97       	sbiw	r28, 0x01	; 1
    1e22:	64 01       	movw	r12, r8
    1e24:	53 01       	movw	r10, r6
    1e26:	01 2e       	mov	r0, r17
    1e28:	04 c0       	rjmp	.+8      	; 0x1e32 <__moddi3+0xafc>
    1e2a:	d6 94       	lsr	r13
    1e2c:	c7 94       	ror	r12
    1e2e:	b7 94       	ror	r11
    1e30:	a7 94       	ror	r10
    1e32:	0a 94       	dec	r0
    1e34:	d2 f7       	brpl	.-12     	; 0x1e2a <__moddi3+0xaf4>
    1e36:	a4 01       	movw	r20, r8
    1e38:	93 01       	movw	r18, r6
    1e3a:	e3 96       	adiw	r28, 0x33	; 51
    1e3c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1e3e:	e3 97       	sbiw	r28, 0x33	; 51
    1e40:	04 c0       	rjmp	.+8      	; 0x1e4a <__moddi3+0xb14>
    1e42:	22 0f       	add	r18, r18
    1e44:	33 1f       	adc	r19, r19
    1e46:	44 1f       	adc	r20, r20
    1e48:	55 1f       	adc	r21, r21
    1e4a:	0a 94       	dec	r0
    1e4c:	d2 f7       	brpl	.-12     	; 0x1e42 <__moddi3+0xb0c>
    1e4e:	e8 96       	adiw	r28, 0x38	; 56
    1e50:	8c ad       	ldd	r24, Y+60	; 0x3c
    1e52:	9d ad       	ldd	r25, Y+61	; 0x3d
    1e54:	ae ad       	ldd	r26, Y+62	; 0x3e
    1e56:	bf ad       	ldd	r27, Y+63	; 0x3f
    1e58:	e8 97       	sbiw	r28, 0x38	; 56
    1e5a:	04 c0       	rjmp	.+8      	; 0x1e64 <__moddi3+0xb2e>
    1e5c:	b6 95       	lsr	r27
    1e5e:	a7 95       	ror	r26
    1e60:	97 95       	ror	r25
    1e62:	87 95       	ror	r24
    1e64:	1a 95       	dec	r17
    1e66:	d2 f7       	brpl	.-12     	; 0x1e5c <__moddi3+0xb26>
    1e68:	7c 01       	movw	r14, r24
    1e6a:	8d 01       	movw	r16, r26
    1e6c:	e2 2a       	or	r14, r18
    1e6e:	f3 2a       	or	r15, r19
    1e70:	04 2b       	or	r16, r20
    1e72:	15 2b       	or	r17, r21
    1e74:	e9 ae       	std	Y+57, r14	; 0x39
    1e76:	fa ae       	std	Y+58, r15	; 0x3a
    1e78:	0b af       	std	Y+59, r16	; 0x3b
    1e7a:	1c af       	std	Y+60, r17	; 0x3c
    1e7c:	e8 96       	adiw	r28, 0x38	; 56
    1e7e:	0c ad       	ldd	r16, Y+60	; 0x3c
    1e80:	1d ad       	ldd	r17, Y+61	; 0x3d
    1e82:	2e ad       	ldd	r18, Y+62	; 0x3e
    1e84:	3f ad       	ldd	r19, Y+63	; 0x3f
    1e86:	e8 97       	sbiw	r28, 0x38	; 56
    1e88:	e3 96       	adiw	r28, 0x33	; 51
    1e8a:	0f ac       	ldd	r0, Y+63	; 0x3f
    1e8c:	e3 97       	sbiw	r28, 0x33	; 51
    1e8e:	04 c0       	rjmp	.+8      	; 0x1e98 <__moddi3+0xb62>
    1e90:	00 0f       	add	r16, r16
    1e92:	11 1f       	adc	r17, r17
    1e94:	22 1f       	adc	r18, r18
    1e96:	33 1f       	adc	r19, r19
    1e98:	0a 94       	dec	r0
    1e9a:	d2 f7       	brpl	.-12     	; 0x1e90 <__moddi3+0xb5a>
    1e9c:	0d ab       	std	Y+53, r16	; 0x35
    1e9e:	1e ab       	std	Y+54, r17	; 0x36
    1ea0:	2f ab       	std	Y+55, r18	; 0x37
    1ea2:	38 af       	std	Y+56, r19	; 0x38
    1ea4:	25 96       	adiw	r28, 0x05	; 5
    1ea6:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ea8:	3d ad       	ldd	r19, Y+61	; 0x3d
    1eaa:	4e ad       	ldd	r20, Y+62	; 0x3e
    1eac:	5f ad       	ldd	r21, Y+63	; 0x3f
    1eae:	25 97       	sbiw	r28, 0x05	; 5
    1eb0:	3a 01       	movw	r6, r20
    1eb2:	88 24       	eor	r8, r8
    1eb4:	99 24       	eor	r9, r9
    1eb6:	40 70       	andi	r20, 0x00	; 0
    1eb8:	50 70       	andi	r21, 0x00	; 0
    1eba:	a5 96       	adiw	r28, 0x25	; 37
    1ebc:	2c af       	std	Y+60, r18	; 0x3c
    1ebe:	3d af       	std	Y+61, r19	; 0x3d
    1ec0:	4e af       	std	Y+62, r20	; 0x3e
    1ec2:	5f af       	std	Y+63, r21	; 0x3f
    1ec4:	a5 97       	sbiw	r28, 0x25	; 37
    1ec6:	c6 01       	movw	r24, r12
    1ec8:	b5 01       	movw	r22, r10
    1eca:	a4 01       	movw	r20, r8
    1ecc:	93 01       	movw	r18, r6
    1ece:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1ed2:	7b 01       	movw	r14, r22
    1ed4:	8c 01       	movw	r16, r24
    1ed6:	c6 01       	movw	r24, r12
    1ed8:	b5 01       	movw	r22, r10
    1eda:	a4 01       	movw	r20, r8
    1edc:	93 01       	movw	r18, r6
    1ede:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1ee2:	c9 01       	movw	r24, r18
    1ee4:	da 01       	movw	r26, r20
    1ee6:	1c 01       	movw	r2, r24
    1ee8:	2d 01       	movw	r4, r26
    1eea:	c2 01       	movw	r24, r4
    1eec:	b1 01       	movw	r22, r2
    1eee:	a5 96       	adiw	r28, 0x25	; 37
    1ef0:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ef2:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ef4:	4e ad       	ldd	r20, Y+62	; 0x3e
    1ef6:	5f ad       	ldd	r21, Y+63	; 0x3f
    1ef8:	a5 97       	sbiw	r28, 0x25	; 37
    1efa:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    1efe:	9b 01       	movw	r18, r22
    1f00:	ac 01       	movw	r20, r24
    1f02:	87 01       	movw	r16, r14
    1f04:	ff 24       	eor	r15, r15
    1f06:	ee 24       	eor	r14, r14
    1f08:	a9 ac       	ldd	r10, Y+57	; 0x39
    1f0a:	ba ac       	ldd	r11, Y+58	; 0x3a
    1f0c:	cb ac       	ldd	r12, Y+59	; 0x3b
    1f0e:	dc ac       	ldd	r13, Y+60	; 0x3c
    1f10:	c6 01       	movw	r24, r12
    1f12:	aa 27       	eor	r26, r26
    1f14:	bb 27       	eor	r27, r27
    1f16:	57 01       	movw	r10, r14
    1f18:	68 01       	movw	r12, r16
    1f1a:	a8 2a       	or	r10, r24
    1f1c:	b9 2a       	or	r11, r25
    1f1e:	ca 2a       	or	r12, r26
    1f20:	db 2a       	or	r13, r27
    1f22:	a2 16       	cp	r10, r18
    1f24:	b3 06       	cpc	r11, r19
    1f26:	c4 06       	cpc	r12, r20
    1f28:	d5 06       	cpc	r13, r21
    1f2a:	10 f5       	brcc	.+68     	; 0x1f70 <__moddi3+0xc3a>
    1f2c:	08 94       	sec
    1f2e:	21 08       	sbc	r2, r1
    1f30:	31 08       	sbc	r3, r1
    1f32:	41 08       	sbc	r4, r1
    1f34:	51 08       	sbc	r5, r1
    1f36:	25 96       	adiw	r28, 0x05	; 5
    1f38:	ec ac       	ldd	r14, Y+60	; 0x3c
    1f3a:	fd ac       	ldd	r15, Y+61	; 0x3d
    1f3c:	0e ad       	ldd	r16, Y+62	; 0x3e
    1f3e:	1f ad       	ldd	r17, Y+63	; 0x3f
    1f40:	25 97       	sbiw	r28, 0x05	; 5
    1f42:	ae 0c       	add	r10, r14
    1f44:	bf 1c       	adc	r11, r15
    1f46:	c0 1e       	adc	r12, r16
    1f48:	d1 1e       	adc	r13, r17
    1f4a:	ae 14       	cp	r10, r14
    1f4c:	bf 04       	cpc	r11, r15
    1f4e:	c0 06       	cpc	r12, r16
    1f50:	d1 06       	cpc	r13, r17
    1f52:	70 f0       	brcs	.+28     	; 0x1f70 <__moddi3+0xc3a>
    1f54:	a2 16       	cp	r10, r18
    1f56:	b3 06       	cpc	r11, r19
    1f58:	c4 06       	cpc	r12, r20
    1f5a:	d5 06       	cpc	r13, r21
    1f5c:	48 f4       	brcc	.+18     	; 0x1f70 <__moddi3+0xc3a>
    1f5e:	08 94       	sec
    1f60:	21 08       	sbc	r2, r1
    1f62:	31 08       	sbc	r3, r1
    1f64:	41 08       	sbc	r4, r1
    1f66:	51 08       	sbc	r5, r1
    1f68:	ae 0c       	add	r10, r14
    1f6a:	bf 1c       	adc	r11, r15
    1f6c:	c0 1e       	adc	r12, r16
    1f6e:	d1 1e       	adc	r13, r17
    1f70:	a2 1a       	sub	r10, r18
    1f72:	b3 0a       	sbc	r11, r19
    1f74:	c4 0a       	sbc	r12, r20
    1f76:	d5 0a       	sbc	r13, r21
    1f78:	c6 01       	movw	r24, r12
    1f7a:	b5 01       	movw	r22, r10
    1f7c:	a4 01       	movw	r20, r8
    1f7e:	93 01       	movw	r18, r6
    1f80:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1f84:	7b 01       	movw	r14, r22
    1f86:	8c 01       	movw	r16, r24
    1f88:	c6 01       	movw	r24, r12
    1f8a:	b5 01       	movw	r22, r10
    1f8c:	a4 01       	movw	r20, r8
    1f8e:	93 01       	movw	r18, r6
    1f90:	0e 94 08 2b 	call	0x5610	; 0x5610 <__udivmodsi4>
    1f94:	c9 01       	movw	r24, r18
    1f96:	da 01       	movw	r26, r20
    1f98:	3c 01       	movw	r6, r24
    1f9a:	4d 01       	movw	r8, r26
    1f9c:	c4 01       	movw	r24, r8
    1f9e:	b3 01       	movw	r22, r6
    1fa0:	a5 96       	adiw	r28, 0x25	; 37
    1fa2:	2c ad       	ldd	r18, Y+60	; 0x3c
    1fa4:	3d ad       	ldd	r19, Y+61	; 0x3d
    1fa6:	4e ad       	ldd	r20, Y+62	; 0x3e
    1fa8:	5f ad       	ldd	r21, Y+63	; 0x3f
    1faa:	a5 97       	sbiw	r28, 0x25	; 37
    1fac:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    1fb0:	9b 01       	movw	r18, r22
    1fb2:	ac 01       	movw	r20, r24
    1fb4:	87 01       	movw	r16, r14
    1fb6:	ff 24       	eor	r15, r15
    1fb8:	ee 24       	eor	r14, r14
    1fba:	89 ad       	ldd	r24, Y+57	; 0x39
    1fbc:	9a ad       	ldd	r25, Y+58	; 0x3a
    1fbe:	ab ad       	ldd	r26, Y+59	; 0x3b
    1fc0:	bc ad       	ldd	r27, Y+60	; 0x3c
    1fc2:	a0 70       	andi	r26, 0x00	; 0
    1fc4:	b0 70       	andi	r27, 0x00	; 0
    1fc6:	57 01       	movw	r10, r14
    1fc8:	68 01       	movw	r12, r16
    1fca:	a8 2a       	or	r10, r24
    1fcc:	b9 2a       	or	r11, r25
    1fce:	ca 2a       	or	r12, r26
    1fd0:	db 2a       	or	r13, r27
    1fd2:	a2 16       	cp	r10, r18
    1fd4:	b3 06       	cpc	r11, r19
    1fd6:	c4 06       	cpc	r12, r20
    1fd8:	d5 06       	cpc	r13, r21
    1fda:	10 f5       	brcc	.+68     	; 0x2020 <__moddi3+0xcea>
    1fdc:	08 94       	sec
    1fde:	61 08       	sbc	r6, r1
    1fe0:	71 08       	sbc	r7, r1
    1fe2:	81 08       	sbc	r8, r1
    1fe4:	91 08       	sbc	r9, r1
    1fe6:	25 96       	adiw	r28, 0x05	; 5
    1fe8:	6c ad       	ldd	r22, Y+60	; 0x3c
    1fea:	7d ad       	ldd	r23, Y+61	; 0x3d
    1fec:	8e ad       	ldd	r24, Y+62	; 0x3e
    1fee:	9f ad       	ldd	r25, Y+63	; 0x3f
    1ff0:	25 97       	sbiw	r28, 0x05	; 5
    1ff2:	a6 0e       	add	r10, r22
    1ff4:	b7 1e       	adc	r11, r23
    1ff6:	c8 1e       	adc	r12, r24
    1ff8:	d9 1e       	adc	r13, r25
    1ffa:	a6 16       	cp	r10, r22
    1ffc:	b7 06       	cpc	r11, r23
    1ffe:	c8 06       	cpc	r12, r24
    2000:	d9 06       	cpc	r13, r25
    2002:	70 f0       	brcs	.+28     	; 0x2020 <__moddi3+0xcea>
    2004:	a2 16       	cp	r10, r18
    2006:	b3 06       	cpc	r11, r19
    2008:	c4 06       	cpc	r12, r20
    200a:	d5 06       	cpc	r13, r21
    200c:	48 f4       	brcc	.+18     	; 0x2020 <__moddi3+0xcea>
    200e:	08 94       	sec
    2010:	61 08       	sbc	r6, r1
    2012:	71 08       	sbc	r7, r1
    2014:	81 08       	sbc	r8, r1
    2016:	91 08       	sbc	r9, r1
    2018:	a6 0e       	add	r10, r22
    201a:	b7 1e       	adc	r11, r23
    201c:	c8 1e       	adc	r12, r24
    201e:	d9 1e       	adc	r13, r25
    2020:	d6 01       	movw	r26, r12
    2022:	c5 01       	movw	r24, r10
    2024:	82 1b       	sub	r24, r18
    2026:	93 0b       	sbc	r25, r19
    2028:	a4 0b       	sbc	r26, r20
    202a:	b5 0b       	sbc	r27, r21
    202c:	89 ab       	std	Y+49, r24	; 0x31
    202e:	9a ab       	std	Y+50, r25	; 0x32
    2030:	ab ab       	std	Y+51, r26	; 0x33
    2032:	bc ab       	std	Y+52, r27	; 0x34
    2034:	d1 01       	movw	r26, r2
    2036:	99 27       	eor	r25, r25
    2038:	88 27       	eor	r24, r24
    203a:	84 01       	movw	r16, r8
    203c:	73 01       	movw	r14, r6
    203e:	e8 2a       	or	r14, r24
    2040:	f9 2a       	or	r15, r25
    2042:	0a 2b       	or	r16, r26
    2044:	1b 2b       	or	r17, r27
    2046:	8f ef       	ldi	r24, 0xFF	; 255
    2048:	a8 2e       	mov	r10, r24
    204a:	8f ef       	ldi	r24, 0xFF	; 255
    204c:	b8 2e       	mov	r11, r24
    204e:	c1 2c       	mov	r12, r1
    2050:	d1 2c       	mov	r13, r1
    2052:	ae 20       	and	r10, r14
    2054:	bf 20       	and	r11, r15
    2056:	c0 22       	and	r12, r16
    2058:	d1 22       	and	r13, r17
    205a:	78 01       	movw	r14, r16
    205c:	00 27       	eor	r16, r16
    205e:	11 27       	eor	r17, r17
    2060:	21 96       	adiw	r28, 0x01	; 1
    2062:	6c ac       	ldd	r6, Y+60	; 0x3c
    2064:	7d ac       	ldd	r7, Y+61	; 0x3d
    2066:	8e ac       	ldd	r8, Y+62	; 0x3e
    2068:	9f ac       	ldd	r9, Y+63	; 0x3f
    206a:	21 97       	sbiw	r28, 0x01	; 1
    206c:	2f ef       	ldi	r18, 0xFF	; 255
    206e:	3f ef       	ldi	r19, 0xFF	; 255
    2070:	40 e0       	ldi	r20, 0x00	; 0
    2072:	50 e0       	ldi	r21, 0x00	; 0
    2074:	62 22       	and	r6, r18
    2076:	73 22       	and	r7, r19
    2078:	84 22       	and	r8, r20
    207a:	95 22       	and	r9, r21
    207c:	21 96       	adiw	r28, 0x01	; 1
    207e:	6c ad       	ldd	r22, Y+60	; 0x3c
    2080:	7d ad       	ldd	r23, Y+61	; 0x3d
    2082:	8e ad       	ldd	r24, Y+62	; 0x3e
    2084:	9f ad       	ldd	r25, Y+63	; 0x3f
    2086:	21 97       	sbiw	r28, 0x01	; 1
    2088:	ac 01       	movw	r20, r24
    208a:	66 27       	eor	r22, r22
    208c:	77 27       	eor	r23, r23
    208e:	ad 96       	adiw	r28, 0x2d	; 45
    2090:	4c af       	std	Y+60, r20	; 0x3c
    2092:	5d af       	std	Y+61, r21	; 0x3d
    2094:	6e af       	std	Y+62, r22	; 0x3e
    2096:	7f af       	std	Y+63, r23	; 0x3f
    2098:	ad 97       	sbiw	r28, 0x2d	; 45
    209a:	c6 01       	movw	r24, r12
    209c:	b5 01       	movw	r22, r10
    209e:	a4 01       	movw	r20, r8
    20a0:	93 01       	movw	r18, r6
    20a2:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    20a6:	a9 96       	adiw	r28, 0x29	; 41
    20a8:	6c af       	std	Y+60, r22	; 0x3c
    20aa:	7d af       	std	Y+61, r23	; 0x3d
    20ac:	8e af       	std	Y+62, r24	; 0x3e
    20ae:	9f af       	std	Y+63, r25	; 0x3f
    20b0:	a9 97       	sbiw	r28, 0x29	; 41
    20b2:	c6 01       	movw	r24, r12
    20b4:	b5 01       	movw	r22, r10
    20b6:	ad 96       	adiw	r28, 0x2d	; 45
    20b8:	2c ad       	ldd	r18, Y+60	; 0x3c
    20ba:	3d ad       	ldd	r19, Y+61	; 0x3d
    20bc:	4e ad       	ldd	r20, Y+62	; 0x3e
    20be:	5f ad       	ldd	r21, Y+63	; 0x3f
    20c0:	ad 97       	sbiw	r28, 0x2d	; 45
    20c2:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    20c6:	1b 01       	movw	r2, r22
    20c8:	2c 01       	movw	r4, r24
    20ca:	c8 01       	movw	r24, r16
    20cc:	b7 01       	movw	r22, r14
    20ce:	a4 01       	movw	r20, r8
    20d0:	93 01       	movw	r18, r6
    20d2:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    20d6:	5b 01       	movw	r10, r22
    20d8:	6c 01       	movw	r12, r24
    20da:	c8 01       	movw	r24, r16
    20dc:	b7 01       	movw	r22, r14
    20de:	ad 96       	adiw	r28, 0x2d	; 45
    20e0:	2c ad       	ldd	r18, Y+60	; 0x3c
    20e2:	3d ad       	ldd	r19, Y+61	; 0x3d
    20e4:	4e ad       	ldd	r20, Y+62	; 0x3e
    20e6:	5f ad       	ldd	r21, Y+63	; 0x3f
    20e8:	ad 97       	sbiw	r28, 0x2d	; 45
    20ea:	0e 94 e9 2a 	call	0x55d2	; 0x55d2 <__mulsi3>
    20ee:	7b 01       	movw	r14, r22
    20f0:	8c 01       	movw	r16, r24
    20f2:	a6 01       	movw	r20, r12
    20f4:	95 01       	movw	r18, r10
    20f6:	22 0d       	add	r18, r2
    20f8:	33 1d       	adc	r19, r3
    20fa:	44 1d       	adc	r20, r4
    20fc:	55 1d       	adc	r21, r5
    20fe:	a9 96       	adiw	r28, 0x29	; 41
    2100:	6c ac       	ldd	r6, Y+60	; 0x3c
    2102:	7d ac       	ldd	r7, Y+61	; 0x3d
    2104:	8e ac       	ldd	r8, Y+62	; 0x3e
    2106:	9f ac       	ldd	r9, Y+63	; 0x3f
    2108:	a9 97       	sbiw	r28, 0x29	; 41
    210a:	c4 01       	movw	r24, r8
    210c:	aa 27       	eor	r26, r26
    210e:	bb 27       	eor	r27, r27
    2110:	28 0f       	add	r18, r24
    2112:	39 1f       	adc	r19, r25
    2114:	4a 1f       	adc	r20, r26
    2116:	5b 1f       	adc	r21, r27
    2118:	2a 15       	cp	r18, r10
    211a:	3b 05       	cpc	r19, r11
    211c:	4c 05       	cpc	r20, r12
    211e:	5d 05       	cpc	r21, r13
    2120:	48 f4       	brcc	.+18     	; 0x2134 <__moddi3+0xdfe>
    2122:	81 2c       	mov	r8, r1
    2124:	91 2c       	mov	r9, r1
    2126:	e1 e0       	ldi	r30, 0x01	; 1
    2128:	ae 2e       	mov	r10, r30
    212a:	b1 2c       	mov	r11, r1
    212c:	e8 0c       	add	r14, r8
    212e:	f9 1c       	adc	r15, r9
    2130:	0a 1d       	adc	r16, r10
    2132:	1b 1d       	adc	r17, r11
    2134:	ca 01       	movw	r24, r20
    2136:	aa 27       	eor	r26, r26
    2138:	bb 27       	eor	r27, r27
    213a:	57 01       	movw	r10, r14
    213c:	68 01       	movw	r12, r16
    213e:	a8 0e       	add	r10, r24
    2140:	b9 1e       	adc	r11, r25
    2142:	ca 1e       	adc	r12, r26
    2144:	db 1e       	adc	r13, r27
    2146:	a9 01       	movw	r20, r18
    2148:	33 27       	eor	r19, r19
    214a:	22 27       	eor	r18, r18
    214c:	a9 96       	adiw	r28, 0x29	; 41
    214e:	8c ad       	ldd	r24, Y+60	; 0x3c
    2150:	9d ad       	ldd	r25, Y+61	; 0x3d
    2152:	ae ad       	ldd	r26, Y+62	; 0x3e
    2154:	bf ad       	ldd	r27, Y+63	; 0x3f
    2156:	a9 97       	sbiw	r28, 0x29	; 41
    2158:	a0 70       	andi	r26, 0x00	; 0
    215a:	b0 70       	andi	r27, 0x00	; 0
    215c:	28 0f       	add	r18, r24
    215e:	39 1f       	adc	r19, r25
    2160:	4a 1f       	adc	r20, r26
    2162:	5b 1f       	adc	r21, r27
    2164:	e9 a8       	ldd	r14, Y+49	; 0x31
    2166:	fa a8       	ldd	r15, Y+50	; 0x32
    2168:	0b a9       	ldd	r16, Y+51	; 0x33
    216a:	1c a9       	ldd	r17, Y+52	; 0x34
    216c:	ea 14       	cp	r14, r10
    216e:	fb 04       	cpc	r15, r11
    2170:	0c 05       	cpc	r16, r12
    2172:	1d 05       	cpc	r17, r13
    2174:	70 f0       	brcs	.+28     	; 0x2192 <__moddi3+0xe5c>
    2176:	ae 14       	cp	r10, r14
    2178:	bf 04       	cpc	r11, r15
    217a:	c0 06       	cpc	r12, r16
    217c:	d1 06       	cpc	r13, r17
    217e:	89 f5       	brne	.+98     	; 0x21e2 <__moddi3+0xeac>
    2180:	6d a9       	ldd	r22, Y+53	; 0x35
    2182:	7e a9       	ldd	r23, Y+54	; 0x36
    2184:	8f a9       	ldd	r24, Y+55	; 0x37
    2186:	98 ad       	ldd	r25, Y+56	; 0x38
    2188:	62 17       	cp	r22, r18
    218a:	73 07       	cpc	r23, r19
    218c:	84 07       	cpc	r24, r20
    218e:	95 07       	cpc	r25, r21
    2190:	40 f5       	brcc	.+80     	; 0x21e2 <__moddi3+0xeac>
    2192:	da 01       	movw	r26, r20
    2194:	c9 01       	movw	r24, r18
    2196:	21 96       	adiw	r28, 0x01	; 1
    2198:	6c ac       	ldd	r6, Y+60	; 0x3c
    219a:	7d ac       	ldd	r7, Y+61	; 0x3d
    219c:	8e ac       	ldd	r8, Y+62	; 0x3e
    219e:	9f ac       	ldd	r9, Y+63	; 0x3f
    21a0:	21 97       	sbiw	r28, 0x01	; 1
    21a2:	86 19       	sub	r24, r6
    21a4:	97 09       	sbc	r25, r7
    21a6:	a8 09       	sbc	r26, r8
    21a8:	b9 09       	sbc	r27, r9
    21aa:	25 96       	adiw	r28, 0x05	; 5
    21ac:	ec ac       	ldd	r14, Y+60	; 0x3c
    21ae:	fd ac       	ldd	r15, Y+61	; 0x3d
    21b0:	0e ad       	ldd	r16, Y+62	; 0x3e
    21b2:	1f ad       	ldd	r17, Y+63	; 0x3f
    21b4:	25 97       	sbiw	r28, 0x05	; 5
    21b6:	ae 18       	sub	r10, r14
    21b8:	bf 08       	sbc	r11, r15
    21ba:	c0 0a       	sbc	r12, r16
    21bc:	d1 0a       	sbc	r13, r17
    21be:	ee 24       	eor	r14, r14
    21c0:	ff 24       	eor	r15, r15
    21c2:	87 01       	movw	r16, r14
    21c4:	28 17       	cp	r18, r24
    21c6:	39 07       	cpc	r19, r25
    21c8:	4a 07       	cpc	r20, r26
    21ca:	5b 07       	cpc	r21, r27
    21cc:	28 f4       	brcc	.+10     	; 0x21d8 <__moddi3+0xea2>
    21ce:	21 e0       	ldi	r18, 0x01	; 1
    21d0:	e2 2e       	mov	r14, r18
    21d2:	f1 2c       	mov	r15, r1
    21d4:	01 2d       	mov	r16, r1
    21d6:	11 2d       	mov	r17, r1
    21d8:	ae 18       	sub	r10, r14
    21da:	bf 08       	sbc	r11, r15
    21dc:	c0 0a       	sbc	r12, r16
    21de:	d1 0a       	sbc	r13, r17
    21e0:	02 c0       	rjmp	.+4      	; 0x21e6 <__moddi3+0xeb0>
    21e2:	da 01       	movw	r26, r20
    21e4:	c9 01       	movw	r24, r18
    21e6:	6d a8       	ldd	r6, Y+53	; 0x35
    21e8:	7e a8       	ldd	r7, Y+54	; 0x36
    21ea:	8f a8       	ldd	r8, Y+55	; 0x37
    21ec:	98 ac       	ldd	r9, Y+56	; 0x38
    21ee:	68 1a       	sub	r6, r24
    21f0:	79 0a       	sbc	r7, r25
    21f2:	8a 0a       	sbc	r8, r26
    21f4:	9b 0a       	sbc	r9, r27
    21f6:	09 a9       	ldd	r16, Y+49	; 0x31
    21f8:	1a a9       	ldd	r17, Y+50	; 0x32
    21fa:	2b a9       	ldd	r18, Y+51	; 0x33
    21fc:	3c a9       	ldd	r19, Y+52	; 0x34
    21fe:	0a 19       	sub	r16, r10
    2200:	1b 09       	sbc	r17, r11
    2202:	2c 09       	sbc	r18, r12
    2204:	3d 09       	sbc	r19, r13
    2206:	58 01       	movw	r10, r16
    2208:	69 01       	movw	r12, r18
    220a:	22 24       	eor	r2, r2
    220c:	33 24       	eor	r3, r3
    220e:	21 01       	movw	r4, r2
    2210:	2d a9       	ldd	r18, Y+53	; 0x35
    2212:	3e a9       	ldd	r19, Y+54	; 0x36
    2214:	4f a9       	ldd	r20, Y+55	; 0x37
    2216:	58 ad       	ldd	r21, Y+56	; 0x38
    2218:	26 15       	cp	r18, r6
    221a:	37 05       	cpc	r19, r7
    221c:	48 05       	cpc	r20, r8
    221e:	59 05       	cpc	r21, r9
    2220:	28 f4       	brcc	.+10     	; 0x222c <__moddi3+0xef6>
    2222:	81 e0       	ldi	r24, 0x01	; 1
    2224:	28 2e       	mov	r2, r24
    2226:	31 2c       	mov	r3, r1
    2228:	41 2c       	mov	r4, r1
    222a:	51 2c       	mov	r5, r1
    222c:	86 01       	movw	r16, r12
    222e:	75 01       	movw	r14, r10
    2230:	e2 18       	sub	r14, r2
    2232:	f3 08       	sbc	r15, r3
    2234:	04 09       	sbc	r16, r4
    2236:	15 09       	sbc	r17, r5
    2238:	a8 01       	movw	r20, r16
    223a:	97 01       	movw	r18, r14
    223c:	e2 96       	adiw	r28, 0x32	; 50
    223e:	0f ac       	ldd	r0, Y+63	; 0x3f
    2240:	e2 97       	sbiw	r28, 0x32	; 50
    2242:	04 c0       	rjmp	.+8      	; 0x224c <__moddi3+0xf16>
    2244:	22 0f       	add	r18, r18
    2246:	33 1f       	adc	r19, r19
    2248:	44 1f       	adc	r20, r20
    224a:	55 1f       	adc	r21, r21
    224c:	0a 94       	dec	r0
    224e:	d2 f7       	brpl	.-12     	; 0x2244 <__moddi3+0xf0e>
    2250:	d4 01       	movw	r26, r8
    2252:	c3 01       	movw	r24, r6
    2254:	e3 96       	adiw	r28, 0x33	; 51
    2256:	0f ac       	ldd	r0, Y+63	; 0x3f
    2258:	e3 97       	sbiw	r28, 0x33	; 51
    225a:	04 c0       	rjmp	.+8      	; 0x2264 <__moddi3+0xf2e>
    225c:	b6 95       	lsr	r27
    225e:	a7 95       	ror	r26
    2260:	97 95       	ror	r25
    2262:	87 95       	ror	r24
    2264:	0a 94       	dec	r0
    2266:	d2 f7       	brpl	.-12     	; 0x225c <__moddi3+0xf26>
    2268:	28 2b       	or	r18, r24
    226a:	39 2b       	or	r19, r25
    226c:	4a 2b       	or	r20, r26
    226e:	5b 2b       	or	r21, r27
    2270:	29 a7       	std	Y+41, r18	; 0x29
    2272:	3a a7       	std	Y+42, r19	; 0x2a
    2274:	4b a7       	std	Y+43, r20	; 0x2b
    2276:	5c a7       	std	Y+44, r21	; 0x2c
    2278:	e3 96       	adiw	r28, 0x33	; 51
    227a:	0f ac       	ldd	r0, Y+63	; 0x3f
    227c:	e3 97       	sbiw	r28, 0x33	; 51
    227e:	04 c0       	rjmp	.+8      	; 0x2288 <__moddi3+0xf52>
    2280:	16 95       	lsr	r17
    2282:	07 95       	ror	r16
    2284:	f7 94       	ror	r15
    2286:	e7 94       	ror	r14
    2288:	0a 94       	dec	r0
    228a:	d2 f7       	brpl	.-12     	; 0x2280 <__moddi3+0xf4a>
    228c:	ed a6       	std	Y+45, r14	; 0x2d
    228e:	fe a6       	std	Y+46, r15	; 0x2e
    2290:	0f a7       	std	Y+47, r16	; 0x2f
    2292:	18 ab       	std	Y+48, r17	; 0x30
    2294:	29 8b       	std	Y+17, r18	; 0x11
    2296:	8a a5       	ldd	r24, Y+42	; 0x2a
    2298:	8a 8b       	std	Y+18, r24	; 0x12
    229a:	8b a5       	ldd	r24, Y+43	; 0x2b
    229c:	8b 8b       	std	Y+19, r24	; 0x13
    229e:	8c a5       	ldd	r24, Y+44	; 0x2c
    22a0:	8c 8b       	std	Y+20, r24	; 0x14
    22a2:	ed 8a       	std	Y+21, r14	; 0x15
    22a4:	8e a5       	ldd	r24, Y+46	; 0x2e
    22a6:	8e 8b       	std	Y+22, r24	; 0x16
    22a8:	8f a5       	ldd	r24, Y+47	; 0x2f
    22aa:	8f 8b       	std	Y+23, r24	; 0x17
    22ac:	88 a9       	ldd	r24, Y+48	; 0x30
    22ae:	88 8f       	std	Y+24, r24	; 0x18
    22b0:	e1 96       	adiw	r28, 0x31	; 49
    22b2:	4c ad       	ldd	r20, Y+60	; 0x3c
    22b4:	5d ad       	ldd	r21, Y+61	; 0x3d
    22b6:	6e ad       	ldd	r22, Y+62	; 0x3e
    22b8:	7f ad       	ldd	r23, Y+63	; 0x3f
    22ba:	e1 97       	sbiw	r28, 0x31	; 49
    22bc:	41 15       	cp	r20, r1
    22be:	51 05       	cpc	r21, r1
    22c0:	61 05       	cpc	r22, r1
    22c2:	71 05       	cpc	r23, r1
    22c4:	09 f4       	brne	.+2      	; 0x22c8 <__moddi3+0xf92>
    22c6:	67 c0       	rjmp	.+206    	; 0x2396 <__moddi3+0x1060>
    22c8:	89 89       	ldd	r24, Y+17	; 0x11
    22ca:	2a 89       	ldd	r18, Y+18	; 0x12
    22cc:	3b 89       	ldd	r19, Y+19	; 0x13
    22ce:	4c 89       	ldd	r20, Y+20	; 0x14
    22d0:	5d 89       	ldd	r21, Y+21	; 0x15
    22d2:	ae 89       	ldd	r26, Y+22	; 0x16
    22d4:	bf 89       	ldd	r27, Y+23	; 0x17
    22d6:	18 8d       	ldd	r17, Y+24	; 0x18
    22d8:	f8 2f       	mov	r31, r24
    22da:	f1 95       	neg	r31
    22dc:	91 e0       	ldi	r25, 0x01	; 1
    22de:	1f 16       	cp	r1, r31
    22e0:	08 f0       	brcs	.+2      	; 0x22e4 <__moddi3+0xfae>
    22e2:	90 e0       	ldi	r25, 0x00	; 0
    22e4:	82 2f       	mov	r24, r18
    22e6:	81 95       	neg	r24
    22e8:	21 e0       	ldi	r18, 0x01	; 1
    22ea:	18 16       	cp	r1, r24
    22ec:	08 f0       	brcs	.+2      	; 0x22f0 <__moddi3+0xfba>
    22ee:	20 e0       	ldi	r18, 0x00	; 0
    22f0:	e8 2f       	mov	r30, r24
    22f2:	e9 1b       	sub	r30, r25
    22f4:	91 e0       	ldi	r25, 0x01	; 1
    22f6:	8e 17       	cp	r24, r30
    22f8:	08 f0       	brcs	.+2      	; 0x22fc <__moddi3+0xfc6>
    22fa:	90 e0       	ldi	r25, 0x00	; 0
    22fc:	29 2b       	or	r18, r25
    22fe:	83 2f       	mov	r24, r19
    2300:	81 95       	neg	r24
    2302:	31 e0       	ldi	r19, 0x01	; 1
    2304:	18 16       	cp	r1, r24
    2306:	08 f0       	brcs	.+2      	; 0x230a <__moddi3+0xfd4>
    2308:	30 e0       	ldi	r19, 0x00	; 0
    230a:	78 2f       	mov	r23, r24
    230c:	72 1b       	sub	r23, r18
    230e:	91 e0       	ldi	r25, 0x01	; 1
    2310:	87 17       	cp	r24, r23
    2312:	08 f0       	brcs	.+2      	; 0x2316 <__moddi3+0xfe0>
    2314:	90 e0       	ldi	r25, 0x00	; 0
    2316:	39 2b       	or	r19, r25
    2318:	84 2f       	mov	r24, r20
    231a:	81 95       	neg	r24
    231c:	21 e0       	ldi	r18, 0x01	; 1
    231e:	18 16       	cp	r1, r24
    2320:	08 f0       	brcs	.+2      	; 0x2324 <__moddi3+0xfee>
    2322:	20 e0       	ldi	r18, 0x00	; 0
    2324:	68 2f       	mov	r22, r24
    2326:	63 1b       	sub	r22, r19
    2328:	91 e0       	ldi	r25, 0x01	; 1
    232a:	86 17       	cp	r24, r22
    232c:	08 f0       	brcs	.+2      	; 0x2330 <__moddi3+0xffa>
    232e:	90 e0       	ldi	r25, 0x00	; 0
    2330:	29 2b       	or	r18, r25
    2332:	85 2f       	mov	r24, r21
    2334:	81 95       	neg	r24
    2336:	31 e0       	ldi	r19, 0x01	; 1
    2338:	18 16       	cp	r1, r24
    233a:	08 f0       	brcs	.+2      	; 0x233e <__moddi3+0x1008>
    233c:	30 e0       	ldi	r19, 0x00	; 0
    233e:	58 2f       	mov	r21, r24
    2340:	52 1b       	sub	r21, r18
    2342:	91 e0       	ldi	r25, 0x01	; 1
    2344:	85 17       	cp	r24, r21
    2346:	08 f0       	brcs	.+2      	; 0x234a <__moddi3+0x1014>
    2348:	90 e0       	ldi	r25, 0x00	; 0
    234a:	39 2b       	or	r19, r25
    234c:	8a 2f       	mov	r24, r26
    234e:	81 95       	neg	r24
    2350:	21 e0       	ldi	r18, 0x01	; 1
    2352:	18 16       	cp	r1, r24
    2354:	08 f0       	brcs	.+2      	; 0x2358 <__moddi3+0x1022>
    2356:	20 e0       	ldi	r18, 0x00	; 0
    2358:	48 2f       	mov	r20, r24
    235a:	43 1b       	sub	r20, r19
    235c:	91 e0       	ldi	r25, 0x01	; 1
    235e:	84 17       	cp	r24, r20
    2360:	08 f0       	brcs	.+2      	; 0x2364 <__moddi3+0x102e>
    2362:	90 e0       	ldi	r25, 0x00	; 0
    2364:	29 2b       	or	r18, r25
    2366:	8b 2f       	mov	r24, r27
    2368:	81 95       	neg	r24
    236a:	91 e0       	ldi	r25, 0x01	; 1
    236c:	18 16       	cp	r1, r24
    236e:	08 f0       	brcs	.+2      	; 0x2372 <__moddi3+0x103c>
    2370:	90 e0       	ldi	r25, 0x00	; 0
    2372:	38 2f       	mov	r19, r24
    2374:	32 1b       	sub	r19, r18
    2376:	21 e0       	ldi	r18, 0x01	; 1
    2378:	83 17       	cp	r24, r19
    237a:	08 f0       	brcs	.+2      	; 0x237e <__moddi3+0x1048>
    237c:	20 e0       	ldi	r18, 0x00	; 0
    237e:	92 2b       	or	r25, r18
    2380:	81 2f       	mov	r24, r17
    2382:	81 95       	neg	r24
    2384:	89 1b       	sub	r24, r25
    2386:	f9 8b       	std	Y+17, r31	; 0x11
    2388:	ea 8b       	std	Y+18, r30	; 0x12
    238a:	7b 8b       	std	Y+19, r23	; 0x13
    238c:	6c 8b       	std	Y+20, r22	; 0x14
    238e:	5d 8b       	std	Y+21, r21	; 0x15
    2390:	4e 8b       	std	Y+22, r20	; 0x16
    2392:	3f 8b       	std	Y+23, r19	; 0x17
    2394:	88 8f       	std	Y+24, r24	; 0x18
    2396:	29 89       	ldd	r18, Y+17	; 0x11
    2398:	3a 89       	ldd	r19, Y+18	; 0x12
    239a:	4b 89       	ldd	r20, Y+19	; 0x13
    239c:	5c 89       	ldd	r21, Y+20	; 0x14
    239e:	6d 89       	ldd	r22, Y+21	; 0x15
    23a0:	7e 89       	ldd	r23, Y+22	; 0x16
    23a2:	8f 89       	ldd	r24, Y+23	; 0x17
    23a4:	98 8d       	ldd	r25, Y+24	; 0x18
    23a6:	c9 58       	subi	r28, 0x89	; 137
    23a8:	df 4f       	sbci	r29, 0xFF	; 255
    23aa:	e2 e1       	ldi	r30, 0x12	; 18
    23ac:	0c 94 46 2b 	jmp	0x568c	; 0x568c <__epilogue_restores__>

000023b0 <_fpadd_parts>:
    23b0:	a0 e0       	ldi	r26, 0x00	; 0
    23b2:	b0 e0       	ldi	r27, 0x00	; 0
    23b4:	ee ed       	ldi	r30, 0xDE	; 222
    23b6:	f1 e1       	ldi	r31, 0x11	; 17
    23b8:	0c 94 2a 2b 	jmp	0x5654	; 0x5654 <__prologue_saves__>
    23bc:	dc 01       	movw	r26, r24
    23be:	2b 01       	movw	r4, r22
    23c0:	fa 01       	movw	r30, r20
    23c2:	9c 91       	ld	r25, X
    23c4:	92 30       	cpi	r25, 0x02	; 2
    23c6:	08 f4       	brcc	.+2      	; 0x23ca <_fpadd_parts+0x1a>
    23c8:	39 c1       	rjmp	.+626    	; 0x263c <_fpadd_parts+0x28c>
    23ca:	eb 01       	movw	r28, r22
    23cc:	88 81       	ld	r24, Y
    23ce:	82 30       	cpi	r24, 0x02	; 2
    23d0:	08 f4       	brcc	.+2      	; 0x23d4 <_fpadd_parts+0x24>
    23d2:	33 c1       	rjmp	.+614    	; 0x263a <_fpadd_parts+0x28a>
    23d4:	94 30       	cpi	r25, 0x04	; 4
    23d6:	69 f4       	brne	.+26     	; 0x23f2 <_fpadd_parts+0x42>
    23d8:	84 30       	cpi	r24, 0x04	; 4
    23da:	09 f0       	breq	.+2      	; 0x23de <_fpadd_parts+0x2e>
    23dc:	2f c1       	rjmp	.+606    	; 0x263c <_fpadd_parts+0x28c>
    23de:	11 96       	adiw	r26, 0x01	; 1
    23e0:	9c 91       	ld	r25, X
    23e2:	11 97       	sbiw	r26, 0x01	; 1
    23e4:	89 81       	ldd	r24, Y+1	; 0x01
    23e6:	98 17       	cp	r25, r24
    23e8:	09 f4       	brne	.+2      	; 0x23ec <_fpadd_parts+0x3c>
    23ea:	28 c1       	rjmp	.+592    	; 0x263c <_fpadd_parts+0x28c>
    23ec:	a0 e6       	ldi	r26, 0x60	; 96
    23ee:	b0 e0       	ldi	r27, 0x00	; 0
    23f0:	25 c1       	rjmp	.+586    	; 0x263c <_fpadd_parts+0x28c>
    23f2:	84 30       	cpi	r24, 0x04	; 4
    23f4:	09 f4       	brne	.+2      	; 0x23f8 <_fpadd_parts+0x48>
    23f6:	21 c1       	rjmp	.+578    	; 0x263a <_fpadd_parts+0x28a>
    23f8:	82 30       	cpi	r24, 0x02	; 2
    23fa:	a9 f4       	brne	.+42     	; 0x2426 <_fpadd_parts+0x76>
    23fc:	92 30       	cpi	r25, 0x02	; 2
    23fe:	09 f0       	breq	.+2      	; 0x2402 <_fpadd_parts+0x52>
    2400:	1d c1       	rjmp	.+570    	; 0x263c <_fpadd_parts+0x28c>
    2402:	9a 01       	movw	r18, r20
    2404:	ad 01       	movw	r20, r26
    2406:	88 e0       	ldi	r24, 0x08	; 8
    2408:	ea 01       	movw	r28, r20
    240a:	09 90       	ld	r0, Y+
    240c:	ae 01       	movw	r20, r28
    240e:	e9 01       	movw	r28, r18
    2410:	09 92       	st	Y+, r0
    2412:	9e 01       	movw	r18, r28
    2414:	81 50       	subi	r24, 0x01	; 1
    2416:	c1 f7       	brne	.-16     	; 0x2408 <_fpadd_parts+0x58>
    2418:	e2 01       	movw	r28, r4
    241a:	89 81       	ldd	r24, Y+1	; 0x01
    241c:	11 96       	adiw	r26, 0x01	; 1
    241e:	9c 91       	ld	r25, X
    2420:	89 23       	and	r24, r25
    2422:	81 83       	std	Z+1, r24	; 0x01
    2424:	08 c1       	rjmp	.+528    	; 0x2636 <_fpadd_parts+0x286>
    2426:	92 30       	cpi	r25, 0x02	; 2
    2428:	09 f4       	brne	.+2      	; 0x242c <_fpadd_parts+0x7c>
    242a:	07 c1       	rjmp	.+526    	; 0x263a <_fpadd_parts+0x28a>
    242c:	12 96       	adiw	r26, 0x02	; 2
    242e:	2d 90       	ld	r2, X+
    2430:	3c 90       	ld	r3, X
    2432:	13 97       	sbiw	r26, 0x03	; 3
    2434:	eb 01       	movw	r28, r22
    2436:	8a 81       	ldd	r24, Y+2	; 0x02
    2438:	9b 81       	ldd	r25, Y+3	; 0x03
    243a:	14 96       	adiw	r26, 0x04	; 4
    243c:	ad 90       	ld	r10, X+
    243e:	bd 90       	ld	r11, X+
    2440:	cd 90       	ld	r12, X+
    2442:	dc 90       	ld	r13, X
    2444:	17 97       	sbiw	r26, 0x07	; 7
    2446:	ec 80       	ldd	r14, Y+4	; 0x04
    2448:	fd 80       	ldd	r15, Y+5	; 0x05
    244a:	0e 81       	ldd	r16, Y+6	; 0x06
    244c:	1f 81       	ldd	r17, Y+7	; 0x07
    244e:	91 01       	movw	r18, r2
    2450:	28 1b       	sub	r18, r24
    2452:	39 0b       	sbc	r19, r25
    2454:	b9 01       	movw	r22, r18
    2456:	37 ff       	sbrs	r19, 7
    2458:	04 c0       	rjmp	.+8      	; 0x2462 <_fpadd_parts+0xb2>
    245a:	66 27       	eor	r22, r22
    245c:	77 27       	eor	r23, r23
    245e:	62 1b       	sub	r22, r18
    2460:	73 0b       	sbc	r23, r19
    2462:	60 32       	cpi	r22, 0x20	; 32
    2464:	71 05       	cpc	r23, r1
    2466:	0c f0       	brlt	.+2      	; 0x246a <_fpadd_parts+0xba>
    2468:	61 c0       	rjmp	.+194    	; 0x252c <_fpadd_parts+0x17c>
    246a:	12 16       	cp	r1, r18
    246c:	13 06       	cpc	r1, r19
    246e:	6c f5       	brge	.+90     	; 0x24ca <_fpadd_parts+0x11a>
    2470:	37 01       	movw	r6, r14
    2472:	48 01       	movw	r8, r16
    2474:	06 2e       	mov	r0, r22
    2476:	04 c0       	rjmp	.+8      	; 0x2480 <_fpadd_parts+0xd0>
    2478:	96 94       	lsr	r9
    247a:	87 94       	ror	r8
    247c:	77 94       	ror	r7
    247e:	67 94       	ror	r6
    2480:	0a 94       	dec	r0
    2482:	d2 f7       	brpl	.-12     	; 0x2478 <_fpadd_parts+0xc8>
    2484:	21 e0       	ldi	r18, 0x01	; 1
    2486:	30 e0       	ldi	r19, 0x00	; 0
    2488:	40 e0       	ldi	r20, 0x00	; 0
    248a:	50 e0       	ldi	r21, 0x00	; 0
    248c:	04 c0       	rjmp	.+8      	; 0x2496 <_fpadd_parts+0xe6>
    248e:	22 0f       	add	r18, r18
    2490:	33 1f       	adc	r19, r19
    2492:	44 1f       	adc	r20, r20
    2494:	55 1f       	adc	r21, r21
    2496:	6a 95       	dec	r22
    2498:	d2 f7       	brpl	.-12     	; 0x248e <_fpadd_parts+0xde>
    249a:	21 50       	subi	r18, 0x01	; 1
    249c:	30 40       	sbci	r19, 0x00	; 0
    249e:	40 40       	sbci	r20, 0x00	; 0
    24a0:	50 40       	sbci	r21, 0x00	; 0
    24a2:	2e 21       	and	r18, r14
    24a4:	3f 21       	and	r19, r15
    24a6:	40 23       	and	r20, r16
    24a8:	51 23       	and	r21, r17
    24aa:	21 15       	cp	r18, r1
    24ac:	31 05       	cpc	r19, r1
    24ae:	41 05       	cpc	r20, r1
    24b0:	51 05       	cpc	r21, r1
    24b2:	21 f0       	breq	.+8      	; 0x24bc <_fpadd_parts+0x10c>
    24b4:	21 e0       	ldi	r18, 0x01	; 1
    24b6:	30 e0       	ldi	r19, 0x00	; 0
    24b8:	40 e0       	ldi	r20, 0x00	; 0
    24ba:	50 e0       	ldi	r21, 0x00	; 0
    24bc:	79 01       	movw	r14, r18
    24be:	8a 01       	movw	r16, r20
    24c0:	e6 28       	or	r14, r6
    24c2:	f7 28       	or	r15, r7
    24c4:	08 29       	or	r16, r8
    24c6:	19 29       	or	r17, r9
    24c8:	3c c0       	rjmp	.+120    	; 0x2542 <_fpadd_parts+0x192>
    24ca:	23 2b       	or	r18, r19
    24cc:	d1 f1       	breq	.+116    	; 0x2542 <_fpadd_parts+0x192>
    24ce:	26 0e       	add	r2, r22
    24d0:	37 1e       	adc	r3, r23
    24d2:	35 01       	movw	r6, r10
    24d4:	46 01       	movw	r8, r12
    24d6:	06 2e       	mov	r0, r22
    24d8:	04 c0       	rjmp	.+8      	; 0x24e2 <_fpadd_parts+0x132>
    24da:	96 94       	lsr	r9
    24dc:	87 94       	ror	r8
    24de:	77 94       	ror	r7
    24e0:	67 94       	ror	r6
    24e2:	0a 94       	dec	r0
    24e4:	d2 f7       	brpl	.-12     	; 0x24da <_fpadd_parts+0x12a>
    24e6:	21 e0       	ldi	r18, 0x01	; 1
    24e8:	30 e0       	ldi	r19, 0x00	; 0
    24ea:	40 e0       	ldi	r20, 0x00	; 0
    24ec:	50 e0       	ldi	r21, 0x00	; 0
    24ee:	04 c0       	rjmp	.+8      	; 0x24f8 <_fpadd_parts+0x148>
    24f0:	22 0f       	add	r18, r18
    24f2:	33 1f       	adc	r19, r19
    24f4:	44 1f       	adc	r20, r20
    24f6:	55 1f       	adc	r21, r21
    24f8:	6a 95       	dec	r22
    24fa:	d2 f7       	brpl	.-12     	; 0x24f0 <_fpadd_parts+0x140>
    24fc:	21 50       	subi	r18, 0x01	; 1
    24fe:	30 40       	sbci	r19, 0x00	; 0
    2500:	40 40       	sbci	r20, 0x00	; 0
    2502:	50 40       	sbci	r21, 0x00	; 0
    2504:	2a 21       	and	r18, r10
    2506:	3b 21       	and	r19, r11
    2508:	4c 21       	and	r20, r12
    250a:	5d 21       	and	r21, r13
    250c:	21 15       	cp	r18, r1
    250e:	31 05       	cpc	r19, r1
    2510:	41 05       	cpc	r20, r1
    2512:	51 05       	cpc	r21, r1
    2514:	21 f0       	breq	.+8      	; 0x251e <_fpadd_parts+0x16e>
    2516:	21 e0       	ldi	r18, 0x01	; 1
    2518:	30 e0       	ldi	r19, 0x00	; 0
    251a:	40 e0       	ldi	r20, 0x00	; 0
    251c:	50 e0       	ldi	r21, 0x00	; 0
    251e:	59 01       	movw	r10, r18
    2520:	6a 01       	movw	r12, r20
    2522:	a6 28       	or	r10, r6
    2524:	b7 28       	or	r11, r7
    2526:	c8 28       	or	r12, r8
    2528:	d9 28       	or	r13, r9
    252a:	0b c0       	rjmp	.+22     	; 0x2542 <_fpadd_parts+0x192>
    252c:	82 15       	cp	r24, r2
    252e:	93 05       	cpc	r25, r3
    2530:	2c f0       	brlt	.+10     	; 0x253c <_fpadd_parts+0x18c>
    2532:	1c 01       	movw	r2, r24
    2534:	aa 24       	eor	r10, r10
    2536:	bb 24       	eor	r11, r11
    2538:	65 01       	movw	r12, r10
    253a:	03 c0       	rjmp	.+6      	; 0x2542 <_fpadd_parts+0x192>
    253c:	ee 24       	eor	r14, r14
    253e:	ff 24       	eor	r15, r15
    2540:	87 01       	movw	r16, r14
    2542:	11 96       	adiw	r26, 0x01	; 1
    2544:	9c 91       	ld	r25, X
    2546:	d2 01       	movw	r26, r4
    2548:	11 96       	adiw	r26, 0x01	; 1
    254a:	8c 91       	ld	r24, X
    254c:	98 17       	cp	r25, r24
    254e:	09 f4       	brne	.+2      	; 0x2552 <_fpadd_parts+0x1a2>
    2550:	45 c0       	rjmp	.+138    	; 0x25dc <_fpadd_parts+0x22c>
    2552:	99 23       	and	r25, r25
    2554:	39 f0       	breq	.+14     	; 0x2564 <_fpadd_parts+0x1b4>
    2556:	a8 01       	movw	r20, r16
    2558:	97 01       	movw	r18, r14
    255a:	2a 19       	sub	r18, r10
    255c:	3b 09       	sbc	r19, r11
    255e:	4c 09       	sbc	r20, r12
    2560:	5d 09       	sbc	r21, r13
    2562:	06 c0       	rjmp	.+12     	; 0x2570 <_fpadd_parts+0x1c0>
    2564:	a6 01       	movw	r20, r12
    2566:	95 01       	movw	r18, r10
    2568:	2e 19       	sub	r18, r14
    256a:	3f 09       	sbc	r19, r15
    256c:	40 0b       	sbc	r20, r16
    256e:	51 0b       	sbc	r21, r17
    2570:	57 fd       	sbrc	r21, 7
    2572:	08 c0       	rjmp	.+16     	; 0x2584 <_fpadd_parts+0x1d4>
    2574:	11 82       	std	Z+1, r1	; 0x01
    2576:	33 82       	std	Z+3, r3	; 0x03
    2578:	22 82       	std	Z+2, r2	; 0x02
    257a:	24 83       	std	Z+4, r18	; 0x04
    257c:	35 83       	std	Z+5, r19	; 0x05
    257e:	46 83       	std	Z+6, r20	; 0x06
    2580:	57 83       	std	Z+7, r21	; 0x07
    2582:	1d c0       	rjmp	.+58     	; 0x25be <_fpadd_parts+0x20e>
    2584:	81 e0       	ldi	r24, 0x01	; 1
    2586:	81 83       	std	Z+1, r24	; 0x01
    2588:	33 82       	std	Z+3, r3	; 0x03
    258a:	22 82       	std	Z+2, r2	; 0x02
    258c:	88 27       	eor	r24, r24
    258e:	99 27       	eor	r25, r25
    2590:	dc 01       	movw	r26, r24
    2592:	82 1b       	sub	r24, r18
    2594:	93 0b       	sbc	r25, r19
    2596:	a4 0b       	sbc	r26, r20
    2598:	b5 0b       	sbc	r27, r21
    259a:	84 83       	std	Z+4, r24	; 0x04
    259c:	95 83       	std	Z+5, r25	; 0x05
    259e:	a6 83       	std	Z+6, r26	; 0x06
    25a0:	b7 83       	std	Z+7, r27	; 0x07
    25a2:	0d c0       	rjmp	.+26     	; 0x25be <_fpadd_parts+0x20e>
    25a4:	22 0f       	add	r18, r18
    25a6:	33 1f       	adc	r19, r19
    25a8:	44 1f       	adc	r20, r20
    25aa:	55 1f       	adc	r21, r21
    25ac:	24 83       	std	Z+4, r18	; 0x04
    25ae:	35 83       	std	Z+5, r19	; 0x05
    25b0:	46 83       	std	Z+6, r20	; 0x06
    25b2:	57 83       	std	Z+7, r21	; 0x07
    25b4:	82 81       	ldd	r24, Z+2	; 0x02
    25b6:	93 81       	ldd	r25, Z+3	; 0x03
    25b8:	01 97       	sbiw	r24, 0x01	; 1
    25ba:	93 83       	std	Z+3, r25	; 0x03
    25bc:	82 83       	std	Z+2, r24	; 0x02
    25be:	24 81       	ldd	r18, Z+4	; 0x04
    25c0:	35 81       	ldd	r19, Z+5	; 0x05
    25c2:	46 81       	ldd	r20, Z+6	; 0x06
    25c4:	57 81       	ldd	r21, Z+7	; 0x07
    25c6:	da 01       	movw	r26, r20
    25c8:	c9 01       	movw	r24, r18
    25ca:	01 97       	sbiw	r24, 0x01	; 1
    25cc:	a1 09       	sbc	r26, r1
    25ce:	b1 09       	sbc	r27, r1
    25d0:	8f 5f       	subi	r24, 0xFF	; 255
    25d2:	9f 4f       	sbci	r25, 0xFF	; 255
    25d4:	af 4f       	sbci	r26, 0xFF	; 255
    25d6:	bf 43       	sbci	r27, 0x3F	; 63
    25d8:	28 f3       	brcs	.-54     	; 0x25a4 <_fpadd_parts+0x1f4>
    25da:	0b c0       	rjmp	.+22     	; 0x25f2 <_fpadd_parts+0x242>
    25dc:	91 83       	std	Z+1, r25	; 0x01
    25de:	33 82       	std	Z+3, r3	; 0x03
    25e0:	22 82       	std	Z+2, r2	; 0x02
    25e2:	ea 0c       	add	r14, r10
    25e4:	fb 1c       	adc	r15, r11
    25e6:	0c 1d       	adc	r16, r12
    25e8:	1d 1d       	adc	r17, r13
    25ea:	e4 82       	std	Z+4, r14	; 0x04
    25ec:	f5 82       	std	Z+5, r15	; 0x05
    25ee:	06 83       	std	Z+6, r16	; 0x06
    25f0:	17 83       	std	Z+7, r17	; 0x07
    25f2:	83 e0       	ldi	r24, 0x03	; 3
    25f4:	80 83       	st	Z, r24
    25f6:	24 81       	ldd	r18, Z+4	; 0x04
    25f8:	35 81       	ldd	r19, Z+5	; 0x05
    25fa:	46 81       	ldd	r20, Z+6	; 0x06
    25fc:	57 81       	ldd	r21, Z+7	; 0x07
    25fe:	57 ff       	sbrs	r21, 7
    2600:	1a c0       	rjmp	.+52     	; 0x2636 <_fpadd_parts+0x286>
    2602:	c9 01       	movw	r24, r18
    2604:	aa 27       	eor	r26, r26
    2606:	97 fd       	sbrc	r25, 7
    2608:	a0 95       	com	r26
    260a:	ba 2f       	mov	r27, r26
    260c:	81 70       	andi	r24, 0x01	; 1
    260e:	90 70       	andi	r25, 0x00	; 0
    2610:	a0 70       	andi	r26, 0x00	; 0
    2612:	b0 70       	andi	r27, 0x00	; 0
    2614:	56 95       	lsr	r21
    2616:	47 95       	ror	r20
    2618:	37 95       	ror	r19
    261a:	27 95       	ror	r18
    261c:	82 2b       	or	r24, r18
    261e:	93 2b       	or	r25, r19
    2620:	a4 2b       	or	r26, r20
    2622:	b5 2b       	or	r27, r21
    2624:	84 83       	std	Z+4, r24	; 0x04
    2626:	95 83       	std	Z+5, r25	; 0x05
    2628:	a6 83       	std	Z+6, r26	; 0x06
    262a:	b7 83       	std	Z+7, r27	; 0x07
    262c:	82 81       	ldd	r24, Z+2	; 0x02
    262e:	93 81       	ldd	r25, Z+3	; 0x03
    2630:	01 96       	adiw	r24, 0x01	; 1
    2632:	93 83       	std	Z+3, r25	; 0x03
    2634:	82 83       	std	Z+2, r24	; 0x02
    2636:	df 01       	movw	r26, r30
    2638:	01 c0       	rjmp	.+2      	; 0x263c <_fpadd_parts+0x28c>
    263a:	d2 01       	movw	r26, r4
    263c:	cd 01       	movw	r24, r26
    263e:	cd b7       	in	r28, 0x3d	; 61
    2640:	de b7       	in	r29, 0x3e	; 62
    2642:	e2 e1       	ldi	r30, 0x12	; 18
    2644:	0c 94 46 2b 	jmp	0x568c	; 0x568c <__epilogue_restores__>

00002648 <__subsf3>:
    2648:	a0 e2       	ldi	r26, 0x20	; 32
    264a:	b0 e0       	ldi	r27, 0x00	; 0
    264c:	ea e2       	ldi	r30, 0x2A	; 42
    264e:	f3 e1       	ldi	r31, 0x13	; 19
    2650:	0c 94 36 2b 	jmp	0x566c	; 0x566c <__prologue_saves__+0x18>
    2654:	69 83       	std	Y+1, r22	; 0x01
    2656:	7a 83       	std	Y+2, r23	; 0x02
    2658:	8b 83       	std	Y+3, r24	; 0x03
    265a:	9c 83       	std	Y+4, r25	; 0x04
    265c:	2d 83       	std	Y+5, r18	; 0x05
    265e:	3e 83       	std	Y+6, r19	; 0x06
    2660:	4f 83       	std	Y+7, r20	; 0x07
    2662:	58 87       	std	Y+8, r21	; 0x08
    2664:	e9 e0       	ldi	r30, 0x09	; 9
    2666:	ee 2e       	mov	r14, r30
    2668:	f1 2c       	mov	r15, r1
    266a:	ec 0e       	add	r14, r28
    266c:	fd 1e       	adc	r15, r29
    266e:	ce 01       	movw	r24, r28
    2670:	01 96       	adiw	r24, 0x01	; 1
    2672:	b7 01       	movw	r22, r14
    2674:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    2678:	8e 01       	movw	r16, r28
    267a:	0f 5e       	subi	r16, 0xEF	; 239
    267c:	1f 4f       	sbci	r17, 0xFF	; 255
    267e:	ce 01       	movw	r24, r28
    2680:	05 96       	adiw	r24, 0x05	; 5
    2682:	b8 01       	movw	r22, r16
    2684:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    2688:	8a 89       	ldd	r24, Y+18	; 0x12
    268a:	91 e0       	ldi	r25, 0x01	; 1
    268c:	89 27       	eor	r24, r25
    268e:	8a 8b       	std	Y+18, r24	; 0x12
    2690:	c7 01       	movw	r24, r14
    2692:	b8 01       	movw	r22, r16
    2694:	ae 01       	movw	r20, r28
    2696:	47 5e       	subi	r20, 0xE7	; 231
    2698:	5f 4f       	sbci	r21, 0xFF	; 255
    269a:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <_fpadd_parts>
    269e:	0e 94 60 15 	call	0x2ac0	; 0x2ac0 <__pack_f>
    26a2:	a0 96       	adiw	r28, 0x20	; 32
    26a4:	e6 e0       	ldi	r30, 0x06	; 6
    26a6:	0c 94 52 2b 	jmp	0x56a4	; 0x56a4 <__epilogue_restores__+0x18>

000026aa <__addsf3>:
    26aa:	a0 e2       	ldi	r26, 0x20	; 32
    26ac:	b0 e0       	ldi	r27, 0x00	; 0
    26ae:	eb e5       	ldi	r30, 0x5B	; 91
    26b0:	f3 e1       	ldi	r31, 0x13	; 19
    26b2:	0c 94 36 2b 	jmp	0x566c	; 0x566c <__prologue_saves__+0x18>
    26b6:	69 83       	std	Y+1, r22	; 0x01
    26b8:	7a 83       	std	Y+2, r23	; 0x02
    26ba:	8b 83       	std	Y+3, r24	; 0x03
    26bc:	9c 83       	std	Y+4, r25	; 0x04
    26be:	2d 83       	std	Y+5, r18	; 0x05
    26c0:	3e 83       	std	Y+6, r19	; 0x06
    26c2:	4f 83       	std	Y+7, r20	; 0x07
    26c4:	58 87       	std	Y+8, r21	; 0x08
    26c6:	f9 e0       	ldi	r31, 0x09	; 9
    26c8:	ef 2e       	mov	r14, r31
    26ca:	f1 2c       	mov	r15, r1
    26cc:	ec 0e       	add	r14, r28
    26ce:	fd 1e       	adc	r15, r29
    26d0:	ce 01       	movw	r24, r28
    26d2:	01 96       	adiw	r24, 0x01	; 1
    26d4:	b7 01       	movw	r22, r14
    26d6:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    26da:	8e 01       	movw	r16, r28
    26dc:	0f 5e       	subi	r16, 0xEF	; 239
    26de:	1f 4f       	sbci	r17, 0xFF	; 255
    26e0:	ce 01       	movw	r24, r28
    26e2:	05 96       	adiw	r24, 0x05	; 5
    26e4:	b8 01       	movw	r22, r16
    26e6:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    26ea:	c7 01       	movw	r24, r14
    26ec:	b8 01       	movw	r22, r16
    26ee:	ae 01       	movw	r20, r28
    26f0:	47 5e       	subi	r20, 0xE7	; 231
    26f2:	5f 4f       	sbci	r21, 0xFF	; 255
    26f4:	0e 94 d8 11 	call	0x23b0	; 0x23b0 <_fpadd_parts>
    26f8:	0e 94 60 15 	call	0x2ac0	; 0x2ac0 <__pack_f>
    26fc:	a0 96       	adiw	r28, 0x20	; 32
    26fe:	e6 e0       	ldi	r30, 0x06	; 6
    2700:	0c 94 52 2b 	jmp	0x56a4	; 0x56a4 <__epilogue_restores__+0x18>

00002704 <__mulsf3>:
    2704:	a0 e2       	ldi	r26, 0x20	; 32
    2706:	b0 e0       	ldi	r27, 0x00	; 0
    2708:	e8 e8       	ldi	r30, 0x88	; 136
    270a:	f3 e1       	ldi	r31, 0x13	; 19
    270c:	0c 94 2a 2b 	jmp	0x5654	; 0x5654 <__prologue_saves__>
    2710:	69 83       	std	Y+1, r22	; 0x01
    2712:	7a 83       	std	Y+2, r23	; 0x02
    2714:	8b 83       	std	Y+3, r24	; 0x03
    2716:	9c 83       	std	Y+4, r25	; 0x04
    2718:	2d 83       	std	Y+5, r18	; 0x05
    271a:	3e 83       	std	Y+6, r19	; 0x06
    271c:	4f 83       	std	Y+7, r20	; 0x07
    271e:	58 87       	std	Y+8, r21	; 0x08
    2720:	ce 01       	movw	r24, r28
    2722:	01 96       	adiw	r24, 0x01	; 1
    2724:	be 01       	movw	r22, r28
    2726:	67 5f       	subi	r22, 0xF7	; 247
    2728:	7f 4f       	sbci	r23, 0xFF	; 255
    272a:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    272e:	ce 01       	movw	r24, r28
    2730:	05 96       	adiw	r24, 0x05	; 5
    2732:	be 01       	movw	r22, r28
    2734:	6f 5e       	subi	r22, 0xEF	; 239
    2736:	7f 4f       	sbci	r23, 0xFF	; 255
    2738:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    273c:	99 85       	ldd	r25, Y+9	; 0x09
    273e:	92 30       	cpi	r25, 0x02	; 2
    2740:	88 f0       	brcs	.+34     	; 0x2764 <__mulsf3+0x60>
    2742:	89 89       	ldd	r24, Y+17	; 0x11
    2744:	82 30       	cpi	r24, 0x02	; 2
    2746:	c8 f0       	brcs	.+50     	; 0x277a <__mulsf3+0x76>
    2748:	94 30       	cpi	r25, 0x04	; 4
    274a:	19 f4       	brne	.+6      	; 0x2752 <__mulsf3+0x4e>
    274c:	82 30       	cpi	r24, 0x02	; 2
    274e:	51 f4       	brne	.+20     	; 0x2764 <__mulsf3+0x60>
    2750:	04 c0       	rjmp	.+8      	; 0x275a <__mulsf3+0x56>
    2752:	84 30       	cpi	r24, 0x04	; 4
    2754:	29 f4       	brne	.+10     	; 0x2760 <__mulsf3+0x5c>
    2756:	92 30       	cpi	r25, 0x02	; 2
    2758:	81 f4       	brne	.+32     	; 0x277a <__mulsf3+0x76>
    275a:	80 e6       	ldi	r24, 0x60	; 96
    275c:	90 e0       	ldi	r25, 0x00	; 0
    275e:	c6 c0       	rjmp	.+396    	; 0x28ec <__mulsf3+0x1e8>
    2760:	92 30       	cpi	r25, 0x02	; 2
    2762:	49 f4       	brne	.+18     	; 0x2776 <__mulsf3+0x72>
    2764:	20 e0       	ldi	r18, 0x00	; 0
    2766:	9a 85       	ldd	r25, Y+10	; 0x0a
    2768:	8a 89       	ldd	r24, Y+18	; 0x12
    276a:	98 13       	cpse	r25, r24
    276c:	21 e0       	ldi	r18, 0x01	; 1
    276e:	2a 87       	std	Y+10, r18	; 0x0a
    2770:	ce 01       	movw	r24, r28
    2772:	09 96       	adiw	r24, 0x09	; 9
    2774:	bb c0       	rjmp	.+374    	; 0x28ec <__mulsf3+0x1e8>
    2776:	82 30       	cpi	r24, 0x02	; 2
    2778:	49 f4       	brne	.+18     	; 0x278c <__mulsf3+0x88>
    277a:	20 e0       	ldi	r18, 0x00	; 0
    277c:	9a 85       	ldd	r25, Y+10	; 0x0a
    277e:	8a 89       	ldd	r24, Y+18	; 0x12
    2780:	98 13       	cpse	r25, r24
    2782:	21 e0       	ldi	r18, 0x01	; 1
    2784:	2a 8b       	std	Y+18, r18	; 0x12
    2786:	ce 01       	movw	r24, r28
    2788:	41 96       	adiw	r24, 0x11	; 17
    278a:	b0 c0       	rjmp	.+352    	; 0x28ec <__mulsf3+0x1e8>
    278c:	2d 84       	ldd	r2, Y+13	; 0x0d
    278e:	3e 84       	ldd	r3, Y+14	; 0x0e
    2790:	4f 84       	ldd	r4, Y+15	; 0x0f
    2792:	58 88       	ldd	r5, Y+16	; 0x10
    2794:	6d 88       	ldd	r6, Y+21	; 0x15
    2796:	7e 88       	ldd	r7, Y+22	; 0x16
    2798:	8f 88       	ldd	r8, Y+23	; 0x17
    279a:	98 8c       	ldd	r9, Y+24	; 0x18
    279c:	ee 24       	eor	r14, r14
    279e:	ff 24       	eor	r15, r15
    27a0:	87 01       	movw	r16, r14
    27a2:	aa 24       	eor	r10, r10
    27a4:	bb 24       	eor	r11, r11
    27a6:	65 01       	movw	r12, r10
    27a8:	40 e0       	ldi	r20, 0x00	; 0
    27aa:	50 e0       	ldi	r21, 0x00	; 0
    27ac:	60 e0       	ldi	r22, 0x00	; 0
    27ae:	70 e0       	ldi	r23, 0x00	; 0
    27b0:	e0 e0       	ldi	r30, 0x00	; 0
    27b2:	f0 e0       	ldi	r31, 0x00	; 0
    27b4:	c1 01       	movw	r24, r2
    27b6:	81 70       	andi	r24, 0x01	; 1
    27b8:	90 70       	andi	r25, 0x00	; 0
    27ba:	89 2b       	or	r24, r25
    27bc:	e9 f0       	breq	.+58     	; 0x27f8 <__mulsf3+0xf4>
    27be:	e6 0c       	add	r14, r6
    27c0:	f7 1c       	adc	r15, r7
    27c2:	08 1d       	adc	r16, r8
    27c4:	19 1d       	adc	r17, r9
    27c6:	9a 01       	movw	r18, r20
    27c8:	ab 01       	movw	r20, r22
    27ca:	2a 0d       	add	r18, r10
    27cc:	3b 1d       	adc	r19, r11
    27ce:	4c 1d       	adc	r20, r12
    27d0:	5d 1d       	adc	r21, r13
    27d2:	80 e0       	ldi	r24, 0x00	; 0
    27d4:	90 e0       	ldi	r25, 0x00	; 0
    27d6:	a0 e0       	ldi	r26, 0x00	; 0
    27d8:	b0 e0       	ldi	r27, 0x00	; 0
    27da:	e6 14       	cp	r14, r6
    27dc:	f7 04       	cpc	r15, r7
    27de:	08 05       	cpc	r16, r8
    27e0:	19 05       	cpc	r17, r9
    27e2:	20 f4       	brcc	.+8      	; 0x27ec <__mulsf3+0xe8>
    27e4:	81 e0       	ldi	r24, 0x01	; 1
    27e6:	90 e0       	ldi	r25, 0x00	; 0
    27e8:	a0 e0       	ldi	r26, 0x00	; 0
    27ea:	b0 e0       	ldi	r27, 0x00	; 0
    27ec:	ba 01       	movw	r22, r20
    27ee:	a9 01       	movw	r20, r18
    27f0:	48 0f       	add	r20, r24
    27f2:	59 1f       	adc	r21, r25
    27f4:	6a 1f       	adc	r22, r26
    27f6:	7b 1f       	adc	r23, r27
    27f8:	aa 0c       	add	r10, r10
    27fa:	bb 1c       	adc	r11, r11
    27fc:	cc 1c       	adc	r12, r12
    27fe:	dd 1c       	adc	r13, r13
    2800:	97 fe       	sbrs	r9, 7
    2802:	08 c0       	rjmp	.+16     	; 0x2814 <__mulsf3+0x110>
    2804:	81 e0       	ldi	r24, 0x01	; 1
    2806:	90 e0       	ldi	r25, 0x00	; 0
    2808:	a0 e0       	ldi	r26, 0x00	; 0
    280a:	b0 e0       	ldi	r27, 0x00	; 0
    280c:	a8 2a       	or	r10, r24
    280e:	b9 2a       	or	r11, r25
    2810:	ca 2a       	or	r12, r26
    2812:	db 2a       	or	r13, r27
    2814:	31 96       	adiw	r30, 0x01	; 1
    2816:	e0 32       	cpi	r30, 0x20	; 32
    2818:	f1 05       	cpc	r31, r1
    281a:	49 f0       	breq	.+18     	; 0x282e <__mulsf3+0x12a>
    281c:	66 0c       	add	r6, r6
    281e:	77 1c       	adc	r7, r7
    2820:	88 1c       	adc	r8, r8
    2822:	99 1c       	adc	r9, r9
    2824:	56 94       	lsr	r5
    2826:	47 94       	ror	r4
    2828:	37 94       	ror	r3
    282a:	27 94       	ror	r2
    282c:	c3 cf       	rjmp	.-122    	; 0x27b4 <__mulsf3+0xb0>
    282e:	fa 85       	ldd	r31, Y+10	; 0x0a
    2830:	ea 89       	ldd	r30, Y+18	; 0x12
    2832:	2b 89       	ldd	r18, Y+19	; 0x13
    2834:	3c 89       	ldd	r19, Y+20	; 0x14
    2836:	8b 85       	ldd	r24, Y+11	; 0x0b
    2838:	9c 85       	ldd	r25, Y+12	; 0x0c
    283a:	28 0f       	add	r18, r24
    283c:	39 1f       	adc	r19, r25
    283e:	2e 5f       	subi	r18, 0xFE	; 254
    2840:	3f 4f       	sbci	r19, 0xFF	; 255
    2842:	17 c0       	rjmp	.+46     	; 0x2872 <__mulsf3+0x16e>
    2844:	ca 01       	movw	r24, r20
    2846:	81 70       	andi	r24, 0x01	; 1
    2848:	90 70       	andi	r25, 0x00	; 0
    284a:	89 2b       	or	r24, r25
    284c:	61 f0       	breq	.+24     	; 0x2866 <__mulsf3+0x162>
    284e:	16 95       	lsr	r17
    2850:	07 95       	ror	r16
    2852:	f7 94       	ror	r15
    2854:	e7 94       	ror	r14
    2856:	80 e0       	ldi	r24, 0x00	; 0
    2858:	90 e0       	ldi	r25, 0x00	; 0
    285a:	a0 e0       	ldi	r26, 0x00	; 0
    285c:	b0 e8       	ldi	r27, 0x80	; 128
    285e:	e8 2a       	or	r14, r24
    2860:	f9 2a       	or	r15, r25
    2862:	0a 2b       	or	r16, r26
    2864:	1b 2b       	or	r17, r27
    2866:	76 95       	lsr	r23
    2868:	67 95       	ror	r22
    286a:	57 95       	ror	r21
    286c:	47 95       	ror	r20
    286e:	2f 5f       	subi	r18, 0xFF	; 255
    2870:	3f 4f       	sbci	r19, 0xFF	; 255
    2872:	77 fd       	sbrc	r23, 7
    2874:	e7 cf       	rjmp	.-50     	; 0x2844 <__mulsf3+0x140>
    2876:	0c c0       	rjmp	.+24     	; 0x2890 <__mulsf3+0x18c>
    2878:	44 0f       	add	r20, r20
    287a:	55 1f       	adc	r21, r21
    287c:	66 1f       	adc	r22, r22
    287e:	77 1f       	adc	r23, r23
    2880:	17 fd       	sbrc	r17, 7
    2882:	41 60       	ori	r20, 0x01	; 1
    2884:	ee 0c       	add	r14, r14
    2886:	ff 1c       	adc	r15, r15
    2888:	00 1f       	adc	r16, r16
    288a:	11 1f       	adc	r17, r17
    288c:	21 50       	subi	r18, 0x01	; 1
    288e:	30 40       	sbci	r19, 0x00	; 0
    2890:	40 30       	cpi	r20, 0x00	; 0
    2892:	90 e0       	ldi	r25, 0x00	; 0
    2894:	59 07       	cpc	r21, r25
    2896:	90 e0       	ldi	r25, 0x00	; 0
    2898:	69 07       	cpc	r22, r25
    289a:	90 e4       	ldi	r25, 0x40	; 64
    289c:	79 07       	cpc	r23, r25
    289e:	60 f3       	brcs	.-40     	; 0x2878 <__mulsf3+0x174>
    28a0:	2b 8f       	std	Y+27, r18	; 0x1b
    28a2:	3c 8f       	std	Y+28, r19	; 0x1c
    28a4:	db 01       	movw	r26, r22
    28a6:	ca 01       	movw	r24, r20
    28a8:	8f 77       	andi	r24, 0x7F	; 127
    28aa:	90 70       	andi	r25, 0x00	; 0
    28ac:	a0 70       	andi	r26, 0x00	; 0
    28ae:	b0 70       	andi	r27, 0x00	; 0
    28b0:	80 34       	cpi	r24, 0x40	; 64
    28b2:	91 05       	cpc	r25, r1
    28b4:	a1 05       	cpc	r26, r1
    28b6:	b1 05       	cpc	r27, r1
    28b8:	61 f4       	brne	.+24     	; 0x28d2 <__mulsf3+0x1ce>
    28ba:	47 fd       	sbrc	r20, 7
    28bc:	0a c0       	rjmp	.+20     	; 0x28d2 <__mulsf3+0x1ce>
    28be:	e1 14       	cp	r14, r1
    28c0:	f1 04       	cpc	r15, r1
    28c2:	01 05       	cpc	r16, r1
    28c4:	11 05       	cpc	r17, r1
    28c6:	29 f0       	breq	.+10     	; 0x28d2 <__mulsf3+0x1ce>
    28c8:	40 5c       	subi	r20, 0xC0	; 192
    28ca:	5f 4f       	sbci	r21, 0xFF	; 255
    28cc:	6f 4f       	sbci	r22, 0xFF	; 255
    28ce:	7f 4f       	sbci	r23, 0xFF	; 255
    28d0:	40 78       	andi	r20, 0x80	; 128
    28d2:	1a 8e       	std	Y+26, r1	; 0x1a
    28d4:	fe 17       	cp	r31, r30
    28d6:	11 f0       	breq	.+4      	; 0x28dc <__mulsf3+0x1d8>
    28d8:	81 e0       	ldi	r24, 0x01	; 1
    28da:	8a 8f       	std	Y+26, r24	; 0x1a
    28dc:	4d 8f       	std	Y+29, r20	; 0x1d
    28de:	5e 8f       	std	Y+30, r21	; 0x1e
    28e0:	6f 8f       	std	Y+31, r22	; 0x1f
    28e2:	78 a3       	std	Y+32, r23	; 0x20
    28e4:	83 e0       	ldi	r24, 0x03	; 3
    28e6:	89 8f       	std	Y+25, r24	; 0x19
    28e8:	ce 01       	movw	r24, r28
    28ea:	49 96       	adiw	r24, 0x19	; 25
    28ec:	0e 94 60 15 	call	0x2ac0	; 0x2ac0 <__pack_f>
    28f0:	a0 96       	adiw	r28, 0x20	; 32
    28f2:	e2 e1       	ldi	r30, 0x12	; 18
    28f4:	0c 94 46 2b 	jmp	0x568c	; 0x568c <__epilogue_restores__>

000028f8 <__gtsf2>:
    28f8:	a8 e1       	ldi	r26, 0x18	; 24
    28fa:	b0 e0       	ldi	r27, 0x00	; 0
    28fc:	e2 e8       	ldi	r30, 0x82	; 130
    28fe:	f4 e1       	ldi	r31, 0x14	; 20
    2900:	0c 94 36 2b 	jmp	0x566c	; 0x566c <__prologue_saves__+0x18>
    2904:	69 83       	std	Y+1, r22	; 0x01
    2906:	7a 83       	std	Y+2, r23	; 0x02
    2908:	8b 83       	std	Y+3, r24	; 0x03
    290a:	9c 83       	std	Y+4, r25	; 0x04
    290c:	2d 83       	std	Y+5, r18	; 0x05
    290e:	3e 83       	std	Y+6, r19	; 0x06
    2910:	4f 83       	std	Y+7, r20	; 0x07
    2912:	58 87       	std	Y+8, r21	; 0x08
    2914:	89 e0       	ldi	r24, 0x09	; 9
    2916:	e8 2e       	mov	r14, r24
    2918:	f1 2c       	mov	r15, r1
    291a:	ec 0e       	add	r14, r28
    291c:	fd 1e       	adc	r15, r29
    291e:	ce 01       	movw	r24, r28
    2920:	01 96       	adiw	r24, 0x01	; 1
    2922:	b7 01       	movw	r22, r14
    2924:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    2928:	8e 01       	movw	r16, r28
    292a:	0f 5e       	subi	r16, 0xEF	; 239
    292c:	1f 4f       	sbci	r17, 0xFF	; 255
    292e:	ce 01       	movw	r24, r28
    2930:	05 96       	adiw	r24, 0x05	; 5
    2932:	b8 01       	movw	r22, r16
    2934:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    2938:	89 85       	ldd	r24, Y+9	; 0x09
    293a:	82 30       	cpi	r24, 0x02	; 2
    293c:	40 f0       	brcs	.+16     	; 0x294e <__gtsf2+0x56>
    293e:	89 89       	ldd	r24, Y+17	; 0x11
    2940:	82 30       	cpi	r24, 0x02	; 2
    2942:	28 f0       	brcs	.+10     	; 0x294e <__gtsf2+0x56>
    2944:	c7 01       	movw	r24, r14
    2946:	b8 01       	movw	r22, r16
    2948:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__fpcmp_parts_f>
    294c:	01 c0       	rjmp	.+2      	; 0x2950 <__gtsf2+0x58>
    294e:	8f ef       	ldi	r24, 0xFF	; 255
    2950:	68 96       	adiw	r28, 0x18	; 24
    2952:	e6 e0       	ldi	r30, 0x06	; 6
    2954:	0c 94 52 2b 	jmp	0x56a4	; 0x56a4 <__epilogue_restores__+0x18>

00002958 <__gesf2>:
    2958:	a8 e1       	ldi	r26, 0x18	; 24
    295a:	b0 e0       	ldi	r27, 0x00	; 0
    295c:	e2 eb       	ldi	r30, 0xB2	; 178
    295e:	f4 e1       	ldi	r31, 0x14	; 20
    2960:	0c 94 36 2b 	jmp	0x566c	; 0x566c <__prologue_saves__+0x18>
    2964:	69 83       	std	Y+1, r22	; 0x01
    2966:	7a 83       	std	Y+2, r23	; 0x02
    2968:	8b 83       	std	Y+3, r24	; 0x03
    296a:	9c 83       	std	Y+4, r25	; 0x04
    296c:	2d 83       	std	Y+5, r18	; 0x05
    296e:	3e 83       	std	Y+6, r19	; 0x06
    2970:	4f 83       	std	Y+7, r20	; 0x07
    2972:	58 87       	std	Y+8, r21	; 0x08
    2974:	89 e0       	ldi	r24, 0x09	; 9
    2976:	e8 2e       	mov	r14, r24
    2978:	f1 2c       	mov	r15, r1
    297a:	ec 0e       	add	r14, r28
    297c:	fd 1e       	adc	r15, r29
    297e:	ce 01       	movw	r24, r28
    2980:	01 96       	adiw	r24, 0x01	; 1
    2982:	b7 01       	movw	r22, r14
    2984:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    2988:	8e 01       	movw	r16, r28
    298a:	0f 5e       	subi	r16, 0xEF	; 239
    298c:	1f 4f       	sbci	r17, 0xFF	; 255
    298e:	ce 01       	movw	r24, r28
    2990:	05 96       	adiw	r24, 0x05	; 5
    2992:	b8 01       	movw	r22, r16
    2994:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    2998:	89 85       	ldd	r24, Y+9	; 0x09
    299a:	82 30       	cpi	r24, 0x02	; 2
    299c:	40 f0       	brcs	.+16     	; 0x29ae <__gesf2+0x56>
    299e:	89 89       	ldd	r24, Y+17	; 0x11
    29a0:	82 30       	cpi	r24, 0x02	; 2
    29a2:	28 f0       	brcs	.+10     	; 0x29ae <__gesf2+0x56>
    29a4:	c7 01       	movw	r24, r14
    29a6:	b8 01       	movw	r22, r16
    29a8:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__fpcmp_parts_f>
    29ac:	01 c0       	rjmp	.+2      	; 0x29b0 <__gesf2+0x58>
    29ae:	8f ef       	ldi	r24, 0xFF	; 255
    29b0:	68 96       	adiw	r28, 0x18	; 24
    29b2:	e6 e0       	ldi	r30, 0x06	; 6
    29b4:	0c 94 52 2b 	jmp	0x56a4	; 0x56a4 <__epilogue_restores__+0x18>

000029b8 <__ltsf2>:
    29b8:	a8 e1       	ldi	r26, 0x18	; 24
    29ba:	b0 e0       	ldi	r27, 0x00	; 0
    29bc:	e2 ee       	ldi	r30, 0xE2	; 226
    29be:	f4 e1       	ldi	r31, 0x14	; 20
    29c0:	0c 94 36 2b 	jmp	0x566c	; 0x566c <__prologue_saves__+0x18>
    29c4:	69 83       	std	Y+1, r22	; 0x01
    29c6:	7a 83       	std	Y+2, r23	; 0x02
    29c8:	8b 83       	std	Y+3, r24	; 0x03
    29ca:	9c 83       	std	Y+4, r25	; 0x04
    29cc:	2d 83       	std	Y+5, r18	; 0x05
    29ce:	3e 83       	std	Y+6, r19	; 0x06
    29d0:	4f 83       	std	Y+7, r20	; 0x07
    29d2:	58 87       	std	Y+8, r21	; 0x08
    29d4:	89 e0       	ldi	r24, 0x09	; 9
    29d6:	e8 2e       	mov	r14, r24
    29d8:	f1 2c       	mov	r15, r1
    29da:	ec 0e       	add	r14, r28
    29dc:	fd 1e       	adc	r15, r29
    29de:	ce 01       	movw	r24, r28
    29e0:	01 96       	adiw	r24, 0x01	; 1
    29e2:	b7 01       	movw	r22, r14
    29e4:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    29e8:	8e 01       	movw	r16, r28
    29ea:	0f 5e       	subi	r16, 0xEF	; 239
    29ec:	1f 4f       	sbci	r17, 0xFF	; 255
    29ee:	ce 01       	movw	r24, r28
    29f0:	05 96       	adiw	r24, 0x05	; 5
    29f2:	b8 01       	movw	r22, r16
    29f4:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    29f8:	89 85       	ldd	r24, Y+9	; 0x09
    29fa:	82 30       	cpi	r24, 0x02	; 2
    29fc:	40 f0       	brcs	.+16     	; 0x2a0e <__ltsf2+0x56>
    29fe:	89 89       	ldd	r24, Y+17	; 0x11
    2a00:	82 30       	cpi	r24, 0x02	; 2
    2a02:	28 f0       	brcs	.+10     	; 0x2a0e <__ltsf2+0x56>
    2a04:	c7 01       	movw	r24, r14
    2a06:	b8 01       	movw	r22, r16
    2a08:	0e 94 ad 16 	call	0x2d5a	; 0x2d5a <__fpcmp_parts_f>
    2a0c:	01 c0       	rjmp	.+2      	; 0x2a10 <__ltsf2+0x58>
    2a0e:	81 e0       	ldi	r24, 0x01	; 1
    2a10:	68 96       	adiw	r28, 0x18	; 24
    2a12:	e6 e0       	ldi	r30, 0x06	; 6
    2a14:	0c 94 52 2b 	jmp	0x56a4	; 0x56a4 <__epilogue_restores__+0x18>

00002a18 <__fixsfsi>:
    2a18:	ac e0       	ldi	r26, 0x0C	; 12
    2a1a:	b0 e0       	ldi	r27, 0x00	; 0
    2a1c:	e2 e1       	ldi	r30, 0x12	; 18
    2a1e:	f5 e1       	ldi	r31, 0x15	; 21
    2a20:	0c 94 3a 2b 	jmp	0x5674	; 0x5674 <__prologue_saves__+0x20>
    2a24:	69 83       	std	Y+1, r22	; 0x01
    2a26:	7a 83       	std	Y+2, r23	; 0x02
    2a28:	8b 83       	std	Y+3, r24	; 0x03
    2a2a:	9c 83       	std	Y+4, r25	; 0x04
    2a2c:	ce 01       	movw	r24, r28
    2a2e:	01 96       	adiw	r24, 0x01	; 1
    2a30:	be 01       	movw	r22, r28
    2a32:	6b 5f       	subi	r22, 0xFB	; 251
    2a34:	7f 4f       	sbci	r23, 0xFF	; 255
    2a36:	0e 94 35 16 	call	0x2c6a	; 0x2c6a <__unpack_f>
    2a3a:	8d 81       	ldd	r24, Y+5	; 0x05
    2a3c:	82 30       	cpi	r24, 0x02	; 2
    2a3e:	61 f1       	breq	.+88     	; 0x2a98 <__fixsfsi+0x80>
    2a40:	82 30       	cpi	r24, 0x02	; 2
    2a42:	50 f1       	brcs	.+84     	; 0x2a98 <__fixsfsi+0x80>
    2a44:	84 30       	cpi	r24, 0x04	; 4
    2a46:	21 f4       	brne	.+8      	; 0x2a50 <__fixsfsi+0x38>
    2a48:	8e 81       	ldd	r24, Y+6	; 0x06
    2a4a:	88 23       	and	r24, r24
    2a4c:	51 f1       	breq	.+84     	; 0x2aa2 <__fixsfsi+0x8a>
    2a4e:	2e c0       	rjmp	.+92     	; 0x2aac <__fixsfsi+0x94>
    2a50:	2f 81       	ldd	r18, Y+7	; 0x07
    2a52:	38 85       	ldd	r19, Y+8	; 0x08
    2a54:	37 fd       	sbrc	r19, 7
    2a56:	20 c0       	rjmp	.+64     	; 0x2a98 <__fixsfsi+0x80>
    2a58:	6e 81       	ldd	r22, Y+6	; 0x06
    2a5a:	2f 31       	cpi	r18, 0x1F	; 31
    2a5c:	31 05       	cpc	r19, r1
    2a5e:	1c f0       	brlt	.+6      	; 0x2a66 <__fixsfsi+0x4e>
    2a60:	66 23       	and	r22, r22
    2a62:	f9 f0       	breq	.+62     	; 0x2aa2 <__fixsfsi+0x8a>
    2a64:	23 c0       	rjmp	.+70     	; 0x2aac <__fixsfsi+0x94>
    2a66:	8e e1       	ldi	r24, 0x1E	; 30
    2a68:	90 e0       	ldi	r25, 0x00	; 0
    2a6a:	82 1b       	sub	r24, r18
    2a6c:	93 0b       	sbc	r25, r19
    2a6e:	29 85       	ldd	r18, Y+9	; 0x09
    2a70:	3a 85       	ldd	r19, Y+10	; 0x0a
    2a72:	4b 85       	ldd	r20, Y+11	; 0x0b
    2a74:	5c 85       	ldd	r21, Y+12	; 0x0c
    2a76:	04 c0       	rjmp	.+8      	; 0x2a80 <__fixsfsi+0x68>
    2a78:	56 95       	lsr	r21
    2a7a:	47 95       	ror	r20
    2a7c:	37 95       	ror	r19
    2a7e:	27 95       	ror	r18
    2a80:	8a 95       	dec	r24
    2a82:	d2 f7       	brpl	.-12     	; 0x2a78 <__fixsfsi+0x60>
    2a84:	66 23       	and	r22, r22
    2a86:	b1 f0       	breq	.+44     	; 0x2ab4 <__fixsfsi+0x9c>
    2a88:	50 95       	com	r21
    2a8a:	40 95       	com	r20
    2a8c:	30 95       	com	r19
    2a8e:	21 95       	neg	r18
    2a90:	3f 4f       	sbci	r19, 0xFF	; 255
    2a92:	4f 4f       	sbci	r20, 0xFF	; 255
    2a94:	5f 4f       	sbci	r21, 0xFF	; 255
    2a96:	0e c0       	rjmp	.+28     	; 0x2ab4 <__fixsfsi+0x9c>
    2a98:	20 e0       	ldi	r18, 0x00	; 0
    2a9a:	30 e0       	ldi	r19, 0x00	; 0
    2a9c:	40 e0       	ldi	r20, 0x00	; 0
    2a9e:	50 e0       	ldi	r21, 0x00	; 0
    2aa0:	09 c0       	rjmp	.+18     	; 0x2ab4 <__fixsfsi+0x9c>
    2aa2:	2f ef       	ldi	r18, 0xFF	; 255
    2aa4:	3f ef       	ldi	r19, 0xFF	; 255
    2aa6:	4f ef       	ldi	r20, 0xFF	; 255
    2aa8:	5f e7       	ldi	r21, 0x7F	; 127
    2aaa:	04 c0       	rjmp	.+8      	; 0x2ab4 <__fixsfsi+0x9c>
    2aac:	20 e0       	ldi	r18, 0x00	; 0
    2aae:	30 e0       	ldi	r19, 0x00	; 0
    2ab0:	40 e0       	ldi	r20, 0x00	; 0
    2ab2:	50 e8       	ldi	r21, 0x80	; 128
    2ab4:	b9 01       	movw	r22, r18
    2ab6:	ca 01       	movw	r24, r20
    2ab8:	2c 96       	adiw	r28, 0x0c	; 12
    2aba:	e2 e0       	ldi	r30, 0x02	; 2
    2abc:	0c 94 56 2b 	jmp	0x56ac	; 0x56ac <__epilogue_restores__+0x20>

00002ac0 <__pack_f>:
    2ac0:	df 92       	push	r13
    2ac2:	ef 92       	push	r14
    2ac4:	ff 92       	push	r15
    2ac6:	0f 93       	push	r16
    2ac8:	1f 93       	push	r17
    2aca:	fc 01       	movw	r30, r24
    2acc:	e4 80       	ldd	r14, Z+4	; 0x04
    2ace:	f5 80       	ldd	r15, Z+5	; 0x05
    2ad0:	06 81       	ldd	r16, Z+6	; 0x06
    2ad2:	17 81       	ldd	r17, Z+7	; 0x07
    2ad4:	d1 80       	ldd	r13, Z+1	; 0x01
    2ad6:	80 81       	ld	r24, Z
    2ad8:	82 30       	cpi	r24, 0x02	; 2
    2ada:	48 f4       	brcc	.+18     	; 0x2aee <__pack_f+0x2e>
    2adc:	80 e0       	ldi	r24, 0x00	; 0
    2ade:	90 e0       	ldi	r25, 0x00	; 0
    2ae0:	a0 e1       	ldi	r26, 0x10	; 16
    2ae2:	b0 e0       	ldi	r27, 0x00	; 0
    2ae4:	e8 2a       	or	r14, r24
    2ae6:	f9 2a       	or	r15, r25
    2ae8:	0a 2b       	or	r16, r26
    2aea:	1b 2b       	or	r17, r27
    2aec:	a5 c0       	rjmp	.+330    	; 0x2c38 <__pack_f+0x178>
    2aee:	84 30       	cpi	r24, 0x04	; 4
    2af0:	09 f4       	brne	.+2      	; 0x2af4 <__pack_f+0x34>
    2af2:	9f c0       	rjmp	.+318    	; 0x2c32 <__pack_f+0x172>
    2af4:	82 30       	cpi	r24, 0x02	; 2
    2af6:	21 f4       	brne	.+8      	; 0x2b00 <__pack_f+0x40>
    2af8:	ee 24       	eor	r14, r14
    2afa:	ff 24       	eor	r15, r15
    2afc:	87 01       	movw	r16, r14
    2afe:	05 c0       	rjmp	.+10     	; 0x2b0a <__pack_f+0x4a>
    2b00:	e1 14       	cp	r14, r1
    2b02:	f1 04       	cpc	r15, r1
    2b04:	01 05       	cpc	r16, r1
    2b06:	11 05       	cpc	r17, r1
    2b08:	19 f4       	brne	.+6      	; 0x2b10 <__pack_f+0x50>
    2b0a:	e0 e0       	ldi	r30, 0x00	; 0
    2b0c:	f0 e0       	ldi	r31, 0x00	; 0
    2b0e:	96 c0       	rjmp	.+300    	; 0x2c3c <__pack_f+0x17c>
    2b10:	62 81       	ldd	r22, Z+2	; 0x02
    2b12:	73 81       	ldd	r23, Z+3	; 0x03
    2b14:	9f ef       	ldi	r25, 0xFF	; 255
    2b16:	62 38       	cpi	r22, 0x82	; 130
    2b18:	79 07       	cpc	r23, r25
    2b1a:	0c f0       	brlt	.+2      	; 0x2b1e <__pack_f+0x5e>
    2b1c:	5b c0       	rjmp	.+182    	; 0x2bd4 <__pack_f+0x114>
    2b1e:	22 e8       	ldi	r18, 0x82	; 130
    2b20:	3f ef       	ldi	r19, 0xFF	; 255
    2b22:	26 1b       	sub	r18, r22
    2b24:	37 0b       	sbc	r19, r23
    2b26:	2a 31       	cpi	r18, 0x1A	; 26
    2b28:	31 05       	cpc	r19, r1
    2b2a:	2c f0       	brlt	.+10     	; 0x2b36 <__pack_f+0x76>
    2b2c:	20 e0       	ldi	r18, 0x00	; 0
    2b2e:	30 e0       	ldi	r19, 0x00	; 0
    2b30:	40 e0       	ldi	r20, 0x00	; 0
    2b32:	50 e0       	ldi	r21, 0x00	; 0
    2b34:	2a c0       	rjmp	.+84     	; 0x2b8a <__pack_f+0xca>
    2b36:	b8 01       	movw	r22, r16
    2b38:	a7 01       	movw	r20, r14
    2b3a:	02 2e       	mov	r0, r18
    2b3c:	04 c0       	rjmp	.+8      	; 0x2b46 <__pack_f+0x86>
    2b3e:	76 95       	lsr	r23
    2b40:	67 95       	ror	r22
    2b42:	57 95       	ror	r21
    2b44:	47 95       	ror	r20
    2b46:	0a 94       	dec	r0
    2b48:	d2 f7       	brpl	.-12     	; 0x2b3e <__pack_f+0x7e>
    2b4a:	81 e0       	ldi	r24, 0x01	; 1
    2b4c:	90 e0       	ldi	r25, 0x00	; 0
    2b4e:	a0 e0       	ldi	r26, 0x00	; 0
    2b50:	b0 e0       	ldi	r27, 0x00	; 0
    2b52:	04 c0       	rjmp	.+8      	; 0x2b5c <__pack_f+0x9c>
    2b54:	88 0f       	add	r24, r24
    2b56:	99 1f       	adc	r25, r25
    2b58:	aa 1f       	adc	r26, r26
    2b5a:	bb 1f       	adc	r27, r27
    2b5c:	2a 95       	dec	r18
    2b5e:	d2 f7       	brpl	.-12     	; 0x2b54 <__pack_f+0x94>
    2b60:	01 97       	sbiw	r24, 0x01	; 1
    2b62:	a1 09       	sbc	r26, r1
    2b64:	b1 09       	sbc	r27, r1
    2b66:	8e 21       	and	r24, r14
    2b68:	9f 21       	and	r25, r15
    2b6a:	a0 23       	and	r26, r16
    2b6c:	b1 23       	and	r27, r17
    2b6e:	00 97       	sbiw	r24, 0x00	; 0
    2b70:	a1 05       	cpc	r26, r1
    2b72:	b1 05       	cpc	r27, r1
    2b74:	21 f0       	breq	.+8      	; 0x2b7e <__pack_f+0xbe>
    2b76:	81 e0       	ldi	r24, 0x01	; 1
    2b78:	90 e0       	ldi	r25, 0x00	; 0
    2b7a:	a0 e0       	ldi	r26, 0x00	; 0
    2b7c:	b0 e0       	ldi	r27, 0x00	; 0
    2b7e:	9a 01       	movw	r18, r20
    2b80:	ab 01       	movw	r20, r22
    2b82:	28 2b       	or	r18, r24
    2b84:	39 2b       	or	r19, r25
    2b86:	4a 2b       	or	r20, r26
    2b88:	5b 2b       	or	r21, r27
    2b8a:	da 01       	movw	r26, r20
    2b8c:	c9 01       	movw	r24, r18
    2b8e:	8f 77       	andi	r24, 0x7F	; 127
    2b90:	90 70       	andi	r25, 0x00	; 0
    2b92:	a0 70       	andi	r26, 0x00	; 0
    2b94:	b0 70       	andi	r27, 0x00	; 0
    2b96:	80 34       	cpi	r24, 0x40	; 64
    2b98:	91 05       	cpc	r25, r1
    2b9a:	a1 05       	cpc	r26, r1
    2b9c:	b1 05       	cpc	r27, r1
    2b9e:	39 f4       	brne	.+14     	; 0x2bae <__pack_f+0xee>
    2ba0:	27 ff       	sbrs	r18, 7
    2ba2:	09 c0       	rjmp	.+18     	; 0x2bb6 <__pack_f+0xf6>
    2ba4:	20 5c       	subi	r18, 0xC0	; 192
    2ba6:	3f 4f       	sbci	r19, 0xFF	; 255
    2ba8:	4f 4f       	sbci	r20, 0xFF	; 255
    2baa:	5f 4f       	sbci	r21, 0xFF	; 255
    2bac:	04 c0       	rjmp	.+8      	; 0x2bb6 <__pack_f+0xf6>
    2bae:	21 5c       	subi	r18, 0xC1	; 193
    2bb0:	3f 4f       	sbci	r19, 0xFF	; 255
    2bb2:	4f 4f       	sbci	r20, 0xFF	; 255
    2bb4:	5f 4f       	sbci	r21, 0xFF	; 255
    2bb6:	e0 e0       	ldi	r30, 0x00	; 0
    2bb8:	f0 e0       	ldi	r31, 0x00	; 0
    2bba:	20 30       	cpi	r18, 0x00	; 0
    2bbc:	a0 e0       	ldi	r26, 0x00	; 0
    2bbe:	3a 07       	cpc	r19, r26
    2bc0:	a0 e0       	ldi	r26, 0x00	; 0
    2bc2:	4a 07       	cpc	r20, r26
    2bc4:	a0 e4       	ldi	r26, 0x40	; 64
    2bc6:	5a 07       	cpc	r21, r26
    2bc8:	10 f0       	brcs	.+4      	; 0x2bce <__pack_f+0x10e>
    2bca:	e1 e0       	ldi	r30, 0x01	; 1
    2bcc:	f0 e0       	ldi	r31, 0x00	; 0
    2bce:	79 01       	movw	r14, r18
    2bd0:	8a 01       	movw	r16, r20
    2bd2:	27 c0       	rjmp	.+78     	; 0x2c22 <__pack_f+0x162>
    2bd4:	60 38       	cpi	r22, 0x80	; 128
    2bd6:	71 05       	cpc	r23, r1
    2bd8:	64 f5       	brge	.+88     	; 0x2c32 <__pack_f+0x172>
    2bda:	fb 01       	movw	r30, r22
    2bdc:	e1 58       	subi	r30, 0x81	; 129
    2bde:	ff 4f       	sbci	r31, 0xFF	; 255
    2be0:	d8 01       	movw	r26, r16
    2be2:	c7 01       	movw	r24, r14
    2be4:	8f 77       	andi	r24, 0x7F	; 127
    2be6:	90 70       	andi	r25, 0x00	; 0
    2be8:	a0 70       	andi	r26, 0x00	; 0
    2bea:	b0 70       	andi	r27, 0x00	; 0
    2bec:	80 34       	cpi	r24, 0x40	; 64
    2bee:	91 05       	cpc	r25, r1
    2bf0:	a1 05       	cpc	r26, r1
    2bf2:	b1 05       	cpc	r27, r1
    2bf4:	39 f4       	brne	.+14     	; 0x2c04 <__pack_f+0x144>
    2bf6:	e7 fe       	sbrs	r14, 7
    2bf8:	0d c0       	rjmp	.+26     	; 0x2c14 <__pack_f+0x154>
    2bfa:	80 e4       	ldi	r24, 0x40	; 64
    2bfc:	90 e0       	ldi	r25, 0x00	; 0
    2bfe:	a0 e0       	ldi	r26, 0x00	; 0
    2c00:	b0 e0       	ldi	r27, 0x00	; 0
    2c02:	04 c0       	rjmp	.+8      	; 0x2c0c <__pack_f+0x14c>
    2c04:	8f e3       	ldi	r24, 0x3F	; 63
    2c06:	90 e0       	ldi	r25, 0x00	; 0
    2c08:	a0 e0       	ldi	r26, 0x00	; 0
    2c0a:	b0 e0       	ldi	r27, 0x00	; 0
    2c0c:	e8 0e       	add	r14, r24
    2c0e:	f9 1e       	adc	r15, r25
    2c10:	0a 1f       	adc	r16, r26
    2c12:	1b 1f       	adc	r17, r27
    2c14:	17 ff       	sbrs	r17, 7
    2c16:	05 c0       	rjmp	.+10     	; 0x2c22 <__pack_f+0x162>
    2c18:	16 95       	lsr	r17
    2c1a:	07 95       	ror	r16
    2c1c:	f7 94       	ror	r15
    2c1e:	e7 94       	ror	r14
    2c20:	31 96       	adiw	r30, 0x01	; 1
    2c22:	87 e0       	ldi	r24, 0x07	; 7
    2c24:	16 95       	lsr	r17
    2c26:	07 95       	ror	r16
    2c28:	f7 94       	ror	r15
    2c2a:	e7 94       	ror	r14
    2c2c:	8a 95       	dec	r24
    2c2e:	d1 f7       	brne	.-12     	; 0x2c24 <__pack_f+0x164>
    2c30:	05 c0       	rjmp	.+10     	; 0x2c3c <__pack_f+0x17c>
    2c32:	ee 24       	eor	r14, r14
    2c34:	ff 24       	eor	r15, r15
    2c36:	87 01       	movw	r16, r14
    2c38:	ef ef       	ldi	r30, 0xFF	; 255
    2c3a:	f0 e0       	ldi	r31, 0x00	; 0
    2c3c:	6e 2f       	mov	r22, r30
    2c3e:	67 95       	ror	r22
    2c40:	66 27       	eor	r22, r22
    2c42:	67 95       	ror	r22
    2c44:	90 2f       	mov	r25, r16
    2c46:	9f 77       	andi	r25, 0x7F	; 127
    2c48:	d7 94       	ror	r13
    2c4a:	dd 24       	eor	r13, r13
    2c4c:	d7 94       	ror	r13
    2c4e:	8e 2f       	mov	r24, r30
    2c50:	86 95       	lsr	r24
    2c52:	49 2f       	mov	r20, r25
    2c54:	46 2b       	or	r20, r22
    2c56:	58 2f       	mov	r21, r24
    2c58:	5d 29       	or	r21, r13
    2c5a:	b7 01       	movw	r22, r14
    2c5c:	ca 01       	movw	r24, r20
    2c5e:	1f 91       	pop	r17
    2c60:	0f 91       	pop	r16
    2c62:	ff 90       	pop	r15
    2c64:	ef 90       	pop	r14
    2c66:	df 90       	pop	r13
    2c68:	08 95       	ret

00002c6a <__unpack_f>:
    2c6a:	fc 01       	movw	r30, r24
    2c6c:	db 01       	movw	r26, r22
    2c6e:	40 81       	ld	r20, Z
    2c70:	51 81       	ldd	r21, Z+1	; 0x01
    2c72:	22 81       	ldd	r18, Z+2	; 0x02
    2c74:	62 2f       	mov	r22, r18
    2c76:	6f 77       	andi	r22, 0x7F	; 127
    2c78:	70 e0       	ldi	r23, 0x00	; 0
    2c7a:	22 1f       	adc	r18, r18
    2c7c:	22 27       	eor	r18, r18
    2c7e:	22 1f       	adc	r18, r18
    2c80:	93 81       	ldd	r25, Z+3	; 0x03
    2c82:	89 2f       	mov	r24, r25
    2c84:	88 0f       	add	r24, r24
    2c86:	82 2b       	or	r24, r18
    2c88:	28 2f       	mov	r18, r24
    2c8a:	30 e0       	ldi	r19, 0x00	; 0
    2c8c:	99 1f       	adc	r25, r25
    2c8e:	99 27       	eor	r25, r25
    2c90:	99 1f       	adc	r25, r25
    2c92:	11 96       	adiw	r26, 0x01	; 1
    2c94:	9c 93       	st	X, r25
    2c96:	11 97       	sbiw	r26, 0x01	; 1
    2c98:	21 15       	cp	r18, r1
    2c9a:	31 05       	cpc	r19, r1
    2c9c:	a9 f5       	brne	.+106    	; 0x2d08 <__unpack_f+0x9e>
    2c9e:	41 15       	cp	r20, r1
    2ca0:	51 05       	cpc	r21, r1
    2ca2:	61 05       	cpc	r22, r1
    2ca4:	71 05       	cpc	r23, r1
    2ca6:	11 f4       	brne	.+4      	; 0x2cac <__unpack_f+0x42>
    2ca8:	82 e0       	ldi	r24, 0x02	; 2
    2caa:	37 c0       	rjmp	.+110    	; 0x2d1a <__unpack_f+0xb0>
    2cac:	82 e8       	ldi	r24, 0x82	; 130
    2cae:	9f ef       	ldi	r25, 0xFF	; 255
    2cb0:	13 96       	adiw	r26, 0x03	; 3
    2cb2:	9c 93       	st	X, r25
    2cb4:	8e 93       	st	-X, r24
    2cb6:	12 97       	sbiw	r26, 0x02	; 2
    2cb8:	9a 01       	movw	r18, r20
    2cba:	ab 01       	movw	r20, r22
    2cbc:	67 e0       	ldi	r22, 0x07	; 7
    2cbe:	22 0f       	add	r18, r18
    2cc0:	33 1f       	adc	r19, r19
    2cc2:	44 1f       	adc	r20, r20
    2cc4:	55 1f       	adc	r21, r21
    2cc6:	6a 95       	dec	r22
    2cc8:	d1 f7       	brne	.-12     	; 0x2cbe <__unpack_f+0x54>
    2cca:	83 e0       	ldi	r24, 0x03	; 3
    2ccc:	8c 93       	st	X, r24
    2cce:	0d c0       	rjmp	.+26     	; 0x2cea <__unpack_f+0x80>
    2cd0:	22 0f       	add	r18, r18
    2cd2:	33 1f       	adc	r19, r19
    2cd4:	44 1f       	adc	r20, r20
    2cd6:	55 1f       	adc	r21, r21
    2cd8:	12 96       	adiw	r26, 0x02	; 2
    2cda:	8d 91       	ld	r24, X+
    2cdc:	9c 91       	ld	r25, X
    2cde:	13 97       	sbiw	r26, 0x03	; 3
    2ce0:	01 97       	sbiw	r24, 0x01	; 1
    2ce2:	13 96       	adiw	r26, 0x03	; 3
    2ce4:	9c 93       	st	X, r25
    2ce6:	8e 93       	st	-X, r24
    2ce8:	12 97       	sbiw	r26, 0x02	; 2
    2cea:	20 30       	cpi	r18, 0x00	; 0
    2cec:	80 e0       	ldi	r24, 0x00	; 0
    2cee:	38 07       	cpc	r19, r24
    2cf0:	80 e0       	ldi	r24, 0x00	; 0
    2cf2:	48 07       	cpc	r20, r24
    2cf4:	80 e4       	ldi	r24, 0x40	; 64
    2cf6:	58 07       	cpc	r21, r24
    2cf8:	58 f3       	brcs	.-42     	; 0x2cd0 <__unpack_f+0x66>
    2cfa:	14 96       	adiw	r26, 0x04	; 4
    2cfc:	2d 93       	st	X+, r18
    2cfe:	3d 93       	st	X+, r19
    2d00:	4d 93       	st	X+, r20
    2d02:	5c 93       	st	X, r21
    2d04:	17 97       	sbiw	r26, 0x07	; 7
    2d06:	08 95       	ret
    2d08:	2f 3f       	cpi	r18, 0xFF	; 255
    2d0a:	31 05       	cpc	r19, r1
    2d0c:	79 f4       	brne	.+30     	; 0x2d2c <__unpack_f+0xc2>
    2d0e:	41 15       	cp	r20, r1
    2d10:	51 05       	cpc	r21, r1
    2d12:	61 05       	cpc	r22, r1
    2d14:	71 05       	cpc	r23, r1
    2d16:	19 f4       	brne	.+6      	; 0x2d1e <__unpack_f+0xb4>
    2d18:	84 e0       	ldi	r24, 0x04	; 4
    2d1a:	8c 93       	st	X, r24
    2d1c:	08 95       	ret
    2d1e:	64 ff       	sbrs	r22, 4
    2d20:	03 c0       	rjmp	.+6      	; 0x2d28 <__unpack_f+0xbe>
    2d22:	81 e0       	ldi	r24, 0x01	; 1
    2d24:	8c 93       	st	X, r24
    2d26:	12 c0       	rjmp	.+36     	; 0x2d4c <__unpack_f+0xe2>
    2d28:	1c 92       	st	X, r1
    2d2a:	10 c0       	rjmp	.+32     	; 0x2d4c <__unpack_f+0xe2>
    2d2c:	2f 57       	subi	r18, 0x7F	; 127
    2d2e:	30 40       	sbci	r19, 0x00	; 0
    2d30:	13 96       	adiw	r26, 0x03	; 3
    2d32:	3c 93       	st	X, r19
    2d34:	2e 93       	st	-X, r18
    2d36:	12 97       	sbiw	r26, 0x02	; 2
    2d38:	83 e0       	ldi	r24, 0x03	; 3
    2d3a:	8c 93       	st	X, r24
    2d3c:	87 e0       	ldi	r24, 0x07	; 7
    2d3e:	44 0f       	add	r20, r20
    2d40:	55 1f       	adc	r21, r21
    2d42:	66 1f       	adc	r22, r22
    2d44:	77 1f       	adc	r23, r23
    2d46:	8a 95       	dec	r24
    2d48:	d1 f7       	brne	.-12     	; 0x2d3e <__unpack_f+0xd4>
    2d4a:	70 64       	ori	r23, 0x40	; 64
    2d4c:	14 96       	adiw	r26, 0x04	; 4
    2d4e:	4d 93       	st	X+, r20
    2d50:	5d 93       	st	X+, r21
    2d52:	6d 93       	st	X+, r22
    2d54:	7c 93       	st	X, r23
    2d56:	17 97       	sbiw	r26, 0x07	; 7
    2d58:	08 95       	ret

00002d5a <__fpcmp_parts_f>:
    2d5a:	1f 93       	push	r17
    2d5c:	dc 01       	movw	r26, r24
    2d5e:	fb 01       	movw	r30, r22
    2d60:	9c 91       	ld	r25, X
    2d62:	92 30       	cpi	r25, 0x02	; 2
    2d64:	08 f4       	brcc	.+2      	; 0x2d68 <__fpcmp_parts_f+0xe>
    2d66:	47 c0       	rjmp	.+142    	; 0x2df6 <__fpcmp_parts_f+0x9c>
    2d68:	80 81       	ld	r24, Z
    2d6a:	82 30       	cpi	r24, 0x02	; 2
    2d6c:	08 f4       	brcc	.+2      	; 0x2d70 <__fpcmp_parts_f+0x16>
    2d6e:	43 c0       	rjmp	.+134    	; 0x2df6 <__fpcmp_parts_f+0x9c>
    2d70:	94 30       	cpi	r25, 0x04	; 4
    2d72:	51 f4       	brne	.+20     	; 0x2d88 <__fpcmp_parts_f+0x2e>
    2d74:	11 96       	adiw	r26, 0x01	; 1
    2d76:	1c 91       	ld	r17, X
    2d78:	84 30       	cpi	r24, 0x04	; 4
    2d7a:	99 f5       	brne	.+102    	; 0x2de2 <__fpcmp_parts_f+0x88>
    2d7c:	81 81       	ldd	r24, Z+1	; 0x01
    2d7e:	68 2f       	mov	r22, r24
    2d80:	70 e0       	ldi	r23, 0x00	; 0
    2d82:	61 1b       	sub	r22, r17
    2d84:	71 09       	sbc	r23, r1
    2d86:	3f c0       	rjmp	.+126    	; 0x2e06 <__fpcmp_parts_f+0xac>
    2d88:	84 30       	cpi	r24, 0x04	; 4
    2d8a:	21 f0       	breq	.+8      	; 0x2d94 <__fpcmp_parts_f+0x3a>
    2d8c:	92 30       	cpi	r25, 0x02	; 2
    2d8e:	31 f4       	brne	.+12     	; 0x2d9c <__fpcmp_parts_f+0x42>
    2d90:	82 30       	cpi	r24, 0x02	; 2
    2d92:	b9 f1       	breq	.+110    	; 0x2e02 <__fpcmp_parts_f+0xa8>
    2d94:	81 81       	ldd	r24, Z+1	; 0x01
    2d96:	88 23       	and	r24, r24
    2d98:	89 f1       	breq	.+98     	; 0x2dfc <__fpcmp_parts_f+0xa2>
    2d9a:	2d c0       	rjmp	.+90     	; 0x2df6 <__fpcmp_parts_f+0x9c>
    2d9c:	11 96       	adiw	r26, 0x01	; 1
    2d9e:	1c 91       	ld	r17, X
    2da0:	11 97       	sbiw	r26, 0x01	; 1
    2da2:	82 30       	cpi	r24, 0x02	; 2
    2da4:	f1 f0       	breq	.+60     	; 0x2de2 <__fpcmp_parts_f+0x88>
    2da6:	81 81       	ldd	r24, Z+1	; 0x01
    2da8:	18 17       	cp	r17, r24
    2daa:	d9 f4       	brne	.+54     	; 0x2de2 <__fpcmp_parts_f+0x88>
    2dac:	12 96       	adiw	r26, 0x02	; 2
    2dae:	2d 91       	ld	r18, X+
    2db0:	3c 91       	ld	r19, X
    2db2:	13 97       	sbiw	r26, 0x03	; 3
    2db4:	82 81       	ldd	r24, Z+2	; 0x02
    2db6:	93 81       	ldd	r25, Z+3	; 0x03
    2db8:	82 17       	cp	r24, r18
    2dba:	93 07       	cpc	r25, r19
    2dbc:	94 f0       	brlt	.+36     	; 0x2de2 <__fpcmp_parts_f+0x88>
    2dbe:	28 17       	cp	r18, r24
    2dc0:	39 07       	cpc	r19, r25
    2dc2:	bc f0       	brlt	.+46     	; 0x2df2 <__fpcmp_parts_f+0x98>
    2dc4:	14 96       	adiw	r26, 0x04	; 4
    2dc6:	8d 91       	ld	r24, X+
    2dc8:	9d 91       	ld	r25, X+
    2dca:	0d 90       	ld	r0, X+
    2dcc:	bc 91       	ld	r27, X
    2dce:	a0 2d       	mov	r26, r0
    2dd0:	24 81       	ldd	r18, Z+4	; 0x04
    2dd2:	35 81       	ldd	r19, Z+5	; 0x05
    2dd4:	46 81       	ldd	r20, Z+6	; 0x06
    2dd6:	57 81       	ldd	r21, Z+7	; 0x07
    2dd8:	28 17       	cp	r18, r24
    2dda:	39 07       	cpc	r19, r25
    2ddc:	4a 07       	cpc	r20, r26
    2dde:	5b 07       	cpc	r21, r27
    2de0:	18 f4       	brcc	.+6      	; 0x2de8 <__fpcmp_parts_f+0x8e>
    2de2:	11 23       	and	r17, r17
    2de4:	41 f0       	breq	.+16     	; 0x2df6 <__fpcmp_parts_f+0x9c>
    2de6:	0a c0       	rjmp	.+20     	; 0x2dfc <__fpcmp_parts_f+0xa2>
    2de8:	82 17       	cp	r24, r18
    2dea:	93 07       	cpc	r25, r19
    2dec:	a4 07       	cpc	r26, r20
    2dee:	b5 07       	cpc	r27, r21
    2df0:	40 f4       	brcc	.+16     	; 0x2e02 <__fpcmp_parts_f+0xa8>
    2df2:	11 23       	and	r17, r17
    2df4:	19 f0       	breq	.+6      	; 0x2dfc <__fpcmp_parts_f+0xa2>
    2df6:	61 e0       	ldi	r22, 0x01	; 1
    2df8:	70 e0       	ldi	r23, 0x00	; 0
    2dfa:	05 c0       	rjmp	.+10     	; 0x2e06 <__fpcmp_parts_f+0xac>
    2dfc:	6f ef       	ldi	r22, 0xFF	; 255
    2dfe:	7f ef       	ldi	r23, 0xFF	; 255
    2e00:	02 c0       	rjmp	.+4      	; 0x2e06 <__fpcmp_parts_f+0xac>
    2e02:	60 e0       	ldi	r22, 0x00	; 0
    2e04:	70 e0       	ldi	r23, 0x00	; 0
    2e06:	cb 01       	movw	r24, r22
    2e08:	1f 91       	pop	r17
    2e0a:	08 95       	ret

00002e0c <DIO_enuInit>:
#include "DIO_priv.h"
#include "DIO_config.h"
#include "errorState.h"


ES_t DIO_enuInit(void){
    2e0c:	df 93       	push	r29
    2e0e:	cf 93       	push	r28
    2e10:	0f 92       	push	r0
    2e12:	cd b7       	in	r28, 0x3d	; 61
    2e14:	de b7       	in	r29, 0x3e	; 62

	ES_t Local_enuErrorState = ES_NOK;
    2e16:	19 82       	std	Y+1, r1	; 0x01
	DDRA = CONC(PA_PIN7_DIR , PA_PIN6_DIR , PA_PIN5_DIR , PA_PIN4_DIR , PA_PIN3_DIR , PA_PIN2_DIR, PA_PIN1_DIR, PA_PIN0_DIR);
    2e18:	ea e3       	ldi	r30, 0x3A	; 58
    2e1a:	f0 e0       	ldi	r31, 0x00	; 0
    2e1c:	8f ef       	ldi	r24, 0xFF	; 255
    2e1e:	80 83       	st	Z, r24
	DDRB = CONC(PB_PIN7_DIR , PB_PIN6_DIR , PB_PIN5_DIR , PB_PIN4_DIR , PB_PIN3_DIR , PB_PIN2_DIR, PB_PIN1_DIR, PB_PIN0_DIR);
    2e20:	e7 e3       	ldi	r30, 0x37	; 55
    2e22:	f0 e0       	ldi	r31, 0x00	; 0
    2e24:	87 e0       	ldi	r24, 0x07	; 7
    2e26:	80 83       	st	Z, r24
	DDRC = CONC(PC_PIN7_DIR , PC_PIN6_DIR , PC_PIN5_DIR , PC_PIN4_DIR , PC_PIN3_DIR , PC_PIN2_DIR, PC_PIN1_DIR, PC_PIN0_DIR);
    2e28:	e4 e3       	ldi	r30, 0x34	; 52
    2e2a:	f0 e0       	ldi	r31, 0x00	; 0
    2e2c:	87 e9       	ldi	r24, 0x97	; 151
    2e2e:	80 83       	st	Z, r24
	DDRD = CONC(PD_PIN7_DIR , PD_PIN6_DIR , PD_PIN5_DIR , PD_PIN4_DIR , PD_PIN3_DIR , PD_PIN2_DIR, PD_PIN1_DIR, PD_PIN0_DIR);
    2e30:	e1 e3       	ldi	r30, 0x31	; 49
    2e32:	f0 e0       	ldi	r31, 0x00	; 0
    2e34:	8f e9       	ldi	r24, 0x9F	; 159
    2e36:	80 83       	st	Z, r24

	PORTA = CONC(PA_PIN7_VAL , PA_PIN6_VAL , PA_PIN5_VAL , PA_PIN4_VAL , PA_PIN3_VAL , PA_PIN2_VAL, PA_PIN1_VAL, PA_PIN0_VAL);
    2e38:	eb e3       	ldi	r30, 0x3B	; 59
    2e3a:	f0 e0       	ldi	r31, 0x00	; 0
    2e3c:	80 ef       	ldi	r24, 0xF0	; 240
    2e3e:	80 83       	st	Z, r24
	PORTB = CONC(PB_PIN7_VAL , PB_PIN6_VAL , PB_PIN5_VAL , PB_PIN4_VAL , PB_PIN3_VAL , PB_PIN2_VAL, PB_PIN1_VAL, PB_PIN0_VAL);
    2e40:	e8 e3       	ldi	r30, 0x38	; 56
    2e42:	f0 e0       	ldi	r31, 0x00	; 0
    2e44:	8a ef       	ldi	r24, 0xFA	; 250
    2e46:	80 83       	st	Z, r24
	PORTC = CONC(PC_PIN7_VAL , PC_PIN6_VAL , PC_PIN5_VAL , PC_PIN4_VAL , PC_PIN3_VAL , PC_PIN2_VAL, PC_PIN1_VAL, PC_PIN0_VAL);
    2e48:	e5 e3       	ldi	r30, 0x35	; 53
    2e4a:	f0 e0       	ldi	r31, 0x00	; 0
    2e4c:	89 e5       	ldi	r24, 0x59	; 89
    2e4e:	80 83       	st	Z, r24
	PORTD = CONC(PD_PIN7_VAL , PD_PIN6_VAL , PD_PIN5_VAL , PD_PIN4_VAL , PD_PIN3_VAL , PD_PIN2_VAL, PD_PIN1_VAL, PD_PIN0_VAL);
    2e50:	e2 e3       	ldi	r30, 0x32	; 50
    2e52:	f0 e0       	ldi	r31, 0x00	; 0
    2e54:	82 e5       	ldi	r24, 0x52	; 82
    2e56:	80 83       	st	Z, r24

	Local_enuErrorState = ES_OK;
    2e58:	81 e0       	ldi	r24, 0x01	; 1
    2e5a:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
    2e5c:	89 81       	ldd	r24, Y+1	; 0x01
}
    2e5e:	0f 90       	pop	r0
    2e60:	cf 91       	pop	r28
    2e62:	df 91       	pop	r29
    2e64:	08 95       	ret

00002e66 <DIO_enuSetPortDir>:


ES_t DIO_enuSetPortDir (u8 Copy_u8PortID , u8 Copy_u8Val ){
    2e66:	df 93       	push	r29
    2e68:	cf 93       	push	r28
    2e6a:	00 d0       	rcall	.+0      	; 0x2e6c <DIO_enuSetPortDir+0x6>
    2e6c:	00 d0       	rcall	.+0      	; 0x2e6e <DIO_enuSetPortDir+0x8>
    2e6e:	0f 92       	push	r0
    2e70:	cd b7       	in	r28, 0x3d	; 61
    2e72:	de b7       	in	r29, 0x3e	; 62
    2e74:	8a 83       	std	Y+2, r24	; 0x02
    2e76:	6b 83       	std	Y+3, r22	; 0x03

	ES_t Local_enuErrorState = ES_NOK;
    2e78:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8PortID <= DIO_PORTD)
    2e7a:	8a 81       	ldd	r24, Y+2	; 0x02
    2e7c:	84 30       	cpi	r24, 0x04	; 4
    2e7e:	a8 f5       	brcc	.+106    	; 0x2eea <DIO_enuSetPortDir+0x84>
	{
		switch(Copy_u8PortID)
    2e80:	8a 81       	ldd	r24, Y+2	; 0x02
    2e82:	28 2f       	mov	r18, r24
    2e84:	30 e0       	ldi	r19, 0x00	; 0
    2e86:	3d 83       	std	Y+5, r19	; 0x05
    2e88:	2c 83       	std	Y+4, r18	; 0x04
    2e8a:	8c 81       	ldd	r24, Y+4	; 0x04
    2e8c:	9d 81       	ldd	r25, Y+5	; 0x05
    2e8e:	81 30       	cpi	r24, 0x01	; 1
    2e90:	91 05       	cpc	r25, r1
    2e92:	d1 f0       	breq	.+52     	; 0x2ec8 <DIO_enuSetPortDir+0x62>
    2e94:	2c 81       	ldd	r18, Y+4	; 0x04
    2e96:	3d 81       	ldd	r19, Y+5	; 0x05
    2e98:	22 30       	cpi	r18, 0x02	; 2
    2e9a:	31 05       	cpc	r19, r1
    2e9c:	2c f4       	brge	.+10     	; 0x2ea8 <DIO_enuSetPortDir+0x42>
    2e9e:	8c 81       	ldd	r24, Y+4	; 0x04
    2ea0:	9d 81       	ldd	r25, Y+5	; 0x05
    2ea2:	00 97       	sbiw	r24, 0x00	; 0
    2ea4:	61 f0       	breq	.+24     	; 0x2ebe <DIO_enuSetPortDir+0x58>
    2ea6:	1e c0       	rjmp	.+60     	; 0x2ee4 <DIO_enuSetPortDir+0x7e>
    2ea8:	2c 81       	ldd	r18, Y+4	; 0x04
    2eaa:	3d 81       	ldd	r19, Y+5	; 0x05
    2eac:	22 30       	cpi	r18, 0x02	; 2
    2eae:	31 05       	cpc	r19, r1
    2eb0:	81 f0       	breq	.+32     	; 0x2ed2 <DIO_enuSetPortDir+0x6c>
    2eb2:	8c 81       	ldd	r24, Y+4	; 0x04
    2eb4:	9d 81       	ldd	r25, Y+5	; 0x05
    2eb6:	83 30       	cpi	r24, 0x03	; 3
    2eb8:	91 05       	cpc	r25, r1
    2eba:	81 f0       	breq	.+32     	; 0x2edc <DIO_enuSetPortDir+0x76>
    2ebc:	13 c0       	rjmp	.+38     	; 0x2ee4 <DIO_enuSetPortDir+0x7e>
		{
		case DIO_PORTA :
			DDRA = Copy_u8Val;
    2ebe:	ea e3       	ldi	r30, 0x3A	; 58
    2ec0:	f0 e0       	ldi	r31, 0x00	; 0
    2ec2:	8b 81       	ldd	r24, Y+3	; 0x03
    2ec4:	80 83       	st	Z, r24
    2ec6:	0e c0       	rjmp	.+28     	; 0x2ee4 <DIO_enuSetPortDir+0x7e>
			break;
		case DIO_PORTB :
			DDRB = Copy_u8Val;
    2ec8:	e7 e3       	ldi	r30, 0x37	; 55
    2eca:	f0 e0       	ldi	r31, 0x00	; 0
    2ecc:	8b 81       	ldd	r24, Y+3	; 0x03
    2ece:	80 83       	st	Z, r24
    2ed0:	09 c0       	rjmp	.+18     	; 0x2ee4 <DIO_enuSetPortDir+0x7e>
			break;
		case DIO_PORTC :
			DDRC = Copy_u8Val;
    2ed2:	e4 e3       	ldi	r30, 0x34	; 52
    2ed4:	f0 e0       	ldi	r31, 0x00	; 0
    2ed6:	8b 81       	ldd	r24, Y+3	; 0x03
    2ed8:	80 83       	st	Z, r24
    2eda:	04 c0       	rjmp	.+8      	; 0x2ee4 <DIO_enuSetPortDir+0x7e>
			break;
		case DIO_PORTD :
			DDRD = Copy_u8Val;
    2edc:	e1 e3       	ldi	r30, 0x31	; 49
    2ede:	f0 e0       	ldi	r31, 0x00	; 0
    2ee0:	8b 81       	ldd	r24, Y+3	; 0x03
    2ee2:	80 83       	st	Z, r24
			break;
		}
		Local_enuErrorState = ES_OK;
    2ee4:	81 e0       	ldi	r24, 0x01	; 1
    2ee6:	89 83       	std	Y+1, r24	; 0x01
    2ee8:	02 c0       	rjmp	.+4      	; 0x2eee <DIO_enuSetPortDir+0x88>

	}
	else Local_enuErrorState = ES_OUT_OF_RANGE;
    2eea:	83 e0       	ldi	r24, 0x03	; 3
    2eec:	89 83       	std	Y+1, r24	; 0x01


	return Local_enuErrorState;
    2eee:	89 81       	ldd	r24, Y+1	; 0x01
}
    2ef0:	0f 90       	pop	r0
    2ef2:	0f 90       	pop	r0
    2ef4:	0f 90       	pop	r0
    2ef6:	0f 90       	pop	r0
    2ef8:	0f 90       	pop	r0
    2efa:	cf 91       	pop	r28
    2efc:	df 91       	pop	r29
    2efe:	08 95       	ret

00002f00 <DIO_enuSetPortVal>:


ES_t DIO_enuSetPortVal( u8 Copy_u8PortID , u8 Copy_u8Val ){
    2f00:	df 93       	push	r29
    2f02:	cf 93       	push	r28
    2f04:	00 d0       	rcall	.+0      	; 0x2f06 <DIO_enuSetPortVal+0x6>
    2f06:	00 d0       	rcall	.+0      	; 0x2f08 <DIO_enuSetPortVal+0x8>
    2f08:	0f 92       	push	r0
    2f0a:	cd b7       	in	r28, 0x3d	; 61
    2f0c:	de b7       	in	r29, 0x3e	; 62
    2f0e:	8a 83       	std	Y+2, r24	; 0x02
    2f10:	6b 83       	std	Y+3, r22	; 0x03

	ES_t Local_enuErrorState = ES_NOK;
    2f12:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8PortID <= DIO_PORTD)
    2f14:	8a 81       	ldd	r24, Y+2	; 0x02
    2f16:	84 30       	cpi	r24, 0x04	; 4
    2f18:	a8 f5       	brcc	.+106    	; 0x2f84 <DIO_enuSetPortVal+0x84>
	{
		switch(Copy_u8PortID)
    2f1a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f1c:	28 2f       	mov	r18, r24
    2f1e:	30 e0       	ldi	r19, 0x00	; 0
    2f20:	3d 83       	std	Y+5, r19	; 0x05
    2f22:	2c 83       	std	Y+4, r18	; 0x04
    2f24:	8c 81       	ldd	r24, Y+4	; 0x04
    2f26:	9d 81       	ldd	r25, Y+5	; 0x05
    2f28:	81 30       	cpi	r24, 0x01	; 1
    2f2a:	91 05       	cpc	r25, r1
    2f2c:	d1 f0       	breq	.+52     	; 0x2f62 <DIO_enuSetPortVal+0x62>
    2f2e:	2c 81       	ldd	r18, Y+4	; 0x04
    2f30:	3d 81       	ldd	r19, Y+5	; 0x05
    2f32:	22 30       	cpi	r18, 0x02	; 2
    2f34:	31 05       	cpc	r19, r1
    2f36:	2c f4       	brge	.+10     	; 0x2f42 <DIO_enuSetPortVal+0x42>
    2f38:	8c 81       	ldd	r24, Y+4	; 0x04
    2f3a:	9d 81       	ldd	r25, Y+5	; 0x05
    2f3c:	00 97       	sbiw	r24, 0x00	; 0
    2f3e:	61 f0       	breq	.+24     	; 0x2f58 <DIO_enuSetPortVal+0x58>
    2f40:	1e c0       	rjmp	.+60     	; 0x2f7e <DIO_enuSetPortVal+0x7e>
    2f42:	2c 81       	ldd	r18, Y+4	; 0x04
    2f44:	3d 81       	ldd	r19, Y+5	; 0x05
    2f46:	22 30       	cpi	r18, 0x02	; 2
    2f48:	31 05       	cpc	r19, r1
    2f4a:	81 f0       	breq	.+32     	; 0x2f6c <DIO_enuSetPortVal+0x6c>
    2f4c:	8c 81       	ldd	r24, Y+4	; 0x04
    2f4e:	9d 81       	ldd	r25, Y+5	; 0x05
    2f50:	83 30       	cpi	r24, 0x03	; 3
    2f52:	91 05       	cpc	r25, r1
    2f54:	81 f0       	breq	.+32     	; 0x2f76 <DIO_enuSetPortVal+0x76>
    2f56:	13 c0       	rjmp	.+38     	; 0x2f7e <DIO_enuSetPortVal+0x7e>
		{
		case DIO_PORTA :
			PORTA = Copy_u8Val;
    2f58:	eb e3       	ldi	r30, 0x3B	; 59
    2f5a:	f0 e0       	ldi	r31, 0x00	; 0
    2f5c:	8b 81       	ldd	r24, Y+3	; 0x03
    2f5e:	80 83       	st	Z, r24
    2f60:	0e c0       	rjmp	.+28     	; 0x2f7e <DIO_enuSetPortVal+0x7e>
			break;
		case DIO_PORTB :
			PORTB = Copy_u8Val;
    2f62:	e8 e3       	ldi	r30, 0x38	; 56
    2f64:	f0 e0       	ldi	r31, 0x00	; 0
    2f66:	8b 81       	ldd	r24, Y+3	; 0x03
    2f68:	80 83       	st	Z, r24
    2f6a:	09 c0       	rjmp	.+18     	; 0x2f7e <DIO_enuSetPortVal+0x7e>
			break;
		case DIO_PORTC :
			PORTC = Copy_u8Val;
    2f6c:	e5 e3       	ldi	r30, 0x35	; 53
    2f6e:	f0 e0       	ldi	r31, 0x00	; 0
    2f70:	8b 81       	ldd	r24, Y+3	; 0x03
    2f72:	80 83       	st	Z, r24
    2f74:	04 c0       	rjmp	.+8      	; 0x2f7e <DIO_enuSetPortVal+0x7e>
			break;
		case DIO_PORTD :
			PORTD = Copy_u8Val;
    2f76:	e2 e3       	ldi	r30, 0x32	; 50
    2f78:	f0 e0       	ldi	r31, 0x00	; 0
    2f7a:	8b 81       	ldd	r24, Y+3	; 0x03
    2f7c:	80 83       	st	Z, r24
			break;
		}

		Local_enuErrorState = ES_OK;
    2f7e:	81 e0       	ldi	r24, 0x01	; 1
    2f80:	89 83       	std	Y+1, r24	; 0x01
    2f82:	02 c0       	rjmp	.+4      	; 0x2f88 <DIO_enuSetPortVal+0x88>
	}
	else Local_enuErrorState = ES_OUT_OF_RANGE;
    2f84:	83 e0       	ldi	r24, 0x03	; 3
    2f86:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
    2f88:	89 81       	ldd	r24, Y+1	; 0x01
}
    2f8a:	0f 90       	pop	r0
    2f8c:	0f 90       	pop	r0
    2f8e:	0f 90       	pop	r0
    2f90:	0f 90       	pop	r0
    2f92:	0f 90       	pop	r0
    2f94:	cf 91       	pop	r28
    2f96:	df 91       	pop	r29
    2f98:	08 95       	ret

00002f9a <DIO_enuTogglePort>:


ES_t DIO_enuTogglePort( u8 Copy_u8PortID ){
    2f9a:	df 93       	push	r29
    2f9c:	cf 93       	push	r28
    2f9e:	00 d0       	rcall	.+0      	; 0x2fa0 <DIO_enuTogglePort+0x6>
    2fa0:	00 d0       	rcall	.+0      	; 0x2fa2 <DIO_enuTogglePort+0x8>
    2fa2:	cd b7       	in	r28, 0x3d	; 61
    2fa4:	de b7       	in	r29, 0x3e	; 62
    2fa6:	8a 83       	std	Y+2, r24	; 0x02

	ES_t Local_enuErrorState = ES_NOK;
    2fa8:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8PortID <= DIO_PORTD)
    2faa:	8a 81       	ldd	r24, Y+2	; 0x02
    2fac:	84 30       	cpi	r24, 0x04	; 4
    2fae:	08 f0       	brcs	.+2      	; 0x2fb2 <DIO_enuTogglePort+0x18>
    2fb0:	41 c0       	rjmp	.+130    	; 0x3034 <DIO_enuTogglePort+0x9a>
	{
		switch(Copy_u8PortID)
    2fb2:	8a 81       	ldd	r24, Y+2	; 0x02
    2fb4:	28 2f       	mov	r18, r24
    2fb6:	30 e0       	ldi	r19, 0x00	; 0
    2fb8:	3c 83       	std	Y+4, r19	; 0x04
    2fba:	2b 83       	std	Y+3, r18	; 0x03
    2fbc:	8b 81       	ldd	r24, Y+3	; 0x03
    2fbe:	9c 81       	ldd	r25, Y+4	; 0x04
    2fc0:	81 30       	cpi	r24, 0x01	; 1
    2fc2:	91 05       	cpc	r25, r1
    2fc4:	e9 f0       	breq	.+58     	; 0x3000 <DIO_enuTogglePort+0x66>
    2fc6:	2b 81       	ldd	r18, Y+3	; 0x03
    2fc8:	3c 81       	ldd	r19, Y+4	; 0x04
    2fca:	22 30       	cpi	r18, 0x02	; 2
    2fcc:	31 05       	cpc	r19, r1
    2fce:	2c f4       	brge	.+10     	; 0x2fda <DIO_enuTogglePort+0x40>
    2fd0:	8b 81       	ldd	r24, Y+3	; 0x03
    2fd2:	9c 81       	ldd	r25, Y+4	; 0x04
    2fd4:	00 97       	sbiw	r24, 0x00	; 0
    2fd6:	61 f0       	breq	.+24     	; 0x2ff0 <DIO_enuTogglePort+0x56>
    2fd8:	2a c0       	rjmp	.+84     	; 0x302e <DIO_enuTogglePort+0x94>
    2fda:	2b 81       	ldd	r18, Y+3	; 0x03
    2fdc:	3c 81       	ldd	r19, Y+4	; 0x04
    2fde:	22 30       	cpi	r18, 0x02	; 2
    2fe0:	31 05       	cpc	r19, r1
    2fe2:	b1 f0       	breq	.+44     	; 0x3010 <DIO_enuTogglePort+0x76>
    2fe4:	8b 81       	ldd	r24, Y+3	; 0x03
    2fe6:	9c 81       	ldd	r25, Y+4	; 0x04
    2fe8:	83 30       	cpi	r24, 0x03	; 3
    2fea:	91 05       	cpc	r25, r1
    2fec:	c9 f0       	breq	.+50     	; 0x3020 <DIO_enuTogglePort+0x86>
    2fee:	1f c0       	rjmp	.+62     	; 0x302e <DIO_enuTogglePort+0x94>
		{
		case DIO_PORTA :
			PORTA = ~PORTA;
    2ff0:	ab e3       	ldi	r26, 0x3B	; 59
    2ff2:	b0 e0       	ldi	r27, 0x00	; 0
    2ff4:	eb e3       	ldi	r30, 0x3B	; 59
    2ff6:	f0 e0       	ldi	r31, 0x00	; 0
    2ff8:	80 81       	ld	r24, Z
    2ffa:	80 95       	com	r24
    2ffc:	8c 93       	st	X, r24
    2ffe:	17 c0       	rjmp	.+46     	; 0x302e <DIO_enuTogglePort+0x94>
			break;
		case DIO_PORTB :
			PORTB = ~PORTB;
    3000:	a8 e3       	ldi	r26, 0x38	; 56
    3002:	b0 e0       	ldi	r27, 0x00	; 0
    3004:	e8 e3       	ldi	r30, 0x38	; 56
    3006:	f0 e0       	ldi	r31, 0x00	; 0
    3008:	80 81       	ld	r24, Z
    300a:	80 95       	com	r24
    300c:	8c 93       	st	X, r24
    300e:	0f c0       	rjmp	.+30     	; 0x302e <DIO_enuTogglePort+0x94>
			break;
		case DIO_PORTC :
			PORTC = ~PORTC;
    3010:	a5 e3       	ldi	r26, 0x35	; 53
    3012:	b0 e0       	ldi	r27, 0x00	; 0
    3014:	e5 e3       	ldi	r30, 0x35	; 53
    3016:	f0 e0       	ldi	r31, 0x00	; 0
    3018:	80 81       	ld	r24, Z
    301a:	80 95       	com	r24
    301c:	8c 93       	st	X, r24
    301e:	07 c0       	rjmp	.+14     	; 0x302e <DIO_enuTogglePort+0x94>
			break;
		case DIO_PORTD :
			PORTD = ~PORTD;
    3020:	a2 e3       	ldi	r26, 0x32	; 50
    3022:	b0 e0       	ldi	r27, 0x00	; 0
    3024:	e2 e3       	ldi	r30, 0x32	; 50
    3026:	f0 e0       	ldi	r31, 0x00	; 0
    3028:	80 81       	ld	r24, Z
    302a:	80 95       	com	r24
    302c:	8c 93       	st	X, r24
			break;
		}

		Local_enuErrorState = ES_OK;
    302e:	81 e0       	ldi	r24, 0x01	; 1
    3030:	89 83       	std	Y+1, r24	; 0x01
    3032:	02 c0       	rjmp	.+4      	; 0x3038 <DIO_enuTogglePort+0x9e>
	}
	else Local_enuErrorState = ES_OUT_OF_RANGE;
    3034:	83 e0       	ldi	r24, 0x03	; 3
    3036:	89 83       	std	Y+1, r24	; 0x01


	return Local_enuErrorState;
    3038:	89 81       	ldd	r24, Y+1	; 0x01
}
    303a:	0f 90       	pop	r0
    303c:	0f 90       	pop	r0
    303e:	0f 90       	pop	r0
    3040:	0f 90       	pop	r0
    3042:	cf 91       	pop	r28
    3044:	df 91       	pop	r29
    3046:	08 95       	ret

00003048 <DIO_enuGetPortVal>:


ES_t DIO_enuGetPortVal( u8 Copy_u8PortID , u8* Copy_pu8Val ){
    3048:	df 93       	push	r29
    304a:	cf 93       	push	r28
    304c:	00 d0       	rcall	.+0      	; 0x304e <DIO_enuGetPortVal+0x6>
    304e:	00 d0       	rcall	.+0      	; 0x3050 <DIO_enuGetPortVal+0x8>
    3050:	00 d0       	rcall	.+0      	; 0x3052 <DIO_enuGetPortVal+0xa>
    3052:	cd b7       	in	r28, 0x3d	; 61
    3054:	de b7       	in	r29, 0x3e	; 62
    3056:	8a 83       	std	Y+2, r24	; 0x02
    3058:	7c 83       	std	Y+4, r23	; 0x04
    305a:	6b 83       	std	Y+3, r22	; 0x03

	ES_t Local_enuErrorState = ES_NOK;
    305c:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_pu8Val != NULL)
    305e:	8b 81       	ldd	r24, Y+3	; 0x03
    3060:	9c 81       	ldd	r25, Y+4	; 0x04
    3062:	00 97       	sbiw	r24, 0x00	; 0
    3064:	09 f4       	brne	.+2      	; 0x3068 <DIO_enuGetPortVal+0x20>
    3066:	43 c0       	rjmp	.+134    	; 0x30ee <DIO_enuGetPortVal+0xa6>
	{
		if(Copy_u8PortID <= DIO_PORTD)
    3068:	8a 81       	ldd	r24, Y+2	; 0x02
    306a:	84 30       	cpi	r24, 0x04	; 4
    306c:	e8 f5       	brcc	.+122    	; 0x30e8 <DIO_enuGetPortVal+0xa0>
		{
			switch(Copy_u8PortID)
    306e:	8a 81       	ldd	r24, Y+2	; 0x02
    3070:	28 2f       	mov	r18, r24
    3072:	30 e0       	ldi	r19, 0x00	; 0
    3074:	3e 83       	std	Y+6, r19	; 0x06
    3076:	2d 83       	std	Y+5, r18	; 0x05
    3078:	8d 81       	ldd	r24, Y+5	; 0x05
    307a:	9e 81       	ldd	r25, Y+6	; 0x06
    307c:	81 30       	cpi	r24, 0x01	; 1
    307e:	91 05       	cpc	r25, r1
    3080:	e1 f0       	breq	.+56     	; 0x30ba <DIO_enuGetPortVal+0x72>
    3082:	2d 81       	ldd	r18, Y+5	; 0x05
    3084:	3e 81       	ldd	r19, Y+6	; 0x06
    3086:	22 30       	cpi	r18, 0x02	; 2
    3088:	31 05       	cpc	r19, r1
    308a:	2c f4       	brge	.+10     	; 0x3096 <DIO_enuGetPortVal+0x4e>
    308c:	8d 81       	ldd	r24, Y+5	; 0x05
    308e:	9e 81       	ldd	r25, Y+6	; 0x06
    3090:	00 97       	sbiw	r24, 0x00	; 0
    3092:	61 f0       	breq	.+24     	; 0x30ac <DIO_enuGetPortVal+0x64>
    3094:	26 c0       	rjmp	.+76     	; 0x30e2 <DIO_enuGetPortVal+0x9a>
    3096:	2d 81       	ldd	r18, Y+5	; 0x05
    3098:	3e 81       	ldd	r19, Y+6	; 0x06
    309a:	22 30       	cpi	r18, 0x02	; 2
    309c:	31 05       	cpc	r19, r1
    309e:	a1 f0       	breq	.+40     	; 0x30c8 <DIO_enuGetPortVal+0x80>
    30a0:	8d 81       	ldd	r24, Y+5	; 0x05
    30a2:	9e 81       	ldd	r25, Y+6	; 0x06
    30a4:	83 30       	cpi	r24, 0x03	; 3
    30a6:	91 05       	cpc	r25, r1
    30a8:	b1 f0       	breq	.+44     	; 0x30d6 <DIO_enuGetPortVal+0x8e>
    30aa:	1b c0       	rjmp	.+54     	; 0x30e2 <DIO_enuGetPortVal+0x9a>
			{
			case DIO_PORTA :
				*Copy_pu8Val = PINA;
    30ac:	e9 e3       	ldi	r30, 0x39	; 57
    30ae:	f0 e0       	ldi	r31, 0x00	; 0
    30b0:	80 81       	ld	r24, Z
    30b2:	eb 81       	ldd	r30, Y+3	; 0x03
    30b4:	fc 81       	ldd	r31, Y+4	; 0x04
    30b6:	80 83       	st	Z, r24
    30b8:	14 c0       	rjmp	.+40     	; 0x30e2 <DIO_enuGetPortVal+0x9a>
				break;
			case DIO_PORTB :
				*Copy_pu8Val = PINB;
    30ba:	e6 e3       	ldi	r30, 0x36	; 54
    30bc:	f0 e0       	ldi	r31, 0x00	; 0
    30be:	80 81       	ld	r24, Z
    30c0:	eb 81       	ldd	r30, Y+3	; 0x03
    30c2:	fc 81       	ldd	r31, Y+4	; 0x04
    30c4:	80 83       	st	Z, r24
    30c6:	0d c0       	rjmp	.+26     	; 0x30e2 <DIO_enuGetPortVal+0x9a>
				break;
			case DIO_PORTC :
				*Copy_pu8Val = PINC;
    30c8:	e3 e3       	ldi	r30, 0x33	; 51
    30ca:	f0 e0       	ldi	r31, 0x00	; 0
    30cc:	80 81       	ld	r24, Z
    30ce:	eb 81       	ldd	r30, Y+3	; 0x03
    30d0:	fc 81       	ldd	r31, Y+4	; 0x04
    30d2:	80 83       	st	Z, r24
    30d4:	06 c0       	rjmp	.+12     	; 0x30e2 <DIO_enuGetPortVal+0x9a>
				break;
			case DIO_PORTD :
				*Copy_pu8Val = PIND;
    30d6:	e0 e3       	ldi	r30, 0x30	; 48
    30d8:	f0 e0       	ldi	r31, 0x00	; 0
    30da:	80 81       	ld	r24, Z
    30dc:	eb 81       	ldd	r30, Y+3	; 0x03
    30de:	fc 81       	ldd	r31, Y+4	; 0x04
    30e0:	80 83       	st	Z, r24
				break;
			}

			Local_enuErrorState = ES_OK;
    30e2:	81 e0       	ldi	r24, 0x01	; 1
    30e4:	89 83       	std	Y+1, r24	; 0x01
    30e6:	05 c0       	rjmp	.+10     	; 0x30f2 <DIO_enuGetPortVal+0xaa>
		}
		else Local_enuErrorState = ES_OUT_OF_RANGE;
    30e8:	83 e0       	ldi	r24, 0x03	; 3
    30ea:	89 83       	std	Y+1, r24	; 0x01
    30ec:	02 c0       	rjmp	.+4      	; 0x30f2 <DIO_enuGetPortVal+0xaa>
	}
	else Local_enuErrorState = ES_NULL_POINTER;
    30ee:	82 e0       	ldi	r24, 0x02	; 2
    30f0:	89 83       	std	Y+1, r24	; 0x01


	return Local_enuErrorState;
    30f2:	89 81       	ldd	r24, Y+1	; 0x01
}
    30f4:	26 96       	adiw	r28, 0x06	; 6
    30f6:	0f b6       	in	r0, 0x3f	; 63
    30f8:	f8 94       	cli
    30fa:	de bf       	out	0x3e, r29	; 62
    30fc:	0f be       	out	0x3f, r0	; 63
    30fe:	cd bf       	out	0x3d, r28	; 61
    3100:	cf 91       	pop	r28
    3102:	df 91       	pop	r29
    3104:	08 95       	ret

00003106 <DIO_enuSetPinDir>:



ES_t DIO_enuSetPinDir( u8 Copy_u8PortID , u8 Copy_u8PinID , u8 Copy_u8Val ){
    3106:	df 93       	push	r29
    3108:	cf 93       	push	r28
    310a:	00 d0       	rcall	.+0      	; 0x310c <DIO_enuSetPinDir+0x6>
    310c:	00 d0       	rcall	.+0      	; 0x310e <DIO_enuSetPinDir+0x8>
    310e:	00 d0       	rcall	.+0      	; 0x3110 <DIO_enuSetPinDir+0xa>
    3110:	cd b7       	in	r28, 0x3d	; 61
    3112:	de b7       	in	r29, 0x3e	; 62
    3114:	8a 83       	std	Y+2, r24	; 0x02
    3116:	6b 83       	std	Y+3, r22	; 0x03
    3118:	4c 83       	std	Y+4, r20	; 0x04

	ES_t Local_enuErrorState = ES_NOK;
    311a:	19 82       	std	Y+1, r1	; 0x01

	if( Copy_u8PortID <= DIO_PORTD && Copy_u8PinID <= DIO_PIN7 && Copy_u8Val <= OUTPUT )
    311c:	8a 81       	ldd	r24, Y+2	; 0x02
    311e:	84 30       	cpi	r24, 0x04	; 4
    3120:	08 f0       	brcs	.+2      	; 0x3124 <DIO_enuSetPinDir+0x1e>
    3122:	d1 c0       	rjmp	.+418    	; 0x32c6 <DIO_enuSetPinDir+0x1c0>
    3124:	8b 81       	ldd	r24, Y+3	; 0x03
    3126:	88 30       	cpi	r24, 0x08	; 8
    3128:	08 f0       	brcs	.+2      	; 0x312c <DIO_enuSetPinDir+0x26>
    312a:	cd c0       	rjmp	.+410    	; 0x32c6 <DIO_enuSetPinDir+0x1c0>
    312c:	8c 81       	ldd	r24, Y+4	; 0x04
    312e:	82 30       	cpi	r24, 0x02	; 2
    3130:	08 f0       	brcs	.+2      	; 0x3134 <DIO_enuSetPinDir+0x2e>
    3132:	c9 c0       	rjmp	.+402    	; 0x32c6 <DIO_enuSetPinDir+0x1c0>
	{

		switch(Copy_u8PortID)
    3134:	8a 81       	ldd	r24, Y+2	; 0x02
    3136:	28 2f       	mov	r18, r24
    3138:	30 e0       	ldi	r19, 0x00	; 0
    313a:	3e 83       	std	Y+6, r19	; 0x06
    313c:	2d 83       	std	Y+5, r18	; 0x05
    313e:	6d 81       	ldd	r22, Y+5	; 0x05
    3140:	7e 81       	ldd	r23, Y+6	; 0x06
    3142:	61 30       	cpi	r22, 0x01	; 1
    3144:	71 05       	cpc	r23, r1
    3146:	09 f4       	brne	.+2      	; 0x314a <DIO_enuSetPinDir+0x44>
    3148:	41 c0       	rjmp	.+130    	; 0x31cc <DIO_enuSetPinDir+0xc6>
    314a:	8d 81       	ldd	r24, Y+5	; 0x05
    314c:	9e 81       	ldd	r25, Y+6	; 0x06
    314e:	82 30       	cpi	r24, 0x02	; 2
    3150:	91 05       	cpc	r25, r1
    3152:	34 f4       	brge	.+12     	; 0x3160 <DIO_enuSetPinDir+0x5a>
    3154:	2d 81       	ldd	r18, Y+5	; 0x05
    3156:	3e 81       	ldd	r19, Y+6	; 0x06
    3158:	21 15       	cp	r18, r1
    315a:	31 05       	cpc	r19, r1
    315c:	71 f0       	breq	.+28     	; 0x317a <DIO_enuSetPinDir+0x74>
    315e:	b0 c0       	rjmp	.+352    	; 0x32c0 <DIO_enuSetPinDir+0x1ba>
    3160:	6d 81       	ldd	r22, Y+5	; 0x05
    3162:	7e 81       	ldd	r23, Y+6	; 0x06
    3164:	62 30       	cpi	r22, 0x02	; 2
    3166:	71 05       	cpc	r23, r1
    3168:	09 f4       	brne	.+2      	; 0x316c <DIO_enuSetPinDir+0x66>
    316a:	59 c0       	rjmp	.+178    	; 0x321e <DIO_enuSetPinDir+0x118>
    316c:	8d 81       	ldd	r24, Y+5	; 0x05
    316e:	9e 81       	ldd	r25, Y+6	; 0x06
    3170:	83 30       	cpi	r24, 0x03	; 3
    3172:	91 05       	cpc	r25, r1
    3174:	09 f4       	brne	.+2      	; 0x3178 <DIO_enuSetPinDir+0x72>
    3176:	7c c0       	rjmp	.+248    	; 0x3270 <DIO_enuSetPinDir+0x16a>
    3178:	a3 c0       	rjmp	.+326    	; 0x32c0 <DIO_enuSetPinDir+0x1ba>
		{
		case DIO_PORTA :
			DDRA &= ~(DIO_MASK_BIT << Copy_u8PinID);
    317a:	aa e3       	ldi	r26, 0x3A	; 58
    317c:	b0 e0       	ldi	r27, 0x00	; 0
    317e:	ea e3       	ldi	r30, 0x3A	; 58
    3180:	f0 e0       	ldi	r31, 0x00	; 0
    3182:	80 81       	ld	r24, Z
    3184:	48 2f       	mov	r20, r24
    3186:	8b 81       	ldd	r24, Y+3	; 0x03
    3188:	28 2f       	mov	r18, r24
    318a:	30 e0       	ldi	r19, 0x00	; 0
    318c:	81 e0       	ldi	r24, 0x01	; 1
    318e:	90 e0       	ldi	r25, 0x00	; 0
    3190:	02 c0       	rjmp	.+4      	; 0x3196 <DIO_enuSetPinDir+0x90>
    3192:	88 0f       	add	r24, r24
    3194:	99 1f       	adc	r25, r25
    3196:	2a 95       	dec	r18
    3198:	e2 f7       	brpl	.-8      	; 0x3192 <DIO_enuSetPinDir+0x8c>
    319a:	80 95       	com	r24
    319c:	84 23       	and	r24, r20
    319e:	8c 93       	st	X, r24
			DDRA |=  (Copy_u8Val << Copy_u8PinID);
    31a0:	aa e3       	ldi	r26, 0x3A	; 58
    31a2:	b0 e0       	ldi	r27, 0x00	; 0
    31a4:	ea e3       	ldi	r30, 0x3A	; 58
    31a6:	f0 e0       	ldi	r31, 0x00	; 0
    31a8:	80 81       	ld	r24, Z
    31aa:	48 2f       	mov	r20, r24
    31ac:	8c 81       	ldd	r24, Y+4	; 0x04
    31ae:	28 2f       	mov	r18, r24
    31b0:	30 e0       	ldi	r19, 0x00	; 0
    31b2:	8b 81       	ldd	r24, Y+3	; 0x03
    31b4:	88 2f       	mov	r24, r24
    31b6:	90 e0       	ldi	r25, 0x00	; 0
    31b8:	b9 01       	movw	r22, r18
    31ba:	02 c0       	rjmp	.+4      	; 0x31c0 <DIO_enuSetPinDir+0xba>
    31bc:	66 0f       	add	r22, r22
    31be:	77 1f       	adc	r23, r23
    31c0:	8a 95       	dec	r24
    31c2:	e2 f7       	brpl	.-8      	; 0x31bc <DIO_enuSetPinDir+0xb6>
    31c4:	cb 01       	movw	r24, r22
    31c6:	84 2b       	or	r24, r20
    31c8:	8c 93       	st	X, r24
    31ca:	7a c0       	rjmp	.+244    	; 0x32c0 <DIO_enuSetPinDir+0x1ba>
			break;
		case DIO_PORTB :
			DDRB &= ~(DIO_MASK_BIT << Copy_u8PinID);
    31cc:	a7 e3       	ldi	r26, 0x37	; 55
    31ce:	b0 e0       	ldi	r27, 0x00	; 0
    31d0:	e7 e3       	ldi	r30, 0x37	; 55
    31d2:	f0 e0       	ldi	r31, 0x00	; 0
    31d4:	80 81       	ld	r24, Z
    31d6:	48 2f       	mov	r20, r24
    31d8:	8b 81       	ldd	r24, Y+3	; 0x03
    31da:	28 2f       	mov	r18, r24
    31dc:	30 e0       	ldi	r19, 0x00	; 0
    31de:	81 e0       	ldi	r24, 0x01	; 1
    31e0:	90 e0       	ldi	r25, 0x00	; 0
    31e2:	02 c0       	rjmp	.+4      	; 0x31e8 <DIO_enuSetPinDir+0xe2>
    31e4:	88 0f       	add	r24, r24
    31e6:	99 1f       	adc	r25, r25
    31e8:	2a 95       	dec	r18
    31ea:	e2 f7       	brpl	.-8      	; 0x31e4 <DIO_enuSetPinDir+0xde>
    31ec:	80 95       	com	r24
    31ee:	84 23       	and	r24, r20
    31f0:	8c 93       	st	X, r24
			DDRB |=  (Copy_u8Val << Copy_u8PinID);
    31f2:	a7 e3       	ldi	r26, 0x37	; 55
    31f4:	b0 e0       	ldi	r27, 0x00	; 0
    31f6:	e7 e3       	ldi	r30, 0x37	; 55
    31f8:	f0 e0       	ldi	r31, 0x00	; 0
    31fa:	80 81       	ld	r24, Z
    31fc:	48 2f       	mov	r20, r24
    31fe:	8c 81       	ldd	r24, Y+4	; 0x04
    3200:	28 2f       	mov	r18, r24
    3202:	30 e0       	ldi	r19, 0x00	; 0
    3204:	8b 81       	ldd	r24, Y+3	; 0x03
    3206:	88 2f       	mov	r24, r24
    3208:	90 e0       	ldi	r25, 0x00	; 0
    320a:	b9 01       	movw	r22, r18
    320c:	02 c0       	rjmp	.+4      	; 0x3212 <DIO_enuSetPinDir+0x10c>
    320e:	66 0f       	add	r22, r22
    3210:	77 1f       	adc	r23, r23
    3212:	8a 95       	dec	r24
    3214:	e2 f7       	brpl	.-8      	; 0x320e <DIO_enuSetPinDir+0x108>
    3216:	cb 01       	movw	r24, r22
    3218:	84 2b       	or	r24, r20
    321a:	8c 93       	st	X, r24
    321c:	51 c0       	rjmp	.+162    	; 0x32c0 <DIO_enuSetPinDir+0x1ba>
			break;
		case DIO_PORTC :
			DDRC &= ~(DIO_MASK_BIT << Copy_u8PinID);
    321e:	a4 e3       	ldi	r26, 0x34	; 52
    3220:	b0 e0       	ldi	r27, 0x00	; 0
    3222:	e4 e3       	ldi	r30, 0x34	; 52
    3224:	f0 e0       	ldi	r31, 0x00	; 0
    3226:	80 81       	ld	r24, Z
    3228:	48 2f       	mov	r20, r24
    322a:	8b 81       	ldd	r24, Y+3	; 0x03
    322c:	28 2f       	mov	r18, r24
    322e:	30 e0       	ldi	r19, 0x00	; 0
    3230:	81 e0       	ldi	r24, 0x01	; 1
    3232:	90 e0       	ldi	r25, 0x00	; 0
    3234:	02 c0       	rjmp	.+4      	; 0x323a <DIO_enuSetPinDir+0x134>
    3236:	88 0f       	add	r24, r24
    3238:	99 1f       	adc	r25, r25
    323a:	2a 95       	dec	r18
    323c:	e2 f7       	brpl	.-8      	; 0x3236 <DIO_enuSetPinDir+0x130>
    323e:	80 95       	com	r24
    3240:	84 23       	and	r24, r20
    3242:	8c 93       	st	X, r24
			DDRC |=  (Copy_u8Val << Copy_u8PinID);
    3244:	a4 e3       	ldi	r26, 0x34	; 52
    3246:	b0 e0       	ldi	r27, 0x00	; 0
    3248:	e4 e3       	ldi	r30, 0x34	; 52
    324a:	f0 e0       	ldi	r31, 0x00	; 0
    324c:	80 81       	ld	r24, Z
    324e:	48 2f       	mov	r20, r24
    3250:	8c 81       	ldd	r24, Y+4	; 0x04
    3252:	28 2f       	mov	r18, r24
    3254:	30 e0       	ldi	r19, 0x00	; 0
    3256:	8b 81       	ldd	r24, Y+3	; 0x03
    3258:	88 2f       	mov	r24, r24
    325a:	90 e0       	ldi	r25, 0x00	; 0
    325c:	b9 01       	movw	r22, r18
    325e:	02 c0       	rjmp	.+4      	; 0x3264 <DIO_enuSetPinDir+0x15e>
    3260:	66 0f       	add	r22, r22
    3262:	77 1f       	adc	r23, r23
    3264:	8a 95       	dec	r24
    3266:	e2 f7       	brpl	.-8      	; 0x3260 <DIO_enuSetPinDir+0x15a>
    3268:	cb 01       	movw	r24, r22
    326a:	84 2b       	or	r24, r20
    326c:	8c 93       	st	X, r24
    326e:	28 c0       	rjmp	.+80     	; 0x32c0 <DIO_enuSetPinDir+0x1ba>
			break;
		case DIO_PORTD :
			DDRD &= ~(DIO_MASK_BIT << Copy_u8PinID);
    3270:	a1 e3       	ldi	r26, 0x31	; 49
    3272:	b0 e0       	ldi	r27, 0x00	; 0
    3274:	e1 e3       	ldi	r30, 0x31	; 49
    3276:	f0 e0       	ldi	r31, 0x00	; 0
    3278:	80 81       	ld	r24, Z
    327a:	48 2f       	mov	r20, r24
    327c:	8b 81       	ldd	r24, Y+3	; 0x03
    327e:	28 2f       	mov	r18, r24
    3280:	30 e0       	ldi	r19, 0x00	; 0
    3282:	81 e0       	ldi	r24, 0x01	; 1
    3284:	90 e0       	ldi	r25, 0x00	; 0
    3286:	02 c0       	rjmp	.+4      	; 0x328c <DIO_enuSetPinDir+0x186>
    3288:	88 0f       	add	r24, r24
    328a:	99 1f       	adc	r25, r25
    328c:	2a 95       	dec	r18
    328e:	e2 f7       	brpl	.-8      	; 0x3288 <DIO_enuSetPinDir+0x182>
    3290:	80 95       	com	r24
    3292:	84 23       	and	r24, r20
    3294:	8c 93       	st	X, r24
			DDRD |=  (Copy_u8Val << Copy_u8PinID);
    3296:	a1 e3       	ldi	r26, 0x31	; 49
    3298:	b0 e0       	ldi	r27, 0x00	; 0
    329a:	e1 e3       	ldi	r30, 0x31	; 49
    329c:	f0 e0       	ldi	r31, 0x00	; 0
    329e:	80 81       	ld	r24, Z
    32a0:	48 2f       	mov	r20, r24
    32a2:	8c 81       	ldd	r24, Y+4	; 0x04
    32a4:	28 2f       	mov	r18, r24
    32a6:	30 e0       	ldi	r19, 0x00	; 0
    32a8:	8b 81       	ldd	r24, Y+3	; 0x03
    32aa:	88 2f       	mov	r24, r24
    32ac:	90 e0       	ldi	r25, 0x00	; 0
    32ae:	b9 01       	movw	r22, r18
    32b0:	02 c0       	rjmp	.+4      	; 0x32b6 <DIO_enuSetPinDir+0x1b0>
    32b2:	66 0f       	add	r22, r22
    32b4:	77 1f       	adc	r23, r23
    32b6:	8a 95       	dec	r24
    32b8:	e2 f7       	brpl	.-8      	; 0x32b2 <DIO_enuSetPinDir+0x1ac>
    32ba:	cb 01       	movw	r24, r22
    32bc:	84 2b       	or	r24, r20
    32be:	8c 93       	st	X, r24
			break;
		}

		Local_enuErrorState = ES_OK;
    32c0:	81 e0       	ldi	r24, 0x01	; 1
    32c2:	89 83       	std	Y+1, r24	; 0x01
    32c4:	02 c0       	rjmp	.+4      	; 0x32ca <DIO_enuSetPinDir+0x1c4>

	}
	else Local_enuErrorState = ES_OUT_OF_RANGE;
    32c6:	83 e0       	ldi	r24, 0x03	; 3
    32c8:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
    32ca:	89 81       	ldd	r24, Y+1	; 0x01
}
    32cc:	26 96       	adiw	r28, 0x06	; 6
    32ce:	0f b6       	in	r0, 0x3f	; 63
    32d0:	f8 94       	cli
    32d2:	de bf       	out	0x3e, r29	; 62
    32d4:	0f be       	out	0x3f, r0	; 63
    32d6:	cd bf       	out	0x3d, r28	; 61
    32d8:	cf 91       	pop	r28
    32da:	df 91       	pop	r29
    32dc:	08 95       	ret

000032de <DIO_enuSetPinVal>:


ES_t DIO_enuSetPinVal( u8 Copy_u8PortID , u8 Copy_u8PinID , u8 Copy_u8Val ){
    32de:	df 93       	push	r29
    32e0:	cf 93       	push	r28
    32e2:	00 d0       	rcall	.+0      	; 0x32e4 <DIO_enuSetPinVal+0x6>
    32e4:	00 d0       	rcall	.+0      	; 0x32e6 <DIO_enuSetPinVal+0x8>
    32e6:	00 d0       	rcall	.+0      	; 0x32e8 <DIO_enuSetPinVal+0xa>
    32e8:	cd b7       	in	r28, 0x3d	; 61
    32ea:	de b7       	in	r29, 0x3e	; 62
    32ec:	8a 83       	std	Y+2, r24	; 0x02
    32ee:	6b 83       	std	Y+3, r22	; 0x03
    32f0:	4c 83       	std	Y+4, r20	; 0x04

	ES_t Local_enuErrorState = ES_NOK;
    32f2:	19 82       	std	Y+1, r1	; 0x01

	if( Copy_u8PortID <= DIO_PORTD && Copy_u8PinID <= DIO_PIN7 && Copy_u8Val <= OUTPUT )
    32f4:	8a 81       	ldd	r24, Y+2	; 0x02
    32f6:	84 30       	cpi	r24, 0x04	; 4
    32f8:	08 f0       	brcs	.+2      	; 0x32fc <DIO_enuSetPinVal+0x1e>
    32fa:	d1 c0       	rjmp	.+418    	; 0x349e <DIO_enuSetPinVal+0x1c0>
    32fc:	8b 81       	ldd	r24, Y+3	; 0x03
    32fe:	88 30       	cpi	r24, 0x08	; 8
    3300:	08 f0       	brcs	.+2      	; 0x3304 <DIO_enuSetPinVal+0x26>
    3302:	cd c0       	rjmp	.+410    	; 0x349e <DIO_enuSetPinVal+0x1c0>
    3304:	8c 81       	ldd	r24, Y+4	; 0x04
    3306:	82 30       	cpi	r24, 0x02	; 2
    3308:	08 f0       	brcs	.+2      	; 0x330c <DIO_enuSetPinVal+0x2e>
    330a:	c9 c0       	rjmp	.+402    	; 0x349e <DIO_enuSetPinVal+0x1c0>
	{

		switch(Copy_u8PortID)
    330c:	8a 81       	ldd	r24, Y+2	; 0x02
    330e:	28 2f       	mov	r18, r24
    3310:	30 e0       	ldi	r19, 0x00	; 0
    3312:	3e 83       	std	Y+6, r19	; 0x06
    3314:	2d 83       	std	Y+5, r18	; 0x05
    3316:	6d 81       	ldd	r22, Y+5	; 0x05
    3318:	7e 81       	ldd	r23, Y+6	; 0x06
    331a:	61 30       	cpi	r22, 0x01	; 1
    331c:	71 05       	cpc	r23, r1
    331e:	09 f4       	brne	.+2      	; 0x3322 <DIO_enuSetPinVal+0x44>
    3320:	41 c0       	rjmp	.+130    	; 0x33a4 <DIO_enuSetPinVal+0xc6>
    3322:	8d 81       	ldd	r24, Y+5	; 0x05
    3324:	9e 81       	ldd	r25, Y+6	; 0x06
    3326:	82 30       	cpi	r24, 0x02	; 2
    3328:	91 05       	cpc	r25, r1
    332a:	34 f4       	brge	.+12     	; 0x3338 <DIO_enuSetPinVal+0x5a>
    332c:	2d 81       	ldd	r18, Y+5	; 0x05
    332e:	3e 81       	ldd	r19, Y+6	; 0x06
    3330:	21 15       	cp	r18, r1
    3332:	31 05       	cpc	r19, r1
    3334:	71 f0       	breq	.+28     	; 0x3352 <DIO_enuSetPinVal+0x74>
    3336:	b0 c0       	rjmp	.+352    	; 0x3498 <DIO_enuSetPinVal+0x1ba>
    3338:	6d 81       	ldd	r22, Y+5	; 0x05
    333a:	7e 81       	ldd	r23, Y+6	; 0x06
    333c:	62 30       	cpi	r22, 0x02	; 2
    333e:	71 05       	cpc	r23, r1
    3340:	09 f4       	brne	.+2      	; 0x3344 <DIO_enuSetPinVal+0x66>
    3342:	59 c0       	rjmp	.+178    	; 0x33f6 <DIO_enuSetPinVal+0x118>
    3344:	8d 81       	ldd	r24, Y+5	; 0x05
    3346:	9e 81       	ldd	r25, Y+6	; 0x06
    3348:	83 30       	cpi	r24, 0x03	; 3
    334a:	91 05       	cpc	r25, r1
    334c:	09 f4       	brne	.+2      	; 0x3350 <DIO_enuSetPinVal+0x72>
    334e:	7c c0       	rjmp	.+248    	; 0x3448 <DIO_enuSetPinVal+0x16a>
    3350:	a3 c0       	rjmp	.+326    	; 0x3498 <DIO_enuSetPinVal+0x1ba>
		{
		case DIO_PORTA :
			PORTA &= ~(DIO_MASK_BIT << Copy_u8PinID);
    3352:	ab e3       	ldi	r26, 0x3B	; 59
    3354:	b0 e0       	ldi	r27, 0x00	; 0
    3356:	eb e3       	ldi	r30, 0x3B	; 59
    3358:	f0 e0       	ldi	r31, 0x00	; 0
    335a:	80 81       	ld	r24, Z
    335c:	48 2f       	mov	r20, r24
    335e:	8b 81       	ldd	r24, Y+3	; 0x03
    3360:	28 2f       	mov	r18, r24
    3362:	30 e0       	ldi	r19, 0x00	; 0
    3364:	81 e0       	ldi	r24, 0x01	; 1
    3366:	90 e0       	ldi	r25, 0x00	; 0
    3368:	02 c0       	rjmp	.+4      	; 0x336e <DIO_enuSetPinVal+0x90>
    336a:	88 0f       	add	r24, r24
    336c:	99 1f       	adc	r25, r25
    336e:	2a 95       	dec	r18
    3370:	e2 f7       	brpl	.-8      	; 0x336a <DIO_enuSetPinVal+0x8c>
    3372:	80 95       	com	r24
    3374:	84 23       	and	r24, r20
    3376:	8c 93       	st	X, r24
			PORTA |=  (Copy_u8Val << Copy_u8PinID);
    3378:	ab e3       	ldi	r26, 0x3B	; 59
    337a:	b0 e0       	ldi	r27, 0x00	; 0
    337c:	eb e3       	ldi	r30, 0x3B	; 59
    337e:	f0 e0       	ldi	r31, 0x00	; 0
    3380:	80 81       	ld	r24, Z
    3382:	48 2f       	mov	r20, r24
    3384:	8c 81       	ldd	r24, Y+4	; 0x04
    3386:	28 2f       	mov	r18, r24
    3388:	30 e0       	ldi	r19, 0x00	; 0
    338a:	8b 81       	ldd	r24, Y+3	; 0x03
    338c:	88 2f       	mov	r24, r24
    338e:	90 e0       	ldi	r25, 0x00	; 0
    3390:	b9 01       	movw	r22, r18
    3392:	02 c0       	rjmp	.+4      	; 0x3398 <DIO_enuSetPinVal+0xba>
    3394:	66 0f       	add	r22, r22
    3396:	77 1f       	adc	r23, r23
    3398:	8a 95       	dec	r24
    339a:	e2 f7       	brpl	.-8      	; 0x3394 <DIO_enuSetPinVal+0xb6>
    339c:	cb 01       	movw	r24, r22
    339e:	84 2b       	or	r24, r20
    33a0:	8c 93       	st	X, r24
    33a2:	7a c0       	rjmp	.+244    	; 0x3498 <DIO_enuSetPinVal+0x1ba>
			break;
		case DIO_PORTB :
			PORTB &= ~(DIO_MASK_BIT << Copy_u8PinID);
    33a4:	a8 e3       	ldi	r26, 0x38	; 56
    33a6:	b0 e0       	ldi	r27, 0x00	; 0
    33a8:	e8 e3       	ldi	r30, 0x38	; 56
    33aa:	f0 e0       	ldi	r31, 0x00	; 0
    33ac:	80 81       	ld	r24, Z
    33ae:	48 2f       	mov	r20, r24
    33b0:	8b 81       	ldd	r24, Y+3	; 0x03
    33b2:	28 2f       	mov	r18, r24
    33b4:	30 e0       	ldi	r19, 0x00	; 0
    33b6:	81 e0       	ldi	r24, 0x01	; 1
    33b8:	90 e0       	ldi	r25, 0x00	; 0
    33ba:	02 c0       	rjmp	.+4      	; 0x33c0 <DIO_enuSetPinVal+0xe2>
    33bc:	88 0f       	add	r24, r24
    33be:	99 1f       	adc	r25, r25
    33c0:	2a 95       	dec	r18
    33c2:	e2 f7       	brpl	.-8      	; 0x33bc <DIO_enuSetPinVal+0xde>
    33c4:	80 95       	com	r24
    33c6:	84 23       	and	r24, r20
    33c8:	8c 93       	st	X, r24
			PORTB |=  (Copy_u8Val << Copy_u8PinID);
    33ca:	a8 e3       	ldi	r26, 0x38	; 56
    33cc:	b0 e0       	ldi	r27, 0x00	; 0
    33ce:	e8 e3       	ldi	r30, 0x38	; 56
    33d0:	f0 e0       	ldi	r31, 0x00	; 0
    33d2:	80 81       	ld	r24, Z
    33d4:	48 2f       	mov	r20, r24
    33d6:	8c 81       	ldd	r24, Y+4	; 0x04
    33d8:	28 2f       	mov	r18, r24
    33da:	30 e0       	ldi	r19, 0x00	; 0
    33dc:	8b 81       	ldd	r24, Y+3	; 0x03
    33de:	88 2f       	mov	r24, r24
    33e0:	90 e0       	ldi	r25, 0x00	; 0
    33e2:	b9 01       	movw	r22, r18
    33e4:	02 c0       	rjmp	.+4      	; 0x33ea <DIO_enuSetPinVal+0x10c>
    33e6:	66 0f       	add	r22, r22
    33e8:	77 1f       	adc	r23, r23
    33ea:	8a 95       	dec	r24
    33ec:	e2 f7       	brpl	.-8      	; 0x33e6 <DIO_enuSetPinVal+0x108>
    33ee:	cb 01       	movw	r24, r22
    33f0:	84 2b       	or	r24, r20
    33f2:	8c 93       	st	X, r24
    33f4:	51 c0       	rjmp	.+162    	; 0x3498 <DIO_enuSetPinVal+0x1ba>
			break;
		case DIO_PORTC :
			PORTC &= ~(DIO_MASK_BIT << Copy_u8PinID);
    33f6:	a5 e3       	ldi	r26, 0x35	; 53
    33f8:	b0 e0       	ldi	r27, 0x00	; 0
    33fa:	e5 e3       	ldi	r30, 0x35	; 53
    33fc:	f0 e0       	ldi	r31, 0x00	; 0
    33fe:	80 81       	ld	r24, Z
    3400:	48 2f       	mov	r20, r24
    3402:	8b 81       	ldd	r24, Y+3	; 0x03
    3404:	28 2f       	mov	r18, r24
    3406:	30 e0       	ldi	r19, 0x00	; 0
    3408:	81 e0       	ldi	r24, 0x01	; 1
    340a:	90 e0       	ldi	r25, 0x00	; 0
    340c:	02 c0       	rjmp	.+4      	; 0x3412 <DIO_enuSetPinVal+0x134>
    340e:	88 0f       	add	r24, r24
    3410:	99 1f       	adc	r25, r25
    3412:	2a 95       	dec	r18
    3414:	e2 f7       	brpl	.-8      	; 0x340e <DIO_enuSetPinVal+0x130>
    3416:	80 95       	com	r24
    3418:	84 23       	and	r24, r20
    341a:	8c 93       	st	X, r24
			PORTC |=  (Copy_u8Val << Copy_u8PinID);
    341c:	a5 e3       	ldi	r26, 0x35	; 53
    341e:	b0 e0       	ldi	r27, 0x00	; 0
    3420:	e5 e3       	ldi	r30, 0x35	; 53
    3422:	f0 e0       	ldi	r31, 0x00	; 0
    3424:	80 81       	ld	r24, Z
    3426:	48 2f       	mov	r20, r24
    3428:	8c 81       	ldd	r24, Y+4	; 0x04
    342a:	28 2f       	mov	r18, r24
    342c:	30 e0       	ldi	r19, 0x00	; 0
    342e:	8b 81       	ldd	r24, Y+3	; 0x03
    3430:	88 2f       	mov	r24, r24
    3432:	90 e0       	ldi	r25, 0x00	; 0
    3434:	b9 01       	movw	r22, r18
    3436:	02 c0       	rjmp	.+4      	; 0x343c <DIO_enuSetPinVal+0x15e>
    3438:	66 0f       	add	r22, r22
    343a:	77 1f       	adc	r23, r23
    343c:	8a 95       	dec	r24
    343e:	e2 f7       	brpl	.-8      	; 0x3438 <DIO_enuSetPinVal+0x15a>
    3440:	cb 01       	movw	r24, r22
    3442:	84 2b       	or	r24, r20
    3444:	8c 93       	st	X, r24
    3446:	28 c0       	rjmp	.+80     	; 0x3498 <DIO_enuSetPinVal+0x1ba>
			break;
		case DIO_PORTD :
			PORTD &= ~(DIO_MASK_BIT << Copy_u8PinID);
    3448:	a2 e3       	ldi	r26, 0x32	; 50
    344a:	b0 e0       	ldi	r27, 0x00	; 0
    344c:	e2 e3       	ldi	r30, 0x32	; 50
    344e:	f0 e0       	ldi	r31, 0x00	; 0
    3450:	80 81       	ld	r24, Z
    3452:	48 2f       	mov	r20, r24
    3454:	8b 81       	ldd	r24, Y+3	; 0x03
    3456:	28 2f       	mov	r18, r24
    3458:	30 e0       	ldi	r19, 0x00	; 0
    345a:	81 e0       	ldi	r24, 0x01	; 1
    345c:	90 e0       	ldi	r25, 0x00	; 0
    345e:	02 c0       	rjmp	.+4      	; 0x3464 <DIO_enuSetPinVal+0x186>
    3460:	88 0f       	add	r24, r24
    3462:	99 1f       	adc	r25, r25
    3464:	2a 95       	dec	r18
    3466:	e2 f7       	brpl	.-8      	; 0x3460 <DIO_enuSetPinVal+0x182>
    3468:	80 95       	com	r24
    346a:	84 23       	and	r24, r20
    346c:	8c 93       	st	X, r24
			PORTD |=  (Copy_u8Val << Copy_u8PinID);
    346e:	a2 e3       	ldi	r26, 0x32	; 50
    3470:	b0 e0       	ldi	r27, 0x00	; 0
    3472:	e2 e3       	ldi	r30, 0x32	; 50
    3474:	f0 e0       	ldi	r31, 0x00	; 0
    3476:	80 81       	ld	r24, Z
    3478:	48 2f       	mov	r20, r24
    347a:	8c 81       	ldd	r24, Y+4	; 0x04
    347c:	28 2f       	mov	r18, r24
    347e:	30 e0       	ldi	r19, 0x00	; 0
    3480:	8b 81       	ldd	r24, Y+3	; 0x03
    3482:	88 2f       	mov	r24, r24
    3484:	90 e0       	ldi	r25, 0x00	; 0
    3486:	b9 01       	movw	r22, r18
    3488:	02 c0       	rjmp	.+4      	; 0x348e <DIO_enuSetPinVal+0x1b0>
    348a:	66 0f       	add	r22, r22
    348c:	77 1f       	adc	r23, r23
    348e:	8a 95       	dec	r24
    3490:	e2 f7       	brpl	.-8      	; 0x348a <DIO_enuSetPinVal+0x1ac>
    3492:	cb 01       	movw	r24, r22
    3494:	84 2b       	or	r24, r20
    3496:	8c 93       	st	X, r24
			break;
		}

		Local_enuErrorState = ES_OK;
    3498:	81 e0       	ldi	r24, 0x01	; 1
    349a:	89 83       	std	Y+1, r24	; 0x01
    349c:	02 c0       	rjmp	.+4      	; 0x34a2 <DIO_enuSetPinVal+0x1c4>

	}
	else Local_enuErrorState = ES_OUT_OF_RANGE;
    349e:	83 e0       	ldi	r24, 0x03	; 3
    34a0:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
    34a2:	89 81       	ldd	r24, Y+1	; 0x01
}
    34a4:	26 96       	adiw	r28, 0x06	; 6
    34a6:	0f b6       	in	r0, 0x3f	; 63
    34a8:	f8 94       	cli
    34aa:	de bf       	out	0x3e, r29	; 62
    34ac:	0f be       	out	0x3f, r0	; 63
    34ae:	cd bf       	out	0x3d, r28	; 61
    34b0:	cf 91       	pop	r28
    34b2:	df 91       	pop	r29
    34b4:	08 95       	ret

000034b6 <DIO_enuTogglePin>:

ES_t DIO_enuTogglePin( u8 Copy_u8PortID , u8 Copy_u8PinID  ){
    34b6:	df 93       	push	r29
    34b8:	cf 93       	push	r28
    34ba:	00 d0       	rcall	.+0      	; 0x34bc <DIO_enuTogglePin+0x6>
    34bc:	00 d0       	rcall	.+0      	; 0x34be <DIO_enuTogglePin+0x8>
    34be:	0f 92       	push	r0
    34c0:	cd b7       	in	r28, 0x3d	; 61
    34c2:	de b7       	in	r29, 0x3e	; 62
    34c4:	8a 83       	std	Y+2, r24	; 0x02
    34c6:	6b 83       	std	Y+3, r22	; 0x03

	ES_t Local_enuErrorState = ES_NOK;
    34c8:	19 82       	std	Y+1, r1	; 0x01

	if( Copy_u8PortID <= DIO_PORTD && Copy_u8PinID <= DIO_PIN7 )
    34ca:	8a 81       	ldd	r24, Y+2	; 0x02
    34cc:	84 30       	cpi	r24, 0x04	; 4
    34ce:	08 f0       	brcs	.+2      	; 0x34d2 <DIO_enuTogglePin+0x1c>
    34d0:	75 c0       	rjmp	.+234    	; 0x35bc <DIO_enuTogglePin+0x106>
    34d2:	8b 81       	ldd	r24, Y+3	; 0x03
    34d4:	88 30       	cpi	r24, 0x08	; 8
    34d6:	08 f0       	brcs	.+2      	; 0x34da <DIO_enuTogglePin+0x24>
    34d8:	71 c0       	rjmp	.+226    	; 0x35bc <DIO_enuTogglePin+0x106>
	{

		switch(Copy_u8PortID)
    34da:	8a 81       	ldd	r24, Y+2	; 0x02
    34dc:	28 2f       	mov	r18, r24
    34de:	30 e0       	ldi	r19, 0x00	; 0
    34e0:	3d 83       	std	Y+5, r19	; 0x05
    34e2:	2c 83       	std	Y+4, r18	; 0x04
    34e4:	8c 81       	ldd	r24, Y+4	; 0x04
    34e6:	9d 81       	ldd	r25, Y+5	; 0x05
    34e8:	81 30       	cpi	r24, 0x01	; 1
    34ea:	91 05       	cpc	r25, r1
    34ec:	49 f1       	breq	.+82     	; 0x3540 <DIO_enuTogglePin+0x8a>
    34ee:	2c 81       	ldd	r18, Y+4	; 0x04
    34f0:	3d 81       	ldd	r19, Y+5	; 0x05
    34f2:	22 30       	cpi	r18, 0x02	; 2
    34f4:	31 05       	cpc	r19, r1
    34f6:	2c f4       	brge	.+10     	; 0x3502 <DIO_enuTogglePin+0x4c>
    34f8:	8c 81       	ldd	r24, Y+4	; 0x04
    34fa:	9d 81       	ldd	r25, Y+5	; 0x05
    34fc:	00 97       	sbiw	r24, 0x00	; 0
    34fe:	61 f0       	breq	.+24     	; 0x3518 <DIO_enuTogglePin+0x62>
    3500:	5a c0       	rjmp	.+180    	; 0x35b6 <DIO_enuTogglePin+0x100>
    3502:	2c 81       	ldd	r18, Y+4	; 0x04
    3504:	3d 81       	ldd	r19, Y+5	; 0x05
    3506:	22 30       	cpi	r18, 0x02	; 2
    3508:	31 05       	cpc	r19, r1
    350a:	71 f1       	breq	.+92     	; 0x3568 <DIO_enuTogglePin+0xb2>
    350c:	8c 81       	ldd	r24, Y+4	; 0x04
    350e:	9d 81       	ldd	r25, Y+5	; 0x05
    3510:	83 30       	cpi	r24, 0x03	; 3
    3512:	91 05       	cpc	r25, r1
    3514:	e9 f1       	breq	.+122    	; 0x3590 <DIO_enuTogglePin+0xda>
    3516:	4f c0       	rjmp	.+158    	; 0x35b6 <DIO_enuTogglePin+0x100>
		{
		case DIO_PORTA :
			PORTA ^= (DIO_MASK_BIT << Copy_u8PinID);
    3518:	ab e3       	ldi	r26, 0x3B	; 59
    351a:	b0 e0       	ldi	r27, 0x00	; 0
    351c:	eb e3       	ldi	r30, 0x3B	; 59
    351e:	f0 e0       	ldi	r31, 0x00	; 0
    3520:	80 81       	ld	r24, Z
    3522:	48 2f       	mov	r20, r24
    3524:	8b 81       	ldd	r24, Y+3	; 0x03
    3526:	28 2f       	mov	r18, r24
    3528:	30 e0       	ldi	r19, 0x00	; 0
    352a:	81 e0       	ldi	r24, 0x01	; 1
    352c:	90 e0       	ldi	r25, 0x00	; 0
    352e:	02 2e       	mov	r0, r18
    3530:	02 c0       	rjmp	.+4      	; 0x3536 <DIO_enuTogglePin+0x80>
    3532:	88 0f       	add	r24, r24
    3534:	99 1f       	adc	r25, r25
    3536:	0a 94       	dec	r0
    3538:	e2 f7       	brpl	.-8      	; 0x3532 <DIO_enuTogglePin+0x7c>
    353a:	84 27       	eor	r24, r20
    353c:	8c 93       	st	X, r24
    353e:	3b c0       	rjmp	.+118    	; 0x35b6 <DIO_enuTogglePin+0x100>
			break;
		case DIO_PORTB :
			PORTB ^= (DIO_MASK_BIT << Copy_u8PinID);
    3540:	a8 e3       	ldi	r26, 0x38	; 56
    3542:	b0 e0       	ldi	r27, 0x00	; 0
    3544:	e8 e3       	ldi	r30, 0x38	; 56
    3546:	f0 e0       	ldi	r31, 0x00	; 0
    3548:	80 81       	ld	r24, Z
    354a:	48 2f       	mov	r20, r24
    354c:	8b 81       	ldd	r24, Y+3	; 0x03
    354e:	28 2f       	mov	r18, r24
    3550:	30 e0       	ldi	r19, 0x00	; 0
    3552:	81 e0       	ldi	r24, 0x01	; 1
    3554:	90 e0       	ldi	r25, 0x00	; 0
    3556:	02 2e       	mov	r0, r18
    3558:	02 c0       	rjmp	.+4      	; 0x355e <DIO_enuTogglePin+0xa8>
    355a:	88 0f       	add	r24, r24
    355c:	99 1f       	adc	r25, r25
    355e:	0a 94       	dec	r0
    3560:	e2 f7       	brpl	.-8      	; 0x355a <DIO_enuTogglePin+0xa4>
    3562:	84 27       	eor	r24, r20
    3564:	8c 93       	st	X, r24
    3566:	27 c0       	rjmp	.+78     	; 0x35b6 <DIO_enuTogglePin+0x100>
			break;
		case DIO_PORTC :
			PORTC ^= (DIO_MASK_BIT << Copy_u8PinID);
    3568:	a5 e3       	ldi	r26, 0x35	; 53
    356a:	b0 e0       	ldi	r27, 0x00	; 0
    356c:	e5 e3       	ldi	r30, 0x35	; 53
    356e:	f0 e0       	ldi	r31, 0x00	; 0
    3570:	80 81       	ld	r24, Z
    3572:	48 2f       	mov	r20, r24
    3574:	8b 81       	ldd	r24, Y+3	; 0x03
    3576:	28 2f       	mov	r18, r24
    3578:	30 e0       	ldi	r19, 0x00	; 0
    357a:	81 e0       	ldi	r24, 0x01	; 1
    357c:	90 e0       	ldi	r25, 0x00	; 0
    357e:	02 2e       	mov	r0, r18
    3580:	02 c0       	rjmp	.+4      	; 0x3586 <DIO_enuTogglePin+0xd0>
    3582:	88 0f       	add	r24, r24
    3584:	99 1f       	adc	r25, r25
    3586:	0a 94       	dec	r0
    3588:	e2 f7       	brpl	.-8      	; 0x3582 <DIO_enuTogglePin+0xcc>
    358a:	84 27       	eor	r24, r20
    358c:	8c 93       	st	X, r24
    358e:	13 c0       	rjmp	.+38     	; 0x35b6 <DIO_enuTogglePin+0x100>
			break;
		case DIO_PORTD :
			PORTD ^= (DIO_MASK_BIT << Copy_u8PinID);
    3590:	a2 e3       	ldi	r26, 0x32	; 50
    3592:	b0 e0       	ldi	r27, 0x00	; 0
    3594:	e2 e3       	ldi	r30, 0x32	; 50
    3596:	f0 e0       	ldi	r31, 0x00	; 0
    3598:	80 81       	ld	r24, Z
    359a:	48 2f       	mov	r20, r24
    359c:	8b 81       	ldd	r24, Y+3	; 0x03
    359e:	28 2f       	mov	r18, r24
    35a0:	30 e0       	ldi	r19, 0x00	; 0
    35a2:	81 e0       	ldi	r24, 0x01	; 1
    35a4:	90 e0       	ldi	r25, 0x00	; 0
    35a6:	02 2e       	mov	r0, r18
    35a8:	02 c0       	rjmp	.+4      	; 0x35ae <DIO_enuTogglePin+0xf8>
    35aa:	88 0f       	add	r24, r24
    35ac:	99 1f       	adc	r25, r25
    35ae:	0a 94       	dec	r0
    35b0:	e2 f7       	brpl	.-8      	; 0x35aa <DIO_enuTogglePin+0xf4>
    35b2:	84 27       	eor	r24, r20
    35b4:	8c 93       	st	X, r24
			break;
		}

		Local_enuErrorState = ES_OK;
    35b6:	81 e0       	ldi	r24, 0x01	; 1
    35b8:	89 83       	std	Y+1, r24	; 0x01
    35ba:	02 c0       	rjmp	.+4      	; 0x35c0 <DIO_enuTogglePin+0x10a>

	}
	else Local_enuErrorState = ES_OUT_OF_RANGE;
    35bc:	83 e0       	ldi	r24, 0x03	; 3
    35be:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
    35c0:	89 81       	ldd	r24, Y+1	; 0x01
}
    35c2:	0f 90       	pop	r0
    35c4:	0f 90       	pop	r0
    35c6:	0f 90       	pop	r0
    35c8:	0f 90       	pop	r0
    35ca:	0f 90       	pop	r0
    35cc:	cf 91       	pop	r28
    35ce:	df 91       	pop	r29
    35d0:	08 95       	ret

000035d2 <DIO_enuGetPinVal>:

ES_t DIO_enuGetPinVal( u8 Copy_u8PortID , u8 Copy_u8PinID , u8* Copy_pu8Val ){
    35d2:	df 93       	push	r29
    35d4:	cf 93       	push	r28
    35d6:	cd b7       	in	r28, 0x3d	; 61
    35d8:	de b7       	in	r29, 0x3e	; 62
    35da:	27 97       	sbiw	r28, 0x07	; 7
    35dc:	0f b6       	in	r0, 0x3f	; 63
    35de:	f8 94       	cli
    35e0:	de bf       	out	0x3e, r29	; 62
    35e2:	0f be       	out	0x3f, r0	; 63
    35e4:	cd bf       	out	0x3d, r28	; 61
    35e6:	8a 83       	std	Y+2, r24	; 0x02
    35e8:	6b 83       	std	Y+3, r22	; 0x03
    35ea:	5d 83       	std	Y+5, r21	; 0x05
    35ec:	4c 83       	std	Y+4, r20	; 0x04

	ES_t Local_enuErrorState = ES_NOK;
    35ee:	19 82       	std	Y+1, r1	; 0x01


	if(Copy_pu8Val != NULL)
    35f0:	8c 81       	ldd	r24, Y+4	; 0x04
    35f2:	9d 81       	ldd	r25, Y+5	; 0x05
    35f4:	00 97       	sbiw	r24, 0x00	; 0
    35f6:	09 f4       	brne	.+2      	; 0x35fa <DIO_enuGetPinVal+0x28>
    35f8:	7e c0       	rjmp	.+252    	; 0x36f6 <DIO_enuGetPinVal+0x124>
	{
		if( Copy_u8PortID <= DIO_PORTD && Copy_u8PinID <= DIO_PIN7 )
    35fa:	8a 81       	ldd	r24, Y+2	; 0x02
    35fc:	84 30       	cpi	r24, 0x04	; 4
    35fe:	08 f0       	brcs	.+2      	; 0x3602 <DIO_enuGetPinVal+0x30>
    3600:	77 c0       	rjmp	.+238    	; 0x36f0 <DIO_enuGetPinVal+0x11e>
    3602:	8b 81       	ldd	r24, Y+3	; 0x03
    3604:	88 30       	cpi	r24, 0x08	; 8
    3606:	08 f0       	brcs	.+2      	; 0x360a <DIO_enuGetPinVal+0x38>
    3608:	73 c0       	rjmp	.+230    	; 0x36f0 <DIO_enuGetPinVal+0x11e>
		{
			switch(Copy_u8PortID)
    360a:	8a 81       	ldd	r24, Y+2	; 0x02
    360c:	28 2f       	mov	r18, r24
    360e:	30 e0       	ldi	r19, 0x00	; 0
    3610:	3f 83       	std	Y+7, r19	; 0x07
    3612:	2e 83       	std	Y+6, r18	; 0x06
    3614:	4e 81       	ldd	r20, Y+6	; 0x06
    3616:	5f 81       	ldd	r21, Y+7	; 0x07
    3618:	41 30       	cpi	r20, 0x01	; 1
    361a:	51 05       	cpc	r21, r1
    361c:	59 f1       	breq	.+86     	; 0x3674 <DIO_enuGetPinVal+0xa2>
    361e:	8e 81       	ldd	r24, Y+6	; 0x06
    3620:	9f 81       	ldd	r25, Y+7	; 0x07
    3622:	82 30       	cpi	r24, 0x02	; 2
    3624:	91 05       	cpc	r25, r1
    3626:	34 f4       	brge	.+12     	; 0x3634 <DIO_enuGetPinVal+0x62>
    3628:	2e 81       	ldd	r18, Y+6	; 0x06
    362a:	3f 81       	ldd	r19, Y+7	; 0x07
    362c:	21 15       	cp	r18, r1
    362e:	31 05       	cpc	r19, r1
    3630:	69 f0       	breq	.+26     	; 0x364c <DIO_enuGetPinVal+0x7a>
    3632:	5b c0       	rjmp	.+182    	; 0x36ea <DIO_enuGetPinVal+0x118>
    3634:	4e 81       	ldd	r20, Y+6	; 0x06
    3636:	5f 81       	ldd	r21, Y+7	; 0x07
    3638:	42 30       	cpi	r20, 0x02	; 2
    363a:	51 05       	cpc	r21, r1
    363c:	79 f1       	breq	.+94     	; 0x369c <DIO_enuGetPinVal+0xca>
    363e:	8e 81       	ldd	r24, Y+6	; 0x06
    3640:	9f 81       	ldd	r25, Y+7	; 0x07
    3642:	83 30       	cpi	r24, 0x03	; 3
    3644:	91 05       	cpc	r25, r1
    3646:	09 f4       	brne	.+2      	; 0x364a <DIO_enuGetPinVal+0x78>
    3648:	3d c0       	rjmp	.+122    	; 0x36c4 <DIO_enuGetPinVal+0xf2>
    364a:	4f c0       	rjmp	.+158    	; 0x36ea <DIO_enuGetPinVal+0x118>
			{
			case DIO_PORTA :
				*Copy_pu8Val = (PINA>>Copy_u8PinID) & DIO_MASK_BIT;
    364c:	e9 e3       	ldi	r30, 0x39	; 57
    364e:	f0 e0       	ldi	r31, 0x00	; 0
    3650:	80 81       	ld	r24, Z
    3652:	28 2f       	mov	r18, r24
    3654:	30 e0       	ldi	r19, 0x00	; 0
    3656:	8b 81       	ldd	r24, Y+3	; 0x03
    3658:	88 2f       	mov	r24, r24
    365a:	90 e0       	ldi	r25, 0x00	; 0
    365c:	a9 01       	movw	r20, r18
    365e:	02 c0       	rjmp	.+4      	; 0x3664 <DIO_enuGetPinVal+0x92>
    3660:	55 95       	asr	r21
    3662:	47 95       	ror	r20
    3664:	8a 95       	dec	r24
    3666:	e2 f7       	brpl	.-8      	; 0x3660 <DIO_enuGetPinVal+0x8e>
    3668:	ca 01       	movw	r24, r20
    366a:	81 70       	andi	r24, 0x01	; 1
    366c:	ec 81       	ldd	r30, Y+4	; 0x04
    366e:	fd 81       	ldd	r31, Y+5	; 0x05
    3670:	80 83       	st	Z, r24
    3672:	3b c0       	rjmp	.+118    	; 0x36ea <DIO_enuGetPinVal+0x118>
				break;
			case DIO_PORTB :
				*Copy_pu8Val = (PINB>>Copy_u8PinID) & DIO_MASK_BIT;
    3674:	e6 e3       	ldi	r30, 0x36	; 54
    3676:	f0 e0       	ldi	r31, 0x00	; 0
    3678:	80 81       	ld	r24, Z
    367a:	28 2f       	mov	r18, r24
    367c:	30 e0       	ldi	r19, 0x00	; 0
    367e:	8b 81       	ldd	r24, Y+3	; 0x03
    3680:	88 2f       	mov	r24, r24
    3682:	90 e0       	ldi	r25, 0x00	; 0
    3684:	a9 01       	movw	r20, r18
    3686:	02 c0       	rjmp	.+4      	; 0x368c <DIO_enuGetPinVal+0xba>
    3688:	55 95       	asr	r21
    368a:	47 95       	ror	r20
    368c:	8a 95       	dec	r24
    368e:	e2 f7       	brpl	.-8      	; 0x3688 <DIO_enuGetPinVal+0xb6>
    3690:	ca 01       	movw	r24, r20
    3692:	81 70       	andi	r24, 0x01	; 1
    3694:	ec 81       	ldd	r30, Y+4	; 0x04
    3696:	fd 81       	ldd	r31, Y+5	; 0x05
    3698:	80 83       	st	Z, r24
    369a:	27 c0       	rjmp	.+78     	; 0x36ea <DIO_enuGetPinVal+0x118>
				break;
			case DIO_PORTC :
				*Copy_pu8Val = (PINC>>Copy_u8PinID) & DIO_MASK_BIT;
    369c:	e3 e3       	ldi	r30, 0x33	; 51
    369e:	f0 e0       	ldi	r31, 0x00	; 0
    36a0:	80 81       	ld	r24, Z
    36a2:	28 2f       	mov	r18, r24
    36a4:	30 e0       	ldi	r19, 0x00	; 0
    36a6:	8b 81       	ldd	r24, Y+3	; 0x03
    36a8:	88 2f       	mov	r24, r24
    36aa:	90 e0       	ldi	r25, 0x00	; 0
    36ac:	a9 01       	movw	r20, r18
    36ae:	02 c0       	rjmp	.+4      	; 0x36b4 <DIO_enuGetPinVal+0xe2>
    36b0:	55 95       	asr	r21
    36b2:	47 95       	ror	r20
    36b4:	8a 95       	dec	r24
    36b6:	e2 f7       	brpl	.-8      	; 0x36b0 <DIO_enuGetPinVal+0xde>
    36b8:	ca 01       	movw	r24, r20
    36ba:	81 70       	andi	r24, 0x01	; 1
    36bc:	ec 81       	ldd	r30, Y+4	; 0x04
    36be:	fd 81       	ldd	r31, Y+5	; 0x05
    36c0:	80 83       	st	Z, r24
    36c2:	13 c0       	rjmp	.+38     	; 0x36ea <DIO_enuGetPinVal+0x118>
				break;
			case DIO_PORTD :
				*Copy_pu8Val = (PIND>>Copy_u8PinID) & DIO_MASK_BIT;
    36c4:	e0 e3       	ldi	r30, 0x30	; 48
    36c6:	f0 e0       	ldi	r31, 0x00	; 0
    36c8:	80 81       	ld	r24, Z
    36ca:	28 2f       	mov	r18, r24
    36cc:	30 e0       	ldi	r19, 0x00	; 0
    36ce:	8b 81       	ldd	r24, Y+3	; 0x03
    36d0:	88 2f       	mov	r24, r24
    36d2:	90 e0       	ldi	r25, 0x00	; 0
    36d4:	a9 01       	movw	r20, r18
    36d6:	02 c0       	rjmp	.+4      	; 0x36dc <DIO_enuGetPinVal+0x10a>
    36d8:	55 95       	asr	r21
    36da:	47 95       	ror	r20
    36dc:	8a 95       	dec	r24
    36de:	e2 f7       	brpl	.-8      	; 0x36d8 <DIO_enuGetPinVal+0x106>
    36e0:	ca 01       	movw	r24, r20
    36e2:	81 70       	andi	r24, 0x01	; 1
    36e4:	ec 81       	ldd	r30, Y+4	; 0x04
    36e6:	fd 81       	ldd	r31, Y+5	; 0x05
    36e8:	80 83       	st	Z, r24
				break;
			}

			Local_enuErrorState = ES_OK;
    36ea:	81 e0       	ldi	r24, 0x01	; 1
    36ec:	89 83       	std	Y+1, r24	; 0x01
    36ee:	05 c0       	rjmp	.+10     	; 0x36fa <DIO_enuGetPinVal+0x128>
		}
		else Local_enuErrorState = ES_OUT_OF_RANGE;
    36f0:	83 e0       	ldi	r24, 0x03	; 3
    36f2:	89 83       	std	Y+1, r24	; 0x01
    36f4:	02 c0       	rjmp	.+4      	; 0x36fa <DIO_enuGetPinVal+0x128>
	}
	else Local_enuErrorState = ES_NULL_POINTER;
    36f6:	82 e0       	ldi	r24, 0x02	; 2
    36f8:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
    36fa:	89 81       	ldd	r24, Y+1	; 0x01
}
    36fc:	27 96       	adiw	r28, 0x07	; 7
    36fe:	0f b6       	in	r0, 0x3f	; 63
    3700:	f8 94       	cli
    3702:	de bf       	out	0x3e, r29	; 62
    3704:	0f be       	out	0x3f, r0	; 63
    3706:	cd bf       	out	0x3d, r28	; 61
    3708:	cf 91       	pop	r28
    370a:	df 91       	pop	r29
    370c:	08 95       	ret

0000370e <Keypad_enuInit>:


u8 Keypad_u8Buttons[NUM_OF_ROW][NUM_OF_COL] = KPD_BUTTONS ;

ES_t Keypad_enuInit()
{
    370e:	ef 92       	push	r14
    3710:	ff 92       	push	r15
    3712:	0f 93       	push	r16
    3714:	1f 93       	push	r17
    3716:	df 93       	push	r29
    3718:	cf 93       	push	r28
    371a:	00 d0       	rcall	.+0      	; 0x371c <Keypad_enuInit+0xe>
    371c:	0f 92       	push	r0
    371e:	cd b7       	in	r28, 0x3d	; 61
    3720:	de b7       	in	r29, 0x3e	; 62
	{
		ES_t Local_enuErrorState = ES_NOK;
    3722:	1a 82       	std	Y+2, r1	; 0x02

		static u32 Local_u32Check = 0;

		/* Set Column Pins as Output */
		Local_u32Check |= (DIO_enuSetPinDir(KPD_COL0_PORT, KPD_COL0_PIN, DIO_u8OUTPUT) << 0);
    3724:	80 e0       	ldi	r24, 0x00	; 0
    3726:	64 e0       	ldi	r22, 0x04	; 4
    3728:	41 e0       	ldi	r20, 0x01	; 1
    372a:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    372e:	28 2f       	mov	r18, r24
    3730:	30 e0       	ldi	r19, 0x00	; 0
    3732:	40 e0       	ldi	r20, 0x00	; 0
    3734:	50 e0       	ldi	r21, 0x00	; 0
    3736:	80 91 78 01 	lds	r24, 0x0178
    373a:	90 91 79 01 	lds	r25, 0x0179
    373e:	a0 91 7a 01 	lds	r26, 0x017A
    3742:	b0 91 7b 01 	lds	r27, 0x017B
    3746:	82 2b       	or	r24, r18
    3748:	93 2b       	or	r25, r19
    374a:	a4 2b       	or	r26, r20
    374c:	b5 2b       	or	r27, r21
    374e:	80 93 78 01 	sts	0x0178, r24
    3752:	90 93 79 01 	sts	0x0179, r25
    3756:	a0 93 7a 01 	sts	0x017A, r26
    375a:	b0 93 7b 01 	sts	0x017B, r27
		Local_u32Check |= (DIO_enuSetPinDir(KPD_COL1_PORT, KPD_COL1_PIN, DIO_u8OUTPUT) << 3);
    375e:	80 e0       	ldi	r24, 0x00	; 0
    3760:	65 e0       	ldi	r22, 0x05	; 5
    3762:	41 e0       	ldi	r20, 0x01	; 1
    3764:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    3768:	88 2f       	mov	r24, r24
    376a:	90 e0       	ldi	r25, 0x00	; 0
    376c:	88 0f       	add	r24, r24
    376e:	99 1f       	adc	r25, r25
    3770:	88 0f       	add	r24, r24
    3772:	99 1f       	adc	r25, r25
    3774:	88 0f       	add	r24, r24
    3776:	99 1f       	adc	r25, r25
    3778:	9c 01       	movw	r18, r24
    377a:	44 27       	eor	r20, r20
    377c:	37 fd       	sbrc	r19, 7
    377e:	40 95       	com	r20
    3780:	54 2f       	mov	r21, r20
    3782:	80 91 78 01 	lds	r24, 0x0178
    3786:	90 91 79 01 	lds	r25, 0x0179
    378a:	a0 91 7a 01 	lds	r26, 0x017A
    378e:	b0 91 7b 01 	lds	r27, 0x017B
    3792:	82 2b       	or	r24, r18
    3794:	93 2b       	or	r25, r19
    3796:	a4 2b       	or	r26, r20
    3798:	b5 2b       	or	r27, r21
    379a:	80 93 78 01 	sts	0x0178, r24
    379e:	90 93 79 01 	sts	0x0179, r25
    37a2:	a0 93 7a 01 	sts	0x017A, r26
    37a6:	b0 93 7b 01 	sts	0x017B, r27
		Local_u32Check |= (DIO_enuSetPinDir(KPD_COL2_PORT, KPD_COL2_PIN, DIO_u8OUTPUT) << 6);
    37aa:	80 e0       	ldi	r24, 0x00	; 0
    37ac:	66 e0       	ldi	r22, 0x06	; 6
    37ae:	41 e0       	ldi	r20, 0x01	; 1
    37b0:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    37b4:	88 2f       	mov	r24, r24
    37b6:	90 e0       	ldi	r25, 0x00	; 0
    37b8:	00 24       	eor	r0, r0
    37ba:	96 95       	lsr	r25
    37bc:	87 95       	ror	r24
    37be:	07 94       	ror	r0
    37c0:	96 95       	lsr	r25
    37c2:	87 95       	ror	r24
    37c4:	07 94       	ror	r0
    37c6:	98 2f       	mov	r25, r24
    37c8:	80 2d       	mov	r24, r0
    37ca:	9c 01       	movw	r18, r24
    37cc:	44 27       	eor	r20, r20
    37ce:	37 fd       	sbrc	r19, 7
    37d0:	40 95       	com	r20
    37d2:	54 2f       	mov	r21, r20
    37d4:	80 91 78 01 	lds	r24, 0x0178
    37d8:	90 91 79 01 	lds	r25, 0x0179
    37dc:	a0 91 7a 01 	lds	r26, 0x017A
    37e0:	b0 91 7b 01 	lds	r27, 0x017B
    37e4:	82 2b       	or	r24, r18
    37e6:	93 2b       	or	r25, r19
    37e8:	a4 2b       	or	r26, r20
    37ea:	b5 2b       	or	r27, r21
    37ec:	80 93 78 01 	sts	0x0178, r24
    37f0:	90 93 79 01 	sts	0x0179, r25
    37f4:	a0 93 7a 01 	sts	0x017A, r26
    37f8:	b0 93 7b 01 	sts	0x017B, r27
		Local_u32Check |= ((u32)DIO_enuSetPinDir(KPD_COL3_PORT, KPD_COL3_PIN, DIO_u8OUTPUT) << 9);
    37fc:	80 e0       	ldi	r24, 0x00	; 0
    37fe:	67 e0       	ldi	r22, 0x07	; 7
    3800:	41 e0       	ldi	r20, 0x01	; 1
    3802:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    3806:	88 2f       	mov	r24, r24
    3808:	90 e0       	ldi	r25, 0x00	; 0
    380a:	a0 e0       	ldi	r26, 0x00	; 0
    380c:	b0 e0       	ldi	r27, 0x00	; 0
    380e:	9c 01       	movw	r18, r24
    3810:	ad 01       	movw	r20, r26
    3812:	01 2e       	mov	r0, r17
    3814:	19 e0       	ldi	r17, 0x09	; 9
    3816:	22 0f       	add	r18, r18
    3818:	33 1f       	adc	r19, r19
    381a:	44 1f       	adc	r20, r20
    381c:	55 1f       	adc	r21, r21
    381e:	1a 95       	dec	r17
    3820:	d1 f7       	brne	.-12     	; 0x3816 <Keypad_enuInit+0x108>
    3822:	10 2d       	mov	r17, r0
    3824:	80 91 78 01 	lds	r24, 0x0178
    3828:	90 91 79 01 	lds	r25, 0x0179
    382c:	a0 91 7a 01 	lds	r26, 0x017A
    3830:	b0 91 7b 01 	lds	r27, 0x017B
    3834:	82 2b       	or	r24, r18
    3836:	93 2b       	or	r25, r19
    3838:	a4 2b       	or	r26, r20
    383a:	b5 2b       	or	r27, r21
    383c:	80 93 78 01 	sts	0x0178, r24
    3840:	90 93 79 01 	sts	0x0179, r25
    3844:	a0 93 7a 01 	sts	0x017A, r26
    3848:	b0 93 7b 01 	sts	0x017B, r27

		/* Set Column Pins Value as High */
		DIO_enuSetPinVal(KPD_COL0_PORT, KPD_COL0_PIN, DIO_u8HIGH);
    384c:	80 e0       	ldi	r24, 0x00	; 0
    384e:	64 e0       	ldi	r22, 0x04	; 4
    3850:	41 e0       	ldi	r20, 0x01	; 1
    3852:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
		DIO_enuSetPinVal(KPD_COL1_PORT, KPD_COL1_PIN, DIO_u8HIGH);
    3856:	80 e0       	ldi	r24, 0x00	; 0
    3858:	65 e0       	ldi	r22, 0x05	; 5
    385a:	41 e0       	ldi	r20, 0x01	; 1
    385c:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
		DIO_enuSetPinVal(KPD_COL2_PORT, KPD_COL2_PIN, DIO_u8HIGH);
    3860:	80 e0       	ldi	r24, 0x00	; 0
    3862:	66 e0       	ldi	r22, 0x06	; 6
    3864:	41 e0       	ldi	r20, 0x01	; 1
    3866:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
		DIO_enuSetPinVal(KPD_COL3_PORT, KPD_COL3_PIN, DIO_u8HIGH);
    386a:	80 e0       	ldi	r24, 0x00	; 0
    386c:	67 e0       	ldi	r22, 0x07	; 7
    386e:	41 e0       	ldi	r20, 0x01	; 1
    3870:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>


		/* Set Row Pins as Input */
		Local_u32Check |= ((u32)DIO_enuSetPinDir(KPD_ROW0_PORT, KPD_ROW0_PIN, DIO_u8INPUT) << 12);
    3874:	81 e0       	ldi	r24, 0x01	; 1
    3876:	67 e0       	ldi	r22, 0x07	; 7
    3878:	40 e0       	ldi	r20, 0x00	; 0
    387a:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    387e:	88 2f       	mov	r24, r24
    3880:	90 e0       	ldi	r25, 0x00	; 0
    3882:	a0 e0       	ldi	r26, 0x00	; 0
    3884:	b0 e0       	ldi	r27, 0x00	; 0
    3886:	9c 01       	movw	r18, r24
    3888:	ad 01       	movw	r20, r26
    388a:	01 2e       	mov	r0, r17
    388c:	1c e0       	ldi	r17, 0x0C	; 12
    388e:	22 0f       	add	r18, r18
    3890:	33 1f       	adc	r19, r19
    3892:	44 1f       	adc	r20, r20
    3894:	55 1f       	adc	r21, r21
    3896:	1a 95       	dec	r17
    3898:	d1 f7       	brne	.-12     	; 0x388e <Keypad_enuInit+0x180>
    389a:	10 2d       	mov	r17, r0
    389c:	80 91 78 01 	lds	r24, 0x0178
    38a0:	90 91 79 01 	lds	r25, 0x0179
    38a4:	a0 91 7a 01 	lds	r26, 0x017A
    38a8:	b0 91 7b 01 	lds	r27, 0x017B
    38ac:	82 2b       	or	r24, r18
    38ae:	93 2b       	or	r25, r19
    38b0:	a4 2b       	or	r26, r20
    38b2:	b5 2b       	or	r27, r21
    38b4:	80 93 78 01 	sts	0x0178, r24
    38b8:	90 93 79 01 	sts	0x0179, r25
    38bc:	a0 93 7a 01 	sts	0x017A, r26
    38c0:	b0 93 7b 01 	sts	0x017B, r27
		Local_u32Check |= ((u32)DIO_enuSetPinDir(KPD_ROW1_PORT, KPD_ROW1_PIN, DIO_u8INPUT) << 15);
    38c4:	81 e0       	ldi	r24, 0x01	; 1
    38c6:	66 e0       	ldi	r22, 0x06	; 6
    38c8:	40 e0       	ldi	r20, 0x00	; 0
    38ca:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    38ce:	88 2f       	mov	r24, r24
    38d0:	90 e0       	ldi	r25, 0x00	; 0
    38d2:	a0 e0       	ldi	r26, 0x00	; 0
    38d4:	b0 e0       	ldi	r27, 0x00	; 0
    38d6:	9c 01       	movw	r18, r24
    38d8:	ad 01       	movw	r20, r26
    38da:	01 2e       	mov	r0, r17
    38dc:	1f e0       	ldi	r17, 0x0F	; 15
    38de:	22 0f       	add	r18, r18
    38e0:	33 1f       	adc	r19, r19
    38e2:	44 1f       	adc	r20, r20
    38e4:	55 1f       	adc	r21, r21
    38e6:	1a 95       	dec	r17
    38e8:	d1 f7       	brne	.-12     	; 0x38de <Keypad_enuInit+0x1d0>
    38ea:	10 2d       	mov	r17, r0
    38ec:	80 91 78 01 	lds	r24, 0x0178
    38f0:	90 91 79 01 	lds	r25, 0x0179
    38f4:	a0 91 7a 01 	lds	r26, 0x017A
    38f8:	b0 91 7b 01 	lds	r27, 0x017B
    38fc:	82 2b       	or	r24, r18
    38fe:	93 2b       	or	r25, r19
    3900:	a4 2b       	or	r26, r20
    3902:	b5 2b       	or	r27, r21
    3904:	80 93 78 01 	sts	0x0178, r24
    3908:	90 93 79 01 	sts	0x0179, r25
    390c:	a0 93 7a 01 	sts	0x017A, r26
    3910:	b0 93 7b 01 	sts	0x017B, r27
		Local_u32Check |= ((u32)DIO_enuSetPinDir(KPD_ROW2_PORT, KPD_ROW2_PIN, DIO_u8INPUT) << 18);
    3914:	81 e0       	ldi	r24, 0x01	; 1
    3916:	65 e0       	ldi	r22, 0x05	; 5
    3918:	40 e0       	ldi	r20, 0x00	; 0
    391a:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    391e:	88 2f       	mov	r24, r24
    3920:	90 e0       	ldi	r25, 0x00	; 0
    3922:	a0 e0       	ldi	r26, 0x00	; 0
    3924:	b0 e0       	ldi	r27, 0x00	; 0
    3926:	9c 01       	movw	r18, r24
    3928:	ad 01       	movw	r20, r26
    392a:	01 2e       	mov	r0, r17
    392c:	12 e1       	ldi	r17, 0x12	; 18
    392e:	22 0f       	add	r18, r18
    3930:	33 1f       	adc	r19, r19
    3932:	44 1f       	adc	r20, r20
    3934:	55 1f       	adc	r21, r21
    3936:	1a 95       	dec	r17
    3938:	d1 f7       	brne	.-12     	; 0x392e <Keypad_enuInit+0x220>
    393a:	10 2d       	mov	r17, r0
    393c:	80 91 78 01 	lds	r24, 0x0178
    3940:	90 91 79 01 	lds	r25, 0x0179
    3944:	a0 91 7a 01 	lds	r26, 0x017A
    3948:	b0 91 7b 01 	lds	r27, 0x017B
    394c:	82 2b       	or	r24, r18
    394e:	93 2b       	or	r25, r19
    3950:	a4 2b       	or	r26, r20
    3952:	b5 2b       	or	r27, r21
    3954:	80 93 78 01 	sts	0x0178, r24
    3958:	90 93 79 01 	sts	0x0179, r25
    395c:	a0 93 7a 01 	sts	0x017A, r26
    3960:	b0 93 7b 01 	sts	0x017B, r27
		Local_u32Check |= ((u32)DIO_enuSetPinDir(KPD_ROW3_PORT, KPD_ROW3_PIN, DIO_u8INPUT) << 21);
    3964:	81 e0       	ldi	r24, 0x01	; 1
    3966:	64 e0       	ldi	r22, 0x04	; 4
    3968:	40 e0       	ldi	r20, 0x00	; 0
    396a:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    396e:	88 2f       	mov	r24, r24
    3970:	90 e0       	ldi	r25, 0x00	; 0
    3972:	a0 e0       	ldi	r26, 0x00	; 0
    3974:	b0 e0       	ldi	r27, 0x00	; 0
    3976:	9c 01       	movw	r18, r24
    3978:	ad 01       	movw	r20, r26
    397a:	01 2e       	mov	r0, r17
    397c:	15 e1       	ldi	r17, 0x15	; 21
    397e:	22 0f       	add	r18, r18
    3980:	33 1f       	adc	r19, r19
    3982:	44 1f       	adc	r20, r20
    3984:	55 1f       	adc	r21, r21
    3986:	1a 95       	dec	r17
    3988:	d1 f7       	brne	.-12     	; 0x397e <Keypad_enuInit+0x270>
    398a:	10 2d       	mov	r17, r0
    398c:	80 91 78 01 	lds	r24, 0x0178
    3990:	90 91 79 01 	lds	r25, 0x0179
    3994:	a0 91 7a 01 	lds	r26, 0x017A
    3998:	b0 91 7b 01 	lds	r27, 0x017B
    399c:	82 2b       	or	r24, r18
    399e:	93 2b       	or	r25, r19
    39a0:	a4 2b       	or	r26, r20
    39a2:	b5 2b       	or	r27, r21
    39a4:	80 93 78 01 	sts	0x0178, r24
    39a8:	90 93 79 01 	sts	0x0179, r25
    39ac:	a0 93 7a 01 	sts	0x017A, r26
    39b0:	b0 93 7b 01 	sts	0x017B, r27

		/* Set Row Pins Value as Pulled_up */
		DIO_enuSetPinVal(KPD_ROW0_PORT, KPD_ROW0_PIN, DIO_u8PULL_UP);
    39b4:	81 e0       	ldi	r24, 0x01	; 1
    39b6:	67 e0       	ldi	r22, 0x07	; 7
    39b8:	41 e0       	ldi	r20, 0x01	; 1
    39ba:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
		DIO_enuSetPinVal(KPD_ROW1_PORT, KPD_ROW1_PIN, DIO_u8PULL_UP);
    39be:	81 e0       	ldi	r24, 0x01	; 1
    39c0:	66 e0       	ldi	r22, 0x06	; 6
    39c2:	41 e0       	ldi	r20, 0x01	; 1
    39c4:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
		DIO_enuSetPinVal(KPD_ROW2_PORT, KPD_ROW2_PIN, DIO_u8PULL_UP);
    39c8:	81 e0       	ldi	r24, 0x01	; 1
    39ca:	65 e0       	ldi	r22, 0x05	; 5
    39cc:	41 e0       	ldi	r20, 0x01	; 1
    39ce:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
		DIO_enuSetPinVal(KPD_ROW3_PORT, KPD_ROW3_PIN, DIO_u8PULL_UP);
    39d2:	81 e0       	ldi	r24, 0x01	; 1
    39d4:	64 e0       	ldi	r22, 0x04	; 4
    39d6:	41 e0       	ldi	r20, 0x01	; 1
    39d8:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>

		u8 Local_u8Iterator;
		for(Local_u8Iterator = 0; Local_u8Iterator <= 21; Local_u8Iterator += 3)
    39dc:	19 82       	std	Y+1, r1	; 0x01
    39de:	24 c0       	rjmp	.+72     	; 0x3a28 <Keypad_enuInit+0x31a>
		{
			if(( (Local_u32Check >> Local_u8Iterator) & (0b111) ) != ES_OK)
    39e0:	20 91 78 01 	lds	r18, 0x0178
    39e4:	30 91 79 01 	lds	r19, 0x0179
    39e8:	40 91 7a 01 	lds	r20, 0x017A
    39ec:	50 91 7b 01 	lds	r21, 0x017B
    39f0:	89 81       	ldd	r24, Y+1	; 0x01
    39f2:	88 2f       	mov	r24, r24
    39f4:	90 e0       	ldi	r25, 0x00	; 0
    39f6:	79 01       	movw	r14, r18
    39f8:	8a 01       	movw	r16, r20
    39fa:	04 c0       	rjmp	.+8      	; 0x3a04 <Keypad_enuInit+0x2f6>
    39fc:	16 95       	lsr	r17
    39fe:	07 95       	ror	r16
    3a00:	f7 94       	ror	r15
    3a02:	e7 94       	ror	r14
    3a04:	8a 95       	dec	r24
    3a06:	d2 f7       	brpl	.-12     	; 0x39fc <Keypad_enuInit+0x2ee>
    3a08:	d8 01       	movw	r26, r16
    3a0a:	c7 01       	movw	r24, r14
    3a0c:	87 70       	andi	r24, 0x07	; 7
    3a0e:	90 70       	andi	r25, 0x00	; 0
    3a10:	a0 70       	andi	r26, 0x00	; 0
    3a12:	b0 70       	andi	r27, 0x00	; 0
    3a14:	81 30       	cpi	r24, 0x01	; 1
    3a16:	91 05       	cpc	r25, r1
    3a18:	a1 05       	cpc	r26, r1
    3a1a:	b1 05       	cpc	r27, r1
    3a1c:	11 f0       	breq	.+4      	; 0x3a22 <Keypad_enuInit+0x314>
			{
				return ES_NOK;
    3a1e:	1b 82       	std	Y+3, r1	; 0x03
    3a20:	0a c0       	rjmp	.+20     	; 0x3a36 <Keypad_enuInit+0x328>
		DIO_enuSetPinVal(KPD_ROW1_PORT, KPD_ROW1_PIN, DIO_u8PULL_UP);
		DIO_enuSetPinVal(KPD_ROW2_PORT, KPD_ROW2_PIN, DIO_u8PULL_UP);
		DIO_enuSetPinVal(KPD_ROW3_PORT, KPD_ROW3_PIN, DIO_u8PULL_UP);

		u8 Local_u8Iterator;
		for(Local_u8Iterator = 0; Local_u8Iterator <= 21; Local_u8Iterator += 3)
    3a22:	89 81       	ldd	r24, Y+1	; 0x01
    3a24:	8d 5f       	subi	r24, 0xFD	; 253
    3a26:	89 83       	std	Y+1, r24	; 0x01
    3a28:	89 81       	ldd	r24, Y+1	; 0x01
    3a2a:	86 31       	cpi	r24, 0x16	; 22
    3a2c:	c8 f2       	brcs	.-78     	; 0x39e0 <Keypad_enuInit+0x2d2>
			{
				return ES_NOK;
			}
		}

		Local_enuErrorState = ES_OK;
    3a2e:	81 e0       	ldi	r24, 0x01	; 1
    3a30:	8a 83       	std	Y+2, r24	; 0x02
		return Local_enuErrorState;
    3a32:	fa 80       	ldd	r15, Y+2	; 0x02
    3a34:	fb 82       	std	Y+3, r15	; 0x03
    3a36:	8b 81       	ldd	r24, Y+3	; 0x03
	}
}
    3a38:	0f 90       	pop	r0
    3a3a:	0f 90       	pop	r0
    3a3c:	0f 90       	pop	r0
    3a3e:	cf 91       	pop	r28
    3a40:	df 91       	pop	r29
    3a42:	1f 91       	pop	r17
    3a44:	0f 91       	pop	r16
    3a46:	ff 90       	pop	r15
    3a48:	ef 90       	pop	r14
    3a4a:	08 95       	ret

00003a4c <Keypad_enuGetPressedKey>:


ES_t Keypad_enuGetPressedKey(u8* Copy_pu8Key)
{
    3a4c:	df 93       	push	r29
    3a4e:	cf 93       	push	r28
    3a50:	cd b7       	in	r28, 0x3d	; 61
    3a52:	de b7       	in	r29, 0x3e	; 62
    3a54:	a5 97       	sbiw	r28, 0x25	; 37
    3a56:	0f b6       	in	r0, 0x3f	; 63
    3a58:	f8 94       	cli
    3a5a:	de bf       	out	0x3e, r29	; 62
    3a5c:	0f be       	out	0x3f, r0	; 63
    3a5e:	cd bf       	out	0x3d, r28	; 61
    3a60:	9c a3       	std	Y+36, r25	; 0x24
    3a62:	8b a3       	std	Y+35, r24	; 0x23
	ES_t Local_enuErrorState = ES_NOK;
    3a64:	19 8a       	std	Y+17, r1	; 0x11

	u8 Local_u8Row, Local_u8col, Local_u8pinval;

	*Copy_pu8Key =  DEFAULT_KEY;
    3a66:	eb a1       	ldd	r30, Y+35	; 0x23
    3a68:	fc a1       	ldd	r31, Y+36	; 0x24
    3a6a:	8f ef       	ldi	r24, 0xFF	; 255
    3a6c:	80 83       	st	Z, r24

	u8 Local_Au8ColPort[NUM_OF_COL] = KPD_COL_PORTS;
    3a6e:	1b 8a       	std	Y+19, r1	; 0x13
    3a70:	1c 8a       	std	Y+20, r1	; 0x14
    3a72:	1d 8a       	std	Y+21, r1	; 0x15
    3a74:	1e 8a       	std	Y+22, r1	; 0x16
	u8 Local_Au8ColPins[NUM_OF_COL] = KPD_COL_PINS;
    3a76:	84 e0       	ldi	r24, 0x04	; 4
    3a78:	8f 8b       	std	Y+23, r24	; 0x17
    3a7a:	85 e0       	ldi	r24, 0x05	; 5
    3a7c:	88 8f       	std	Y+24, r24	; 0x18
    3a7e:	86 e0       	ldi	r24, 0x06	; 6
    3a80:	89 8f       	std	Y+25, r24	; 0x19
    3a82:	87 e0       	ldi	r24, 0x07	; 7
    3a84:	8a 8f       	std	Y+26, r24	; 0x1a

	u8 Local_Au8ROWPort[NUM_OF_ROW] = KPD_ROW_PORTS;
    3a86:	81 e0       	ldi	r24, 0x01	; 1
    3a88:	8b 8f       	std	Y+27, r24	; 0x1b
    3a8a:	81 e0       	ldi	r24, 0x01	; 1
    3a8c:	8c 8f       	std	Y+28, r24	; 0x1c
    3a8e:	81 e0       	ldi	r24, 0x01	; 1
    3a90:	8d 8f       	std	Y+29, r24	; 0x1d
    3a92:	81 e0       	ldi	r24, 0x01	; 1
    3a94:	8e 8f       	std	Y+30, r24	; 0x1e
	u8 Local_Au8ROWPins[NUM_OF_ROW] = KPD_ROW_PINS;
    3a96:	87 e0       	ldi	r24, 0x07	; 7
    3a98:	8f 8f       	std	Y+31, r24	; 0x1f
    3a9a:	86 e0       	ldi	r24, 0x06	; 6
    3a9c:	88 a3       	std	Y+32, r24	; 0x20
    3a9e:	85 e0       	ldi	r24, 0x05	; 5
    3aa0:	89 a3       	std	Y+33, r24	; 0x21
    3aa2:	84 e0       	ldi	r24, 0x04	; 4
    3aa4:	8a a3       	std	Y+34, r24	; 0x22



	for(Local_u8col = 0; Local_u8col < NUM_OF_COL; ++Local_u8col)
    3aa6:	1f 86       	std	Y+15, r1	; 0x0f
    3aa8:	1d c1       	rjmp	.+570    	; 0x3ce4 <Keypad_enuGetPressedKey+0x298>
	{

		Local_enuErrorState = DIO_enuSetPinVal(Local_Au8ColPort[Local_u8col], Local_Au8ColPins[Local_u8col], DIO_u8LOW );
    3aaa:	8f 85       	ldd	r24, Y+15	; 0x0f
    3aac:	28 2f       	mov	r18, r24
    3aae:	30 e0       	ldi	r19, 0x00	; 0
    3ab0:	ce 01       	movw	r24, r28
    3ab2:	43 96       	adiw	r24, 0x13	; 19
    3ab4:	fc 01       	movw	r30, r24
    3ab6:	e2 0f       	add	r30, r18
    3ab8:	f3 1f       	adc	r31, r19
    3aba:	40 81       	ld	r20, Z
    3abc:	8f 85       	ldd	r24, Y+15	; 0x0f
    3abe:	28 2f       	mov	r18, r24
    3ac0:	30 e0       	ldi	r19, 0x00	; 0
    3ac2:	ce 01       	movw	r24, r28
    3ac4:	47 96       	adiw	r24, 0x17	; 23
    3ac6:	fc 01       	movw	r30, r24
    3ac8:	e2 0f       	add	r30, r18
    3aca:	f3 1f       	adc	r31, r19
    3acc:	90 81       	ld	r25, Z
    3ace:	84 2f       	mov	r24, r20
    3ad0:	69 2f       	mov	r22, r25
    3ad2:	40 e0       	ldi	r20, 0x00	; 0
    3ad4:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    3ad8:	89 8b       	std	Y+17, r24	; 0x11
		if(Local_enuErrorState != ES_OK) return Local_enuErrorState;
    3ada:	89 89       	ldd	r24, Y+17	; 0x11
    3adc:	81 30       	cpi	r24, 0x01	; 1
    3ade:	19 f0       	breq	.+6      	; 0x3ae6 <Keypad_enuGetPressedKey+0x9a>
    3ae0:	89 89       	ldd	r24, Y+17	; 0x11
    3ae2:	8d a3       	std	Y+37, r24	; 0x25
    3ae4:	05 c1       	rjmp	.+522    	; 0x3cf0 <Keypad_enuGetPressedKey+0x2a4>

		for(Local_u8Row = 0; Local_u8Row < NUM_OF_ROW; ++Local_u8Row)
    3ae6:	18 8a       	std	Y+16, r1	; 0x10
    3ae8:	d8 c0       	rjmp	.+432    	; 0x3c9a <Keypad_enuGetPressedKey+0x24e>
		{
			Local_enuErrorState = DIO_enuGetPinVal(Local_Au8ROWPort[Local_u8Row], Local_Au8ROWPins[Local_u8Row] ,&Local_u8pinval);
    3aea:	88 89       	ldd	r24, Y+16	; 0x10
    3aec:	28 2f       	mov	r18, r24
    3aee:	30 e0       	ldi	r19, 0x00	; 0
    3af0:	ce 01       	movw	r24, r28
    3af2:	4b 96       	adiw	r24, 0x1b	; 27
    3af4:	fc 01       	movw	r30, r24
    3af6:	e2 0f       	add	r30, r18
    3af8:	f3 1f       	adc	r31, r19
    3afa:	40 81       	ld	r20, Z
    3afc:	88 89       	ldd	r24, Y+16	; 0x10
    3afe:	28 2f       	mov	r18, r24
    3b00:	30 e0       	ldi	r19, 0x00	; 0
    3b02:	ce 01       	movw	r24, r28
    3b04:	4f 96       	adiw	r24, 0x1f	; 31
    3b06:	fc 01       	movw	r30, r24
    3b08:	e2 0f       	add	r30, r18
    3b0a:	f3 1f       	adc	r31, r19
    3b0c:	90 81       	ld	r25, Z
    3b0e:	9e 01       	movw	r18, r28
    3b10:	2e 5e       	subi	r18, 0xEE	; 238
    3b12:	3f 4f       	sbci	r19, 0xFF	; 255
    3b14:	84 2f       	mov	r24, r20
    3b16:	69 2f       	mov	r22, r25
    3b18:	a9 01       	movw	r20, r18
    3b1a:	0e 94 e9 1a 	call	0x35d2	; 0x35d2 <DIO_enuGetPinVal>
    3b1e:	89 8b       	std	Y+17, r24	; 0x11
			if(Local_enuErrorState != ES_OK) return Local_enuErrorState;
    3b20:	89 89       	ldd	r24, Y+17	; 0x11
    3b22:	81 30       	cpi	r24, 0x01	; 1
    3b24:	19 f0       	breq	.+6      	; 0x3b2c <Keypad_enuGetPressedKey+0xe0>
    3b26:	89 89       	ldd	r24, Y+17	; 0x11
    3b28:	8d a3       	std	Y+37, r24	; 0x25
    3b2a:	e2 c0       	rjmp	.+452    	; 0x3cf0 <Keypad_enuGetPressedKey+0x2a4>

			if(!Local_u8pinval)
    3b2c:	8a 89       	ldd	r24, Y+18	; 0x12
    3b2e:	88 23       	and	r24, r24
    3b30:	09 f0       	breq	.+2      	; 0x3b34 <Keypad_enuGetPressedKey+0xe8>
    3b32:	a8 c0       	rjmp	.+336    	; 0x3c84 <Keypad_enuGetPressedKey+0x238>
    3b34:	80 e0       	ldi	r24, 0x00	; 0
    3b36:	90 e0       	ldi	r25, 0x00	; 0
    3b38:	a0 e2       	ldi	r26, 0x20	; 32
    3b3a:	b1 e4       	ldi	r27, 0x41	; 65
    3b3c:	8b 87       	std	Y+11, r24	; 0x0b
    3b3e:	9c 87       	std	Y+12, r25	; 0x0c
    3b40:	ad 87       	std	Y+13, r26	; 0x0d
    3b42:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b44:	6b 85       	ldd	r22, Y+11	; 0x0b
    3b46:	7c 85       	ldd	r23, Y+12	; 0x0c
    3b48:	8d 85       	ldd	r24, Y+13	; 0x0d
    3b4a:	9e 85       	ldd	r25, Y+14	; 0x0e
    3b4c:	20 e0       	ldi	r18, 0x00	; 0
    3b4e:	30 e0       	ldi	r19, 0x00	; 0
    3b50:	4a e7       	ldi	r20, 0x7A	; 122
    3b52:	53 e4       	ldi	r21, 0x43	; 67
    3b54:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    3b58:	dc 01       	movw	r26, r24
    3b5a:	cb 01       	movw	r24, r22
    3b5c:	8f 83       	std	Y+7, r24	; 0x07
    3b5e:	98 87       	std	Y+8, r25	; 0x08
    3b60:	a9 87       	std	Y+9, r26	; 0x09
    3b62:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3b64:	6f 81       	ldd	r22, Y+7	; 0x07
    3b66:	78 85       	ldd	r23, Y+8	; 0x08
    3b68:	89 85       	ldd	r24, Y+9	; 0x09
    3b6a:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b6c:	20 e0       	ldi	r18, 0x00	; 0
    3b6e:	30 e0       	ldi	r19, 0x00	; 0
    3b70:	40 e8       	ldi	r20, 0x80	; 128
    3b72:	5f e3       	ldi	r21, 0x3F	; 63
    3b74:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <__ltsf2>
    3b78:	88 23       	and	r24, r24
    3b7a:	2c f4       	brge	.+10     	; 0x3b86 <Keypad_enuGetPressedKey+0x13a>
		__ticks = 1;
    3b7c:	81 e0       	ldi	r24, 0x01	; 1
    3b7e:	90 e0       	ldi	r25, 0x00	; 0
    3b80:	9e 83       	std	Y+6, r25	; 0x06
    3b82:	8d 83       	std	Y+5, r24	; 0x05
    3b84:	3f c0       	rjmp	.+126    	; 0x3c04 <Keypad_enuGetPressedKey+0x1b8>
	else if (__tmp > 65535)
    3b86:	6f 81       	ldd	r22, Y+7	; 0x07
    3b88:	78 85       	ldd	r23, Y+8	; 0x08
    3b8a:	89 85       	ldd	r24, Y+9	; 0x09
    3b8c:	9a 85       	ldd	r25, Y+10	; 0x0a
    3b8e:	20 e0       	ldi	r18, 0x00	; 0
    3b90:	3f ef       	ldi	r19, 0xFF	; 255
    3b92:	4f e7       	ldi	r20, 0x7F	; 127
    3b94:	57 e4       	ldi	r21, 0x47	; 71
    3b96:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <__gtsf2>
    3b9a:	18 16       	cp	r1, r24
    3b9c:	4c f5       	brge	.+82     	; 0x3bf0 <Keypad_enuGetPressedKey+0x1a4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b9e:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ba0:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ba2:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ba4:	9e 85       	ldd	r25, Y+14	; 0x0e
    3ba6:	20 e0       	ldi	r18, 0x00	; 0
    3ba8:	30 e0       	ldi	r19, 0x00	; 0
    3baa:	40 e2       	ldi	r20, 0x20	; 32
    3bac:	51 e4       	ldi	r21, 0x41	; 65
    3bae:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    3bb2:	dc 01       	movw	r26, r24
    3bb4:	cb 01       	movw	r24, r22
    3bb6:	bc 01       	movw	r22, r24
    3bb8:	cd 01       	movw	r24, r26
    3bba:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3bbe:	dc 01       	movw	r26, r24
    3bc0:	cb 01       	movw	r24, r22
    3bc2:	9e 83       	std	Y+6, r25	; 0x06
    3bc4:	8d 83       	std	Y+5, r24	; 0x05
    3bc6:	0f c0       	rjmp	.+30     	; 0x3be6 <Keypad_enuGetPressedKey+0x19a>
    3bc8:	89 e1       	ldi	r24, 0x19	; 25
    3bca:	90 e0       	ldi	r25, 0x00	; 0
    3bcc:	9c 83       	std	Y+4, r25	; 0x04
    3bce:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3bd0:	8b 81       	ldd	r24, Y+3	; 0x03
    3bd2:	9c 81       	ldd	r25, Y+4	; 0x04
    3bd4:	01 97       	sbiw	r24, 0x01	; 1
    3bd6:	f1 f7       	brne	.-4      	; 0x3bd4 <Keypad_enuGetPressedKey+0x188>
    3bd8:	9c 83       	std	Y+4, r25	; 0x04
    3bda:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bdc:	8d 81       	ldd	r24, Y+5	; 0x05
    3bde:	9e 81       	ldd	r25, Y+6	; 0x06
    3be0:	01 97       	sbiw	r24, 0x01	; 1
    3be2:	9e 83       	std	Y+6, r25	; 0x06
    3be4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3be6:	8d 81       	ldd	r24, Y+5	; 0x05
    3be8:	9e 81       	ldd	r25, Y+6	; 0x06
    3bea:	00 97       	sbiw	r24, 0x00	; 0
    3bec:	69 f7       	brne	.-38     	; 0x3bc8 <Keypad_enuGetPressedKey+0x17c>
    3bee:	14 c0       	rjmp	.+40     	; 0x3c18 <Keypad_enuGetPressedKey+0x1cc>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3bf0:	6f 81       	ldd	r22, Y+7	; 0x07
    3bf2:	78 85       	ldd	r23, Y+8	; 0x08
    3bf4:	89 85       	ldd	r24, Y+9	; 0x09
    3bf6:	9a 85       	ldd	r25, Y+10	; 0x0a
    3bf8:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    3bfc:	dc 01       	movw	r26, r24
    3bfe:	cb 01       	movw	r24, r22
    3c00:	9e 83       	std	Y+6, r25	; 0x06
    3c02:	8d 83       	std	Y+5, r24	; 0x05
    3c04:	8d 81       	ldd	r24, Y+5	; 0x05
    3c06:	9e 81       	ldd	r25, Y+6	; 0x06
    3c08:	9a 83       	std	Y+2, r25	; 0x02
    3c0a:	89 83       	std	Y+1, r24	; 0x01
    3c0c:	89 81       	ldd	r24, Y+1	; 0x01
    3c0e:	9a 81       	ldd	r25, Y+2	; 0x02
    3c10:	01 97       	sbiw	r24, 0x01	; 1
    3c12:	f1 f7       	brne	.-4      	; 0x3c10 <Keypad_enuGetPressedKey+0x1c4>
    3c14:	9a 83       	std	Y+2, r25	; 0x02
    3c16:	89 83       	std	Y+1, r24	; 0x01
			{
				_delay_ms(10);
				if(!Local_u8pinval)
    3c18:	8a 89       	ldd	r24, Y+18	; 0x12
    3c1a:	88 23       	and	r24, r24
    3c1c:	99 f5       	brne	.+102    	; 0x3c84 <Keypad_enuGetPressedKey+0x238>
				{

					*Copy_pu8Key = Keypad_u8Buttons[Local_u8Row][Local_u8col];
    3c1e:	88 89       	ldd	r24, Y+16	; 0x10
    3c20:	48 2f       	mov	r20, r24
    3c22:	50 e0       	ldi	r21, 0x00	; 0
    3c24:	8f 85       	ldd	r24, Y+15	; 0x0f
    3c26:	28 2f       	mov	r18, r24
    3c28:	30 e0       	ldi	r19, 0x00	; 0
    3c2a:	ca 01       	movw	r24, r20
    3c2c:	88 0f       	add	r24, r24
    3c2e:	99 1f       	adc	r25, r25
    3c30:	88 0f       	add	r24, r24
    3c32:	99 1f       	adc	r25, r25
    3c34:	82 0f       	add	r24, r18
    3c36:	93 1f       	adc	r25, r19
    3c38:	fc 01       	movw	r30, r24
    3c3a:	e8 59       	subi	r30, 0x98	; 152
    3c3c:	fe 4f       	sbci	r31, 0xFE	; 254
    3c3e:	80 81       	ld	r24, Z
    3c40:	eb a1       	ldd	r30, Y+35	; 0x23
    3c42:	fc a1       	ldd	r31, Y+36	; 0x24
    3c44:	80 83       	st	Z, r24
    3c46:	1b c0       	rjmp	.+54     	; 0x3c7e <Keypad_enuGetPressedKey+0x232>

					while(!Local_u8pinval)
					{
						Local_enuErrorState = DIO_enuGetPinVal(Local_Au8ROWPort[Local_u8Row], Local_Au8ROWPins[Local_u8Row] ,&Local_u8pinval);
    3c48:	88 89       	ldd	r24, Y+16	; 0x10
    3c4a:	28 2f       	mov	r18, r24
    3c4c:	30 e0       	ldi	r19, 0x00	; 0
    3c4e:	ce 01       	movw	r24, r28
    3c50:	4b 96       	adiw	r24, 0x1b	; 27
    3c52:	fc 01       	movw	r30, r24
    3c54:	e2 0f       	add	r30, r18
    3c56:	f3 1f       	adc	r31, r19
    3c58:	40 81       	ld	r20, Z
    3c5a:	88 89       	ldd	r24, Y+16	; 0x10
    3c5c:	28 2f       	mov	r18, r24
    3c5e:	30 e0       	ldi	r19, 0x00	; 0
    3c60:	ce 01       	movw	r24, r28
    3c62:	4f 96       	adiw	r24, 0x1f	; 31
    3c64:	fc 01       	movw	r30, r24
    3c66:	e2 0f       	add	r30, r18
    3c68:	f3 1f       	adc	r31, r19
    3c6a:	90 81       	ld	r25, Z
    3c6c:	9e 01       	movw	r18, r28
    3c6e:	2e 5e       	subi	r18, 0xEE	; 238
    3c70:	3f 4f       	sbci	r19, 0xFF	; 255
    3c72:	84 2f       	mov	r24, r20
    3c74:	69 2f       	mov	r22, r25
    3c76:	a9 01       	movw	r20, r18
    3c78:	0e 94 e9 1a 	call	0x35d2	; 0x35d2 <DIO_enuGetPinVal>
    3c7c:	89 8b       	std	Y+17, r24	; 0x11
				if(!Local_u8pinval)
				{

					*Copy_pu8Key = Keypad_u8Buttons[Local_u8Row][Local_u8col];

					while(!Local_u8pinval)
    3c7e:	8a 89       	ldd	r24, Y+18	; 0x12
    3c80:	88 23       	and	r24, r24
    3c82:	11 f3       	breq	.-60     	; 0x3c48 <Keypad_enuGetPressedKey+0x1fc>
					}

				}
			}

			if(*Copy_pu8Key != DEFAULT_KEY)  return Local_enuErrorState;
    3c84:	eb a1       	ldd	r30, Y+35	; 0x23
    3c86:	fc a1       	ldd	r31, Y+36	; 0x24
    3c88:	80 81       	ld	r24, Z
    3c8a:	8f 3f       	cpi	r24, 0xFF	; 255
    3c8c:	19 f0       	breq	.+6      	; 0x3c94 <Keypad_enuGetPressedKey+0x248>
    3c8e:	89 89       	ldd	r24, Y+17	; 0x11
    3c90:	8d a3       	std	Y+37, r24	; 0x25
    3c92:	2e c0       	rjmp	.+92     	; 0x3cf0 <Keypad_enuGetPressedKey+0x2a4>
	{

		Local_enuErrorState = DIO_enuSetPinVal(Local_Au8ColPort[Local_u8col], Local_Au8ColPins[Local_u8col], DIO_u8LOW );
		if(Local_enuErrorState != ES_OK) return Local_enuErrorState;

		for(Local_u8Row = 0; Local_u8Row < NUM_OF_ROW; ++Local_u8Row)
    3c94:	88 89       	ldd	r24, Y+16	; 0x10
    3c96:	8f 5f       	subi	r24, 0xFF	; 255
    3c98:	88 8b       	std	Y+16, r24	; 0x10
    3c9a:	88 89       	ldd	r24, Y+16	; 0x10
    3c9c:	84 30       	cpi	r24, 0x04	; 4
    3c9e:	08 f4       	brcc	.+2      	; 0x3ca2 <Keypad_enuGetPressedKey+0x256>
    3ca0:	24 cf       	rjmp	.-440    	; 0x3aea <Keypad_enuGetPressedKey+0x9e>
			}

			if(*Copy_pu8Key != DEFAULT_KEY)  return Local_enuErrorState;
		}

		Local_enuErrorState = DIO_enuSetPinVal(Local_Au8ColPort[Local_u8col], Local_Au8ColPins[Local_u8col], DIO_u8HIGH );
    3ca2:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ca4:	28 2f       	mov	r18, r24
    3ca6:	30 e0       	ldi	r19, 0x00	; 0
    3ca8:	ce 01       	movw	r24, r28
    3caa:	43 96       	adiw	r24, 0x13	; 19
    3cac:	fc 01       	movw	r30, r24
    3cae:	e2 0f       	add	r30, r18
    3cb0:	f3 1f       	adc	r31, r19
    3cb2:	40 81       	ld	r20, Z
    3cb4:	8f 85       	ldd	r24, Y+15	; 0x0f
    3cb6:	28 2f       	mov	r18, r24
    3cb8:	30 e0       	ldi	r19, 0x00	; 0
    3cba:	ce 01       	movw	r24, r28
    3cbc:	47 96       	adiw	r24, 0x17	; 23
    3cbe:	fc 01       	movw	r30, r24
    3cc0:	e2 0f       	add	r30, r18
    3cc2:	f3 1f       	adc	r31, r19
    3cc4:	90 81       	ld	r25, Z
    3cc6:	84 2f       	mov	r24, r20
    3cc8:	69 2f       	mov	r22, r25
    3cca:	41 e0       	ldi	r20, 0x01	; 1
    3ccc:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    3cd0:	89 8b       	std	Y+17, r24	; 0x11
		if(Local_enuErrorState != ES_OK) return Local_enuErrorState;
    3cd2:	89 89       	ldd	r24, Y+17	; 0x11
    3cd4:	81 30       	cpi	r24, 0x01	; 1
    3cd6:	19 f0       	breq	.+6      	; 0x3cde <Keypad_enuGetPressedKey+0x292>
    3cd8:	89 89       	ldd	r24, Y+17	; 0x11
    3cda:	8d a3       	std	Y+37, r24	; 0x25
    3cdc:	09 c0       	rjmp	.+18     	; 0x3cf0 <Keypad_enuGetPressedKey+0x2a4>
	u8 Local_Au8ROWPort[NUM_OF_ROW] = KPD_ROW_PORTS;
	u8 Local_Au8ROWPins[NUM_OF_ROW] = KPD_ROW_PINS;



	for(Local_u8col = 0; Local_u8col < NUM_OF_COL; ++Local_u8col)
    3cde:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ce0:	8f 5f       	subi	r24, 0xFF	; 255
    3ce2:	8f 87       	std	Y+15, r24	; 0x0f
    3ce4:	8f 85       	ldd	r24, Y+15	; 0x0f
    3ce6:	84 30       	cpi	r24, 0x04	; 4
    3ce8:	08 f4       	brcc	.+2      	; 0x3cec <Keypad_enuGetPressedKey+0x2a0>
    3cea:	df ce       	rjmp	.-578    	; 0x3aaa <Keypad_enuGetPressedKey+0x5e>
		if(Local_enuErrorState != ES_OK) return Local_enuErrorState;

	}


	return Local_enuErrorState;
    3cec:	89 89       	ldd	r24, Y+17	; 0x11
    3cee:	8d a3       	std	Y+37, r24	; 0x25
    3cf0:	8d a1       	ldd	r24, Y+37	; 0x25
}
    3cf2:	a5 96       	adiw	r28, 0x25	; 37
    3cf4:	0f b6       	in	r0, 0x3f	; 63
    3cf6:	f8 94       	cli
    3cf8:	de bf       	out	0x3e, r29	; 62
    3cfa:	0f be       	out	0x3f, r0	; 63
    3cfc:	cd bf       	out	0x3d, r28	; 61
    3cfe:	cf 91       	pop	r28
    3d00:	df 91       	pop	r29
    3d02:	08 95       	ret

00003d04 <LCD_enuInit>:

u8 Global_u8Flag = 0;


ES_t LCD_enuInit(void)
{
    3d04:	af 92       	push	r10
    3d06:	bf 92       	push	r11
    3d08:	cf 92       	push	r12
    3d0a:	df 92       	push	r13
    3d0c:	ef 92       	push	r14
    3d0e:	ff 92       	push	r15
    3d10:	0f 93       	push	r16
    3d12:	1f 93       	push	r17
    3d14:	df 93       	push	r29
    3d16:	cf 93       	push	r28
    3d18:	cd b7       	in	r28, 0x3d	; 61
    3d1a:	de b7       	in	r29, 0x3e	; 62
    3d1c:	cd 54       	subi	r28, 0x4D	; 77
    3d1e:	d0 40       	sbci	r29, 0x00	; 0
    3d20:	0f b6       	in	r0, 0x3f	; 63
    3d22:	f8 94       	cli
    3d24:	de bf       	out	0x3e, r29	; 62
    3d26:	0f be       	out	0x3f, r0	; 63
    3d28:	cd bf       	out	0x3d, r28	; 61
	ES_t Local_enuErrorState = ES_NOK;
    3d2a:	fe 01       	movw	r30, r28
    3d2c:	ee 5b       	subi	r30, 0xBE	; 190
    3d2e:	ff 4f       	sbci	r31, 0xFF	; 255
    3d30:	10 82       	st	Z, r1
	u8 Local_u8Iterator;

	u64 Local_u64Check = 0;
    3d32:	19 ae       	std	Y+57, r1	; 0x39
    3d34:	1a ae       	std	Y+58, r1	; 0x3a
    3d36:	1b ae       	std	Y+59, r1	; 0x3b
    3d38:	1c ae       	std	Y+60, r1	; 0x3c
    3d3a:	1d ae       	std	Y+61, r1	; 0x3d
    3d3c:	1e ae       	std	Y+62, r1	; 0x3e
    3d3e:	1f ae       	std	Y+63, r1	; 0x3f
    3d40:	fe 01       	movw	r30, r28
    3d42:	e0 5c       	subi	r30, 0xC0	; 192
    3d44:	ff 4f       	sbci	r31, 0xFF	; 255
    3d46:	10 82       	st	Z, r1

	Local_u64Check |= (((u64)DIO_enuSetPinDir(RS_PORT, RS_PIN, DIO_u8OUTPUT)<<0 ));
    3d48:	80 e0       	ldi	r24, 0x00	; 0
    3d4a:	60 e0       	ldi	r22, 0x00	; 0
    3d4c:	41 e0       	ldi	r20, 0x01	; 1
    3d4e:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    3d52:	28 2f       	mov	r18, r24
    3d54:	30 e0       	ldi	r19, 0x00	; 0
    3d56:	40 e0       	ldi	r20, 0x00	; 0
    3d58:	50 e0       	ldi	r21, 0x00	; 0
    3d5a:	60 e0       	ldi	r22, 0x00	; 0
    3d5c:	70 e0       	ldi	r23, 0x00	; 0
    3d5e:	80 e0       	ldi	r24, 0x00	; 0
    3d60:	90 e0       	ldi	r25, 0x00	; 0
    3d62:	e9 ad       	ldd	r30, Y+57	; 0x39
    3d64:	e2 2b       	or	r30, r18
    3d66:	e9 af       	std	Y+57, r30	; 0x39
    3d68:	ea ad       	ldd	r30, Y+58	; 0x3a
    3d6a:	e3 2b       	or	r30, r19
    3d6c:	ea af       	std	Y+58, r30	; 0x3a
    3d6e:	eb ad       	ldd	r30, Y+59	; 0x3b
    3d70:	e4 2b       	or	r30, r20
    3d72:	eb af       	std	Y+59, r30	; 0x3b
    3d74:	ec ad       	ldd	r30, Y+60	; 0x3c
    3d76:	e5 2b       	or	r30, r21
    3d78:	ec af       	std	Y+60, r30	; 0x3c
    3d7a:	ed ad       	ldd	r30, Y+61	; 0x3d
    3d7c:	e6 2b       	or	r30, r22
    3d7e:	ed af       	std	Y+61, r30	; 0x3d
    3d80:	ee ad       	ldd	r30, Y+62	; 0x3e
    3d82:	e7 2b       	or	r30, r23
    3d84:	ee af       	std	Y+62, r30	; 0x3e
    3d86:	ef ad       	ldd	r30, Y+63	; 0x3f
    3d88:	e8 2b       	or	r30, r24
    3d8a:	ef af       	std	Y+63, r30	; 0x3f
    3d8c:	fe 01       	movw	r30, r28
    3d8e:	e0 5c       	subi	r30, 0xC0	; 192
    3d90:	ff 4f       	sbci	r31, 0xFF	; 255
    3d92:	e0 81       	ld	r30, Z
    3d94:	8e 2f       	mov	r24, r30
    3d96:	89 2b       	or	r24, r25
    3d98:	fe 01       	movw	r30, r28
    3d9a:	e0 5c       	subi	r30, 0xC0	; 192
    3d9c:	ff 4f       	sbci	r31, 0xFF	; 255
    3d9e:	80 83       	st	Z, r24
	Local_u64Check |= (((u64)DIO_enuSetPinDir(RW_PORT, RW_PIN, DIO_u8OUTPUT)<<3 ));
    3da0:	80 e0       	ldi	r24, 0x00	; 0
    3da2:	61 e0       	ldi	r22, 0x01	; 1
    3da4:	41 e0       	ldi	r20, 0x01	; 1
    3da6:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    3daa:	a8 2e       	mov	r10, r24
    3dac:	bb 24       	eor	r11, r11
    3dae:	cc 24       	eor	r12, r12
    3db0:	dd 24       	eor	r13, r13
    3db2:	ee 24       	eor	r14, r14
    3db4:	ff 24       	eor	r15, r15
    3db6:	87 01       	movw	r16, r14
    3db8:	2a 2d       	mov	r18, r10
    3dba:	3b 2d       	mov	r19, r11
    3dbc:	4c 2d       	mov	r20, r12
    3dbe:	5d 2d       	mov	r21, r13
    3dc0:	6e 2d       	mov	r22, r14
    3dc2:	7f 2d       	mov	r23, r15
    3dc4:	80 2f       	mov	r24, r16
    3dc6:	91 2f       	mov	r25, r17
    3dc8:	03 e0       	ldi	r16, 0x03	; 3
    3dca:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    3dce:	a2 2e       	mov	r10, r18
    3dd0:	b3 2e       	mov	r11, r19
    3dd2:	c4 2e       	mov	r12, r20
    3dd4:	d5 2e       	mov	r13, r21
    3dd6:	e6 2e       	mov	r14, r22
    3dd8:	f7 2e       	mov	r15, r23
    3dda:	08 2f       	mov	r16, r24
    3ddc:	19 2f       	mov	r17, r25
    3dde:	2a 2d       	mov	r18, r10
    3de0:	3b 2d       	mov	r19, r11
    3de2:	4c 2d       	mov	r20, r12
    3de4:	5d 2d       	mov	r21, r13
    3de6:	6e 2d       	mov	r22, r14
    3de8:	7f 2d       	mov	r23, r15
    3dea:	80 2f       	mov	r24, r16
    3dec:	91 2f       	mov	r25, r17
    3dee:	e9 ad       	ldd	r30, Y+57	; 0x39
    3df0:	e2 2b       	or	r30, r18
    3df2:	e9 af       	std	Y+57, r30	; 0x39
    3df4:	ea ad       	ldd	r30, Y+58	; 0x3a
    3df6:	e3 2b       	or	r30, r19
    3df8:	ea af       	std	Y+58, r30	; 0x3a
    3dfa:	eb ad       	ldd	r30, Y+59	; 0x3b
    3dfc:	e4 2b       	or	r30, r20
    3dfe:	eb af       	std	Y+59, r30	; 0x3b
    3e00:	ec ad       	ldd	r30, Y+60	; 0x3c
    3e02:	e5 2b       	or	r30, r21
    3e04:	ec af       	std	Y+60, r30	; 0x3c
    3e06:	ed ad       	ldd	r30, Y+61	; 0x3d
    3e08:	e6 2b       	or	r30, r22
    3e0a:	ed af       	std	Y+61, r30	; 0x3d
    3e0c:	ee ad       	ldd	r30, Y+62	; 0x3e
    3e0e:	e7 2b       	or	r30, r23
    3e10:	ee af       	std	Y+62, r30	; 0x3e
    3e12:	ef ad       	ldd	r30, Y+63	; 0x3f
    3e14:	e8 2b       	or	r30, r24
    3e16:	ef af       	std	Y+63, r30	; 0x3f
    3e18:	fe 01       	movw	r30, r28
    3e1a:	e0 5c       	subi	r30, 0xC0	; 192
    3e1c:	ff 4f       	sbci	r31, 0xFF	; 255
    3e1e:	e0 81       	ld	r30, Z
    3e20:	8e 2f       	mov	r24, r30
    3e22:	89 2b       	or	r24, r25
    3e24:	fe 01       	movw	r30, r28
    3e26:	e0 5c       	subi	r30, 0xC0	; 192
    3e28:	ff 4f       	sbci	r31, 0xFF	; 255
    3e2a:	80 83       	st	Z, r24
	Local_u64Check |= (((u64)DIO_enuSetPinDir(EN_PORT, EN_PIN, DIO_u8OUTPUT)<<6 ));
    3e2c:	83 e0       	ldi	r24, 0x03	; 3
    3e2e:	63 e0       	ldi	r22, 0x03	; 3
    3e30:	41 e0       	ldi	r20, 0x01	; 1
    3e32:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    3e36:	a8 2e       	mov	r10, r24
    3e38:	bb 24       	eor	r11, r11
    3e3a:	cc 24       	eor	r12, r12
    3e3c:	dd 24       	eor	r13, r13
    3e3e:	ee 24       	eor	r14, r14
    3e40:	ff 24       	eor	r15, r15
    3e42:	87 01       	movw	r16, r14
    3e44:	2a 2d       	mov	r18, r10
    3e46:	3b 2d       	mov	r19, r11
    3e48:	4c 2d       	mov	r20, r12
    3e4a:	5d 2d       	mov	r21, r13
    3e4c:	6e 2d       	mov	r22, r14
    3e4e:	7f 2d       	mov	r23, r15
    3e50:	80 2f       	mov	r24, r16
    3e52:	91 2f       	mov	r25, r17
    3e54:	06 e0       	ldi	r16, 0x06	; 6
    3e56:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    3e5a:	a2 2e       	mov	r10, r18
    3e5c:	b3 2e       	mov	r11, r19
    3e5e:	c4 2e       	mov	r12, r20
    3e60:	d5 2e       	mov	r13, r21
    3e62:	e6 2e       	mov	r14, r22
    3e64:	f7 2e       	mov	r15, r23
    3e66:	08 2f       	mov	r16, r24
    3e68:	19 2f       	mov	r17, r25
    3e6a:	2a 2d       	mov	r18, r10
    3e6c:	3b 2d       	mov	r19, r11
    3e6e:	4c 2d       	mov	r20, r12
    3e70:	5d 2d       	mov	r21, r13
    3e72:	6e 2d       	mov	r22, r14
    3e74:	7f 2d       	mov	r23, r15
    3e76:	80 2f       	mov	r24, r16
    3e78:	91 2f       	mov	r25, r17
    3e7a:	e9 ad       	ldd	r30, Y+57	; 0x39
    3e7c:	e2 2b       	or	r30, r18
    3e7e:	e9 af       	std	Y+57, r30	; 0x39
    3e80:	ea ad       	ldd	r30, Y+58	; 0x3a
    3e82:	e3 2b       	or	r30, r19
    3e84:	ea af       	std	Y+58, r30	; 0x3a
    3e86:	eb ad       	ldd	r30, Y+59	; 0x3b
    3e88:	e4 2b       	or	r30, r20
    3e8a:	eb af       	std	Y+59, r30	; 0x3b
    3e8c:	ec ad       	ldd	r30, Y+60	; 0x3c
    3e8e:	e5 2b       	or	r30, r21
    3e90:	ec af       	std	Y+60, r30	; 0x3c
    3e92:	ed ad       	ldd	r30, Y+61	; 0x3d
    3e94:	e6 2b       	or	r30, r22
    3e96:	ed af       	std	Y+61, r30	; 0x3d
    3e98:	ee ad       	ldd	r30, Y+62	; 0x3e
    3e9a:	e7 2b       	or	r30, r23
    3e9c:	ee af       	std	Y+62, r30	; 0x3e
    3e9e:	ef ad       	ldd	r30, Y+63	; 0x3f
    3ea0:	e8 2b       	or	r30, r24
    3ea2:	ef af       	std	Y+63, r30	; 0x3f
    3ea4:	fe 01       	movw	r30, r28
    3ea6:	e0 5c       	subi	r30, 0xC0	; 192
    3ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    3eaa:	e0 81       	ld	r30, Z
    3eac:	8e 2f       	mov	r24, r30
    3eae:	89 2b       	or	r24, r25
    3eb0:	fe 01       	movw	r30, r28
    3eb2:	e0 5c       	subi	r30, 0xC0	; 192
    3eb4:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb6:	80 83       	st	Z, r24


	Local_u64Check |= (((u64)DIO_enuSetPinDir(DB4_PORT, DB4_PIN, DIO_u8OUTPUT)<<9 ));
    3eb8:	83 e0       	ldi	r24, 0x03	; 3
    3eba:	60 e0       	ldi	r22, 0x00	; 0
    3ebc:	41 e0       	ldi	r20, 0x01	; 1
    3ebe:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    3ec2:	a8 2e       	mov	r10, r24
    3ec4:	bb 24       	eor	r11, r11
    3ec6:	cc 24       	eor	r12, r12
    3ec8:	dd 24       	eor	r13, r13
    3eca:	ee 24       	eor	r14, r14
    3ecc:	ff 24       	eor	r15, r15
    3ece:	87 01       	movw	r16, r14
    3ed0:	2a 2d       	mov	r18, r10
    3ed2:	3b 2d       	mov	r19, r11
    3ed4:	4c 2d       	mov	r20, r12
    3ed6:	5d 2d       	mov	r21, r13
    3ed8:	6e 2d       	mov	r22, r14
    3eda:	7f 2d       	mov	r23, r15
    3edc:	80 2f       	mov	r24, r16
    3ede:	91 2f       	mov	r25, r17
    3ee0:	09 e0       	ldi	r16, 0x09	; 9
    3ee2:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    3ee6:	a2 2e       	mov	r10, r18
    3ee8:	b3 2e       	mov	r11, r19
    3eea:	c4 2e       	mov	r12, r20
    3eec:	d5 2e       	mov	r13, r21
    3eee:	e6 2e       	mov	r14, r22
    3ef0:	f7 2e       	mov	r15, r23
    3ef2:	08 2f       	mov	r16, r24
    3ef4:	19 2f       	mov	r17, r25
    3ef6:	2a 2d       	mov	r18, r10
    3ef8:	3b 2d       	mov	r19, r11
    3efa:	4c 2d       	mov	r20, r12
    3efc:	5d 2d       	mov	r21, r13
    3efe:	6e 2d       	mov	r22, r14
    3f00:	7f 2d       	mov	r23, r15
    3f02:	80 2f       	mov	r24, r16
    3f04:	91 2f       	mov	r25, r17
    3f06:	e9 ad       	ldd	r30, Y+57	; 0x39
    3f08:	e2 2b       	or	r30, r18
    3f0a:	e9 af       	std	Y+57, r30	; 0x39
    3f0c:	ea ad       	ldd	r30, Y+58	; 0x3a
    3f0e:	e3 2b       	or	r30, r19
    3f10:	ea af       	std	Y+58, r30	; 0x3a
    3f12:	eb ad       	ldd	r30, Y+59	; 0x3b
    3f14:	e4 2b       	or	r30, r20
    3f16:	eb af       	std	Y+59, r30	; 0x3b
    3f18:	ec ad       	ldd	r30, Y+60	; 0x3c
    3f1a:	e5 2b       	or	r30, r21
    3f1c:	ec af       	std	Y+60, r30	; 0x3c
    3f1e:	ed ad       	ldd	r30, Y+61	; 0x3d
    3f20:	e6 2b       	or	r30, r22
    3f22:	ed af       	std	Y+61, r30	; 0x3d
    3f24:	ee ad       	ldd	r30, Y+62	; 0x3e
    3f26:	e7 2b       	or	r30, r23
    3f28:	ee af       	std	Y+62, r30	; 0x3e
    3f2a:	ef ad       	ldd	r30, Y+63	; 0x3f
    3f2c:	e8 2b       	or	r30, r24
    3f2e:	ef af       	std	Y+63, r30	; 0x3f
    3f30:	fe 01       	movw	r30, r28
    3f32:	e0 5c       	subi	r30, 0xC0	; 192
    3f34:	ff 4f       	sbci	r31, 0xFF	; 255
    3f36:	e0 81       	ld	r30, Z
    3f38:	8e 2f       	mov	r24, r30
    3f3a:	89 2b       	or	r24, r25
    3f3c:	fe 01       	movw	r30, r28
    3f3e:	e0 5c       	subi	r30, 0xC0	; 192
    3f40:	ff 4f       	sbci	r31, 0xFF	; 255
    3f42:	80 83       	st	Z, r24
	Local_u64Check |= (((u64)DIO_enuSetPinDir(DB5_PORT, DB5_PIN, DIO_u8OUTPUT)<<12));
    3f44:	83 e0       	ldi	r24, 0x03	; 3
    3f46:	61 e0       	ldi	r22, 0x01	; 1
    3f48:	41 e0       	ldi	r20, 0x01	; 1
    3f4a:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    3f4e:	a8 2e       	mov	r10, r24
    3f50:	bb 24       	eor	r11, r11
    3f52:	cc 24       	eor	r12, r12
    3f54:	dd 24       	eor	r13, r13
    3f56:	ee 24       	eor	r14, r14
    3f58:	ff 24       	eor	r15, r15
    3f5a:	87 01       	movw	r16, r14
    3f5c:	2a 2d       	mov	r18, r10
    3f5e:	3b 2d       	mov	r19, r11
    3f60:	4c 2d       	mov	r20, r12
    3f62:	5d 2d       	mov	r21, r13
    3f64:	6e 2d       	mov	r22, r14
    3f66:	7f 2d       	mov	r23, r15
    3f68:	80 2f       	mov	r24, r16
    3f6a:	91 2f       	mov	r25, r17
    3f6c:	0c e0       	ldi	r16, 0x0C	; 12
    3f6e:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    3f72:	a2 2e       	mov	r10, r18
    3f74:	b3 2e       	mov	r11, r19
    3f76:	c4 2e       	mov	r12, r20
    3f78:	d5 2e       	mov	r13, r21
    3f7a:	e6 2e       	mov	r14, r22
    3f7c:	f7 2e       	mov	r15, r23
    3f7e:	08 2f       	mov	r16, r24
    3f80:	19 2f       	mov	r17, r25
    3f82:	2a 2d       	mov	r18, r10
    3f84:	3b 2d       	mov	r19, r11
    3f86:	4c 2d       	mov	r20, r12
    3f88:	5d 2d       	mov	r21, r13
    3f8a:	6e 2d       	mov	r22, r14
    3f8c:	7f 2d       	mov	r23, r15
    3f8e:	80 2f       	mov	r24, r16
    3f90:	91 2f       	mov	r25, r17
    3f92:	e9 ad       	ldd	r30, Y+57	; 0x39
    3f94:	e2 2b       	or	r30, r18
    3f96:	e9 af       	std	Y+57, r30	; 0x39
    3f98:	ea ad       	ldd	r30, Y+58	; 0x3a
    3f9a:	e3 2b       	or	r30, r19
    3f9c:	ea af       	std	Y+58, r30	; 0x3a
    3f9e:	eb ad       	ldd	r30, Y+59	; 0x3b
    3fa0:	e4 2b       	or	r30, r20
    3fa2:	eb af       	std	Y+59, r30	; 0x3b
    3fa4:	ec ad       	ldd	r30, Y+60	; 0x3c
    3fa6:	e5 2b       	or	r30, r21
    3fa8:	ec af       	std	Y+60, r30	; 0x3c
    3faa:	ed ad       	ldd	r30, Y+61	; 0x3d
    3fac:	e6 2b       	or	r30, r22
    3fae:	ed af       	std	Y+61, r30	; 0x3d
    3fb0:	ee ad       	ldd	r30, Y+62	; 0x3e
    3fb2:	e7 2b       	or	r30, r23
    3fb4:	ee af       	std	Y+62, r30	; 0x3e
    3fb6:	ef ad       	ldd	r30, Y+63	; 0x3f
    3fb8:	e8 2b       	or	r30, r24
    3fba:	ef af       	std	Y+63, r30	; 0x3f
    3fbc:	fe 01       	movw	r30, r28
    3fbe:	e0 5c       	subi	r30, 0xC0	; 192
    3fc0:	ff 4f       	sbci	r31, 0xFF	; 255
    3fc2:	e0 81       	ld	r30, Z
    3fc4:	8e 2f       	mov	r24, r30
    3fc6:	89 2b       	or	r24, r25
    3fc8:	fe 01       	movw	r30, r28
    3fca:	e0 5c       	subi	r30, 0xC0	; 192
    3fcc:	ff 4f       	sbci	r31, 0xFF	; 255
    3fce:	80 83       	st	Z, r24
	Local_u64Check |= (((u64)DIO_enuSetPinDir(DB6_PORT, DB6_PIN, DIO_u8OUTPUT)<<15));
    3fd0:	80 e0       	ldi	r24, 0x00	; 0
    3fd2:	62 e0       	ldi	r22, 0x02	; 2
    3fd4:	41 e0       	ldi	r20, 0x01	; 1
    3fd6:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    3fda:	a8 2e       	mov	r10, r24
    3fdc:	bb 24       	eor	r11, r11
    3fde:	cc 24       	eor	r12, r12
    3fe0:	dd 24       	eor	r13, r13
    3fe2:	ee 24       	eor	r14, r14
    3fe4:	ff 24       	eor	r15, r15
    3fe6:	87 01       	movw	r16, r14
    3fe8:	2a 2d       	mov	r18, r10
    3fea:	3b 2d       	mov	r19, r11
    3fec:	4c 2d       	mov	r20, r12
    3fee:	5d 2d       	mov	r21, r13
    3ff0:	6e 2d       	mov	r22, r14
    3ff2:	7f 2d       	mov	r23, r15
    3ff4:	80 2f       	mov	r24, r16
    3ff6:	91 2f       	mov	r25, r17
    3ff8:	0f e0       	ldi	r16, 0x0F	; 15
    3ffa:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    3ffe:	a2 2e       	mov	r10, r18
    4000:	b3 2e       	mov	r11, r19
    4002:	c4 2e       	mov	r12, r20
    4004:	d5 2e       	mov	r13, r21
    4006:	e6 2e       	mov	r14, r22
    4008:	f7 2e       	mov	r15, r23
    400a:	08 2f       	mov	r16, r24
    400c:	19 2f       	mov	r17, r25
    400e:	2a 2d       	mov	r18, r10
    4010:	3b 2d       	mov	r19, r11
    4012:	4c 2d       	mov	r20, r12
    4014:	5d 2d       	mov	r21, r13
    4016:	6e 2d       	mov	r22, r14
    4018:	7f 2d       	mov	r23, r15
    401a:	80 2f       	mov	r24, r16
    401c:	91 2f       	mov	r25, r17
    401e:	e9 ad       	ldd	r30, Y+57	; 0x39
    4020:	e2 2b       	or	r30, r18
    4022:	e9 af       	std	Y+57, r30	; 0x39
    4024:	ea ad       	ldd	r30, Y+58	; 0x3a
    4026:	e3 2b       	or	r30, r19
    4028:	ea af       	std	Y+58, r30	; 0x3a
    402a:	eb ad       	ldd	r30, Y+59	; 0x3b
    402c:	e4 2b       	or	r30, r20
    402e:	eb af       	std	Y+59, r30	; 0x3b
    4030:	ec ad       	ldd	r30, Y+60	; 0x3c
    4032:	e5 2b       	or	r30, r21
    4034:	ec af       	std	Y+60, r30	; 0x3c
    4036:	ed ad       	ldd	r30, Y+61	; 0x3d
    4038:	e6 2b       	or	r30, r22
    403a:	ed af       	std	Y+61, r30	; 0x3d
    403c:	ee ad       	ldd	r30, Y+62	; 0x3e
    403e:	e7 2b       	or	r30, r23
    4040:	ee af       	std	Y+62, r30	; 0x3e
    4042:	ef ad       	ldd	r30, Y+63	; 0x3f
    4044:	e8 2b       	or	r30, r24
    4046:	ef af       	std	Y+63, r30	; 0x3f
    4048:	fe 01       	movw	r30, r28
    404a:	e0 5c       	subi	r30, 0xC0	; 192
    404c:	ff 4f       	sbci	r31, 0xFF	; 255
    404e:	e0 81       	ld	r30, Z
    4050:	8e 2f       	mov	r24, r30
    4052:	89 2b       	or	r24, r25
    4054:	fe 01       	movw	r30, r28
    4056:	e0 5c       	subi	r30, 0xC0	; 192
    4058:	ff 4f       	sbci	r31, 0xFF	; 255
    405a:	80 83       	st	Z, r24
	Local_u64Check |= (((u64)DIO_enuSetPinDir(DB7_PORT, DB7_PIN, DIO_u8OUTPUT)<<18));
    405c:	82 e0       	ldi	r24, 0x02	; 2
    405e:	62 e0       	ldi	r22, 0x02	; 2
    4060:	41 e0       	ldi	r20, 0x01	; 1
    4062:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    4066:	a8 2e       	mov	r10, r24
    4068:	bb 24       	eor	r11, r11
    406a:	cc 24       	eor	r12, r12
    406c:	dd 24       	eor	r13, r13
    406e:	ee 24       	eor	r14, r14
    4070:	ff 24       	eor	r15, r15
    4072:	87 01       	movw	r16, r14
    4074:	2a 2d       	mov	r18, r10
    4076:	3b 2d       	mov	r19, r11
    4078:	4c 2d       	mov	r20, r12
    407a:	5d 2d       	mov	r21, r13
    407c:	6e 2d       	mov	r22, r14
    407e:	7f 2d       	mov	r23, r15
    4080:	80 2f       	mov	r24, r16
    4082:	91 2f       	mov	r25, r17
    4084:	02 e1       	ldi	r16, 0x12	; 18
    4086:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    408a:	a2 2e       	mov	r10, r18
    408c:	b3 2e       	mov	r11, r19
    408e:	c4 2e       	mov	r12, r20
    4090:	d5 2e       	mov	r13, r21
    4092:	e6 2e       	mov	r14, r22
    4094:	f7 2e       	mov	r15, r23
    4096:	08 2f       	mov	r16, r24
    4098:	19 2f       	mov	r17, r25
    409a:	2a 2d       	mov	r18, r10
    409c:	3b 2d       	mov	r19, r11
    409e:	4c 2d       	mov	r20, r12
    40a0:	5d 2d       	mov	r21, r13
    40a2:	6e 2d       	mov	r22, r14
    40a4:	7f 2d       	mov	r23, r15
    40a6:	80 2f       	mov	r24, r16
    40a8:	91 2f       	mov	r25, r17
    40aa:	e9 ad       	ldd	r30, Y+57	; 0x39
    40ac:	e2 2b       	or	r30, r18
    40ae:	e9 af       	std	Y+57, r30	; 0x39
    40b0:	ea ad       	ldd	r30, Y+58	; 0x3a
    40b2:	e3 2b       	or	r30, r19
    40b4:	ea af       	std	Y+58, r30	; 0x3a
    40b6:	eb ad       	ldd	r30, Y+59	; 0x3b
    40b8:	e4 2b       	or	r30, r20
    40ba:	eb af       	std	Y+59, r30	; 0x3b
    40bc:	ec ad       	ldd	r30, Y+60	; 0x3c
    40be:	e5 2b       	or	r30, r21
    40c0:	ec af       	std	Y+60, r30	; 0x3c
    40c2:	ed ad       	ldd	r30, Y+61	; 0x3d
    40c4:	e6 2b       	or	r30, r22
    40c6:	ed af       	std	Y+61, r30	; 0x3d
    40c8:	ee ad       	ldd	r30, Y+62	; 0x3e
    40ca:	e7 2b       	or	r30, r23
    40cc:	ee af       	std	Y+62, r30	; 0x3e
    40ce:	ef ad       	ldd	r30, Y+63	; 0x3f
    40d0:	e8 2b       	or	r30, r24
    40d2:	ef af       	std	Y+63, r30	; 0x3f
    40d4:	fe 01       	movw	r30, r28
    40d6:	e0 5c       	subi	r30, 0xC0	; 192
    40d8:	ff 4f       	sbci	r31, 0xFF	; 255
    40da:	e0 81       	ld	r30, Z
    40dc:	8e 2f       	mov	r24, r30
    40de:	89 2b       	or	r24, r25
    40e0:	fe 01       	movw	r30, r28
    40e2:	e0 5c       	subi	r30, 0xC0	; 192
    40e4:	ff 4f       	sbci	r31, 0xFF	; 255
    40e6:	80 83       	st	Z, r24
    40e8:	80 e0       	ldi	r24, 0x00	; 0
    40ea:	90 e0       	ldi	r25, 0x00	; 0
    40ec:	a0 e2       	ldi	r26, 0x20	; 32
    40ee:	b2 e4       	ldi	r27, 0x42	; 66
    40f0:	8d ab       	std	Y+53, r24	; 0x35
    40f2:	9e ab       	std	Y+54, r25	; 0x36
    40f4:	af ab       	std	Y+55, r26	; 0x37
    40f6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    40f8:	6d a9       	ldd	r22, Y+53	; 0x35
    40fa:	7e a9       	ldd	r23, Y+54	; 0x36
    40fc:	8f a9       	ldd	r24, Y+55	; 0x37
    40fe:	98 ad       	ldd	r25, Y+56	; 0x38
    4100:	20 e0       	ldi	r18, 0x00	; 0
    4102:	30 e0       	ldi	r19, 0x00	; 0
    4104:	4a e7       	ldi	r20, 0x7A	; 122
    4106:	53 e4       	ldi	r21, 0x43	; 67
    4108:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    410c:	dc 01       	movw	r26, r24
    410e:	cb 01       	movw	r24, r22
    4110:	89 ab       	std	Y+49, r24	; 0x31
    4112:	9a ab       	std	Y+50, r25	; 0x32
    4114:	ab ab       	std	Y+51, r26	; 0x33
    4116:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4118:	69 a9       	ldd	r22, Y+49	; 0x31
    411a:	7a a9       	ldd	r23, Y+50	; 0x32
    411c:	8b a9       	ldd	r24, Y+51	; 0x33
    411e:	9c a9       	ldd	r25, Y+52	; 0x34
    4120:	20 e0       	ldi	r18, 0x00	; 0
    4122:	30 e0       	ldi	r19, 0x00	; 0
    4124:	40 e8       	ldi	r20, 0x80	; 128
    4126:	5f e3       	ldi	r21, 0x3F	; 63
    4128:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <__ltsf2>
    412c:	88 23       	and	r24, r24
    412e:	2c f4       	brge	.+10     	; 0x413a <LCD_enuInit+0x436>
		__ticks = 1;
    4130:	81 e0       	ldi	r24, 0x01	; 1
    4132:	90 e0       	ldi	r25, 0x00	; 0
    4134:	98 ab       	std	Y+48, r25	; 0x30
    4136:	8f a7       	std	Y+47, r24	; 0x2f
    4138:	3f c0       	rjmp	.+126    	; 0x41b8 <LCD_enuInit+0x4b4>
	else if (__tmp > 65535)
    413a:	69 a9       	ldd	r22, Y+49	; 0x31
    413c:	7a a9       	ldd	r23, Y+50	; 0x32
    413e:	8b a9       	ldd	r24, Y+51	; 0x33
    4140:	9c a9       	ldd	r25, Y+52	; 0x34
    4142:	20 e0       	ldi	r18, 0x00	; 0
    4144:	3f ef       	ldi	r19, 0xFF	; 255
    4146:	4f e7       	ldi	r20, 0x7F	; 127
    4148:	57 e4       	ldi	r21, 0x47	; 71
    414a:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <__gtsf2>
    414e:	18 16       	cp	r1, r24
    4150:	4c f5       	brge	.+82     	; 0x41a4 <LCD_enuInit+0x4a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4152:	6d a9       	ldd	r22, Y+53	; 0x35
    4154:	7e a9       	ldd	r23, Y+54	; 0x36
    4156:	8f a9       	ldd	r24, Y+55	; 0x37
    4158:	98 ad       	ldd	r25, Y+56	; 0x38
    415a:	20 e0       	ldi	r18, 0x00	; 0
    415c:	30 e0       	ldi	r19, 0x00	; 0
    415e:	40 e2       	ldi	r20, 0x20	; 32
    4160:	51 e4       	ldi	r21, 0x41	; 65
    4162:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    4166:	dc 01       	movw	r26, r24
    4168:	cb 01       	movw	r24, r22
    416a:	bc 01       	movw	r22, r24
    416c:	cd 01       	movw	r24, r26
    416e:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4172:	dc 01       	movw	r26, r24
    4174:	cb 01       	movw	r24, r22
    4176:	98 ab       	std	Y+48, r25	; 0x30
    4178:	8f a7       	std	Y+47, r24	; 0x2f
    417a:	0f c0       	rjmp	.+30     	; 0x419a <LCD_enuInit+0x496>
    417c:	89 e1       	ldi	r24, 0x19	; 25
    417e:	90 e0       	ldi	r25, 0x00	; 0
    4180:	9e a7       	std	Y+46, r25	; 0x2e
    4182:	8d a7       	std	Y+45, r24	; 0x2d
    4184:	8d a5       	ldd	r24, Y+45	; 0x2d
    4186:	9e a5       	ldd	r25, Y+46	; 0x2e
    4188:	01 97       	sbiw	r24, 0x01	; 1
    418a:	f1 f7       	brne	.-4      	; 0x4188 <LCD_enuInit+0x484>
    418c:	9e a7       	std	Y+46, r25	; 0x2e
    418e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4190:	8f a5       	ldd	r24, Y+47	; 0x2f
    4192:	98 a9       	ldd	r25, Y+48	; 0x30
    4194:	01 97       	sbiw	r24, 0x01	; 1
    4196:	98 ab       	std	Y+48, r25	; 0x30
    4198:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    419a:	8f a5       	ldd	r24, Y+47	; 0x2f
    419c:	98 a9       	ldd	r25, Y+48	; 0x30
    419e:	00 97       	sbiw	r24, 0x00	; 0
    41a0:	69 f7       	brne	.-38     	; 0x417c <LCD_enuInit+0x478>
    41a2:	14 c0       	rjmp	.+40     	; 0x41cc <LCD_enuInit+0x4c8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    41a4:	69 a9       	ldd	r22, Y+49	; 0x31
    41a6:	7a a9       	ldd	r23, Y+50	; 0x32
    41a8:	8b a9       	ldd	r24, Y+51	; 0x33
    41aa:	9c a9       	ldd	r25, Y+52	; 0x34
    41ac:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    41b0:	dc 01       	movw	r26, r24
    41b2:	cb 01       	movw	r24, r22
    41b4:	98 ab       	std	Y+48, r25	; 0x30
    41b6:	8f a7       	std	Y+47, r24	; 0x2f
    41b8:	8f a5       	ldd	r24, Y+47	; 0x2f
    41ba:	98 a9       	ldd	r25, Y+48	; 0x30
    41bc:	9c a7       	std	Y+44, r25	; 0x2c
    41be:	8b a7       	std	Y+43, r24	; 0x2b
    41c0:	8b a5       	ldd	r24, Y+43	; 0x2b
    41c2:	9c a5       	ldd	r25, Y+44	; 0x2c
    41c4:	01 97       	sbiw	r24, 0x01	; 1
    41c6:	f1 f7       	brne	.-4      	; 0x41c4 <LCD_enuInit+0x4c0>
    41c8:	9c a7       	std	Y+44, r25	; 0x2c
    41ca:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(40);

#if LCD_MODE == EIGHT_BIT


	Local_u64Check |= (((u64)DIO_enuSetPinDir(DB0_PORT, DB0_PIN, DIO_u8OUTPUT)<<21 ));
    41cc:	81 e0       	ldi	r24, 0x01	; 1
    41ce:	60 e0       	ldi	r22, 0x00	; 0
    41d0:	41 e0       	ldi	r20, 0x01	; 1
    41d2:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    41d6:	a8 2e       	mov	r10, r24
    41d8:	bb 24       	eor	r11, r11
    41da:	cc 24       	eor	r12, r12
    41dc:	dd 24       	eor	r13, r13
    41de:	ee 24       	eor	r14, r14
    41e0:	ff 24       	eor	r15, r15
    41e2:	87 01       	movw	r16, r14
    41e4:	2a 2d       	mov	r18, r10
    41e6:	3b 2d       	mov	r19, r11
    41e8:	4c 2d       	mov	r20, r12
    41ea:	5d 2d       	mov	r21, r13
    41ec:	6e 2d       	mov	r22, r14
    41ee:	7f 2d       	mov	r23, r15
    41f0:	80 2f       	mov	r24, r16
    41f2:	91 2f       	mov	r25, r17
    41f4:	05 e1       	ldi	r16, 0x15	; 21
    41f6:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    41fa:	a2 2e       	mov	r10, r18
    41fc:	b3 2e       	mov	r11, r19
    41fe:	c4 2e       	mov	r12, r20
    4200:	d5 2e       	mov	r13, r21
    4202:	e6 2e       	mov	r14, r22
    4204:	f7 2e       	mov	r15, r23
    4206:	08 2f       	mov	r16, r24
    4208:	19 2f       	mov	r17, r25
    420a:	2a 2d       	mov	r18, r10
    420c:	3b 2d       	mov	r19, r11
    420e:	4c 2d       	mov	r20, r12
    4210:	5d 2d       	mov	r21, r13
    4212:	6e 2d       	mov	r22, r14
    4214:	7f 2d       	mov	r23, r15
    4216:	80 2f       	mov	r24, r16
    4218:	91 2f       	mov	r25, r17
    421a:	e9 ad       	ldd	r30, Y+57	; 0x39
    421c:	e2 2b       	or	r30, r18
    421e:	e9 af       	std	Y+57, r30	; 0x39
    4220:	ea ad       	ldd	r30, Y+58	; 0x3a
    4222:	e3 2b       	or	r30, r19
    4224:	ea af       	std	Y+58, r30	; 0x3a
    4226:	eb ad       	ldd	r30, Y+59	; 0x3b
    4228:	e4 2b       	or	r30, r20
    422a:	eb af       	std	Y+59, r30	; 0x3b
    422c:	ec ad       	ldd	r30, Y+60	; 0x3c
    422e:	e5 2b       	or	r30, r21
    4230:	ec af       	std	Y+60, r30	; 0x3c
    4232:	ed ad       	ldd	r30, Y+61	; 0x3d
    4234:	e6 2b       	or	r30, r22
    4236:	ed af       	std	Y+61, r30	; 0x3d
    4238:	ee ad       	ldd	r30, Y+62	; 0x3e
    423a:	e7 2b       	or	r30, r23
    423c:	ee af       	std	Y+62, r30	; 0x3e
    423e:	ef ad       	ldd	r30, Y+63	; 0x3f
    4240:	e8 2b       	or	r30, r24
    4242:	ef af       	std	Y+63, r30	; 0x3f
    4244:	fe 01       	movw	r30, r28
    4246:	e0 5c       	subi	r30, 0xC0	; 192
    4248:	ff 4f       	sbci	r31, 0xFF	; 255
    424a:	e0 81       	ld	r30, Z
    424c:	8e 2f       	mov	r24, r30
    424e:	89 2b       	or	r24, r25
    4250:	fe 01       	movw	r30, r28
    4252:	e0 5c       	subi	r30, 0xC0	; 192
    4254:	ff 4f       	sbci	r31, 0xFF	; 255
    4256:	80 83       	st	Z, r24
	Local_u64Check |= (((u64)DIO_enuSetPinDir(DB1_PORT, DB1_PIN, DIO_u8OUTPUT)<<24 ));
    4258:	81 e0       	ldi	r24, 0x01	; 1
    425a:	61 e0       	ldi	r22, 0x01	; 1
    425c:	41 e0       	ldi	r20, 0x01	; 1
    425e:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    4262:	a8 2e       	mov	r10, r24
    4264:	bb 24       	eor	r11, r11
    4266:	cc 24       	eor	r12, r12
    4268:	dd 24       	eor	r13, r13
    426a:	ee 24       	eor	r14, r14
    426c:	ff 24       	eor	r15, r15
    426e:	87 01       	movw	r16, r14
    4270:	2a 2d       	mov	r18, r10
    4272:	3b 2d       	mov	r19, r11
    4274:	4c 2d       	mov	r20, r12
    4276:	5d 2d       	mov	r21, r13
    4278:	6e 2d       	mov	r22, r14
    427a:	7f 2d       	mov	r23, r15
    427c:	80 2f       	mov	r24, r16
    427e:	91 2f       	mov	r25, r17
    4280:	08 e1       	ldi	r16, 0x18	; 24
    4282:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    4286:	a2 2e       	mov	r10, r18
    4288:	b3 2e       	mov	r11, r19
    428a:	c4 2e       	mov	r12, r20
    428c:	d5 2e       	mov	r13, r21
    428e:	e6 2e       	mov	r14, r22
    4290:	f7 2e       	mov	r15, r23
    4292:	08 2f       	mov	r16, r24
    4294:	19 2f       	mov	r17, r25
    4296:	2a 2d       	mov	r18, r10
    4298:	3b 2d       	mov	r19, r11
    429a:	4c 2d       	mov	r20, r12
    429c:	5d 2d       	mov	r21, r13
    429e:	6e 2d       	mov	r22, r14
    42a0:	7f 2d       	mov	r23, r15
    42a2:	80 2f       	mov	r24, r16
    42a4:	91 2f       	mov	r25, r17
    42a6:	e9 ad       	ldd	r30, Y+57	; 0x39
    42a8:	e2 2b       	or	r30, r18
    42aa:	e9 af       	std	Y+57, r30	; 0x39
    42ac:	ea ad       	ldd	r30, Y+58	; 0x3a
    42ae:	e3 2b       	or	r30, r19
    42b0:	ea af       	std	Y+58, r30	; 0x3a
    42b2:	eb ad       	ldd	r30, Y+59	; 0x3b
    42b4:	e4 2b       	or	r30, r20
    42b6:	eb af       	std	Y+59, r30	; 0x3b
    42b8:	ec ad       	ldd	r30, Y+60	; 0x3c
    42ba:	e5 2b       	or	r30, r21
    42bc:	ec af       	std	Y+60, r30	; 0x3c
    42be:	ed ad       	ldd	r30, Y+61	; 0x3d
    42c0:	e6 2b       	or	r30, r22
    42c2:	ed af       	std	Y+61, r30	; 0x3d
    42c4:	ee ad       	ldd	r30, Y+62	; 0x3e
    42c6:	e7 2b       	or	r30, r23
    42c8:	ee af       	std	Y+62, r30	; 0x3e
    42ca:	ef ad       	ldd	r30, Y+63	; 0x3f
    42cc:	e8 2b       	or	r30, r24
    42ce:	ef af       	std	Y+63, r30	; 0x3f
    42d0:	fe 01       	movw	r30, r28
    42d2:	e0 5c       	subi	r30, 0xC0	; 192
    42d4:	ff 4f       	sbci	r31, 0xFF	; 255
    42d6:	e0 81       	ld	r30, Z
    42d8:	8e 2f       	mov	r24, r30
    42da:	89 2b       	or	r24, r25
    42dc:	fe 01       	movw	r30, r28
    42de:	e0 5c       	subi	r30, 0xC0	; 192
    42e0:	ff 4f       	sbci	r31, 0xFF	; 255
    42e2:	80 83       	st	Z, r24
	Local_u64Check |= (((u64)DIO_enuSetPinDir(DB2_PORT, DB2_PIN, DIO_u8OUTPUT)<<27 ));
    42e4:	82 e0       	ldi	r24, 0x02	; 2
    42e6:	60 e0       	ldi	r22, 0x00	; 0
    42e8:	41 e0       	ldi	r20, 0x01	; 1
    42ea:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    42ee:	a8 2e       	mov	r10, r24
    42f0:	bb 24       	eor	r11, r11
    42f2:	cc 24       	eor	r12, r12
    42f4:	dd 24       	eor	r13, r13
    42f6:	ee 24       	eor	r14, r14
    42f8:	ff 24       	eor	r15, r15
    42fa:	87 01       	movw	r16, r14
    42fc:	2a 2d       	mov	r18, r10
    42fe:	3b 2d       	mov	r19, r11
    4300:	4c 2d       	mov	r20, r12
    4302:	5d 2d       	mov	r21, r13
    4304:	6e 2d       	mov	r22, r14
    4306:	7f 2d       	mov	r23, r15
    4308:	80 2f       	mov	r24, r16
    430a:	91 2f       	mov	r25, r17
    430c:	0b e1       	ldi	r16, 0x1B	; 27
    430e:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    4312:	a2 2e       	mov	r10, r18
    4314:	b3 2e       	mov	r11, r19
    4316:	c4 2e       	mov	r12, r20
    4318:	d5 2e       	mov	r13, r21
    431a:	e6 2e       	mov	r14, r22
    431c:	f7 2e       	mov	r15, r23
    431e:	08 2f       	mov	r16, r24
    4320:	19 2f       	mov	r17, r25
    4322:	2a 2d       	mov	r18, r10
    4324:	3b 2d       	mov	r19, r11
    4326:	4c 2d       	mov	r20, r12
    4328:	5d 2d       	mov	r21, r13
    432a:	6e 2d       	mov	r22, r14
    432c:	7f 2d       	mov	r23, r15
    432e:	80 2f       	mov	r24, r16
    4330:	91 2f       	mov	r25, r17
    4332:	e9 ad       	ldd	r30, Y+57	; 0x39
    4334:	e2 2b       	or	r30, r18
    4336:	e9 af       	std	Y+57, r30	; 0x39
    4338:	ea ad       	ldd	r30, Y+58	; 0x3a
    433a:	e3 2b       	or	r30, r19
    433c:	ea af       	std	Y+58, r30	; 0x3a
    433e:	eb ad       	ldd	r30, Y+59	; 0x3b
    4340:	e4 2b       	or	r30, r20
    4342:	eb af       	std	Y+59, r30	; 0x3b
    4344:	ec ad       	ldd	r30, Y+60	; 0x3c
    4346:	e5 2b       	or	r30, r21
    4348:	ec af       	std	Y+60, r30	; 0x3c
    434a:	ed ad       	ldd	r30, Y+61	; 0x3d
    434c:	e6 2b       	or	r30, r22
    434e:	ed af       	std	Y+61, r30	; 0x3d
    4350:	ee ad       	ldd	r30, Y+62	; 0x3e
    4352:	e7 2b       	or	r30, r23
    4354:	ee af       	std	Y+62, r30	; 0x3e
    4356:	ef ad       	ldd	r30, Y+63	; 0x3f
    4358:	e8 2b       	or	r30, r24
    435a:	ef af       	std	Y+63, r30	; 0x3f
    435c:	fe 01       	movw	r30, r28
    435e:	e0 5c       	subi	r30, 0xC0	; 192
    4360:	ff 4f       	sbci	r31, 0xFF	; 255
    4362:	e0 81       	ld	r30, Z
    4364:	8e 2f       	mov	r24, r30
    4366:	89 2b       	or	r24, r25
    4368:	fe 01       	movw	r30, r28
    436a:	e0 5c       	subi	r30, 0xC0	; 192
    436c:	ff 4f       	sbci	r31, 0xFF	; 255
    436e:	80 83       	st	Z, r24
	Local_u64Check |= (((u64)DIO_enuSetPinDir(DB3_PORT, DB3_PIN, DIO_u8OUTPUT)<<30 ));
    4370:	82 e0       	ldi	r24, 0x02	; 2
    4372:	61 e0       	ldi	r22, 0x01	; 1
    4374:	41 e0       	ldi	r20, 0x01	; 1
    4376:	0e 94 83 18 	call	0x3106	; 0x3106 <DIO_enuSetPinDir>
    437a:	a8 2e       	mov	r10, r24
    437c:	bb 24       	eor	r11, r11
    437e:	cc 24       	eor	r12, r12
    4380:	dd 24       	eor	r13, r13
    4382:	ee 24       	eor	r14, r14
    4384:	ff 24       	eor	r15, r15
    4386:	87 01       	movw	r16, r14
    4388:	2a 2d       	mov	r18, r10
    438a:	3b 2d       	mov	r19, r11
    438c:	4c 2d       	mov	r20, r12
    438e:	5d 2d       	mov	r21, r13
    4390:	6e 2d       	mov	r22, r14
    4392:	7f 2d       	mov	r23, r15
    4394:	80 2f       	mov	r24, r16
    4396:	91 2f       	mov	r25, r17
    4398:	0e e1       	ldi	r16, 0x1E	; 30
    439a:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    439e:	a2 2e       	mov	r10, r18
    43a0:	b3 2e       	mov	r11, r19
    43a2:	c4 2e       	mov	r12, r20
    43a4:	d5 2e       	mov	r13, r21
    43a6:	e6 2e       	mov	r14, r22
    43a8:	f7 2e       	mov	r15, r23
    43aa:	08 2f       	mov	r16, r24
    43ac:	19 2f       	mov	r17, r25
    43ae:	2a 2d       	mov	r18, r10
    43b0:	3b 2d       	mov	r19, r11
    43b2:	4c 2d       	mov	r20, r12
    43b4:	5d 2d       	mov	r21, r13
    43b6:	6e 2d       	mov	r22, r14
    43b8:	7f 2d       	mov	r23, r15
    43ba:	80 2f       	mov	r24, r16
    43bc:	91 2f       	mov	r25, r17
    43be:	e9 ad       	ldd	r30, Y+57	; 0x39
    43c0:	e2 2b       	or	r30, r18
    43c2:	e9 af       	std	Y+57, r30	; 0x39
    43c4:	ea ad       	ldd	r30, Y+58	; 0x3a
    43c6:	e3 2b       	or	r30, r19
    43c8:	ea af       	std	Y+58, r30	; 0x3a
    43ca:	eb ad       	ldd	r30, Y+59	; 0x3b
    43cc:	e4 2b       	or	r30, r20
    43ce:	eb af       	std	Y+59, r30	; 0x3b
    43d0:	ec ad       	ldd	r30, Y+60	; 0x3c
    43d2:	e5 2b       	or	r30, r21
    43d4:	ec af       	std	Y+60, r30	; 0x3c
    43d6:	ed ad       	ldd	r30, Y+61	; 0x3d
    43d8:	e6 2b       	or	r30, r22
    43da:	ed af       	std	Y+61, r30	; 0x3d
    43dc:	ee ad       	ldd	r30, Y+62	; 0x3e
    43de:	e7 2b       	or	r30, r23
    43e0:	ee af       	std	Y+62, r30	; 0x3e
    43e2:	ef ad       	ldd	r30, Y+63	; 0x3f
    43e4:	e8 2b       	or	r30, r24
    43e6:	ef af       	std	Y+63, r30	; 0x3f
    43e8:	fe 01       	movw	r30, r28
    43ea:	e0 5c       	subi	r30, 0xC0	; 192
    43ec:	ff 4f       	sbci	r31, 0xFF	; 255
    43ee:	e0 81       	ld	r30, Z
    43f0:	8e 2f       	mov	r24, r30
    43f2:	89 2b       	or	r24, r25
    43f4:	fe 01       	movw	r30, r28
    43f6:	e0 5c       	subi	r30, 0xC0	; 192
    43f8:	ff 4f       	sbci	r31, 0xFF	; 255
    43fa:	80 83       	st	Z, r24

	// Function Set
		Local_u64Check |= ((u64)LCD_inenuSendCommand(0x38) << 33); //2 lines, 5*7 ,8 bit mode
    43fc:	88 e3       	ldi	r24, 0x38	; 56
    43fe:	0e 94 b8 2a 	call	0x5570	; 0x5570 <LCD_inenuSendCommand>
    4402:	a8 2e       	mov	r10, r24
    4404:	bb 24       	eor	r11, r11
    4406:	cc 24       	eor	r12, r12
    4408:	dd 24       	eor	r13, r13
    440a:	ee 24       	eor	r14, r14
    440c:	ff 24       	eor	r15, r15
    440e:	87 01       	movw	r16, r14
    4410:	2a 2d       	mov	r18, r10
    4412:	3b 2d       	mov	r19, r11
    4414:	4c 2d       	mov	r20, r12
    4416:	5d 2d       	mov	r21, r13
    4418:	6e 2d       	mov	r22, r14
    441a:	7f 2d       	mov	r23, r15
    441c:	80 2f       	mov	r24, r16
    441e:	91 2f       	mov	r25, r17
    4420:	01 e2       	ldi	r16, 0x21	; 33
    4422:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    4426:	a2 2e       	mov	r10, r18
    4428:	b3 2e       	mov	r11, r19
    442a:	c4 2e       	mov	r12, r20
    442c:	d5 2e       	mov	r13, r21
    442e:	e6 2e       	mov	r14, r22
    4430:	f7 2e       	mov	r15, r23
    4432:	08 2f       	mov	r16, r24
    4434:	19 2f       	mov	r17, r25
    4436:	2a 2d       	mov	r18, r10
    4438:	3b 2d       	mov	r19, r11
    443a:	4c 2d       	mov	r20, r12
    443c:	5d 2d       	mov	r21, r13
    443e:	6e 2d       	mov	r22, r14
    4440:	7f 2d       	mov	r23, r15
    4442:	80 2f       	mov	r24, r16
    4444:	91 2f       	mov	r25, r17
    4446:	e9 ad       	ldd	r30, Y+57	; 0x39
    4448:	e2 2b       	or	r30, r18
    444a:	e9 af       	std	Y+57, r30	; 0x39
    444c:	ea ad       	ldd	r30, Y+58	; 0x3a
    444e:	e3 2b       	or	r30, r19
    4450:	ea af       	std	Y+58, r30	; 0x3a
    4452:	eb ad       	ldd	r30, Y+59	; 0x3b
    4454:	e4 2b       	or	r30, r20
    4456:	eb af       	std	Y+59, r30	; 0x3b
    4458:	ec ad       	ldd	r30, Y+60	; 0x3c
    445a:	e5 2b       	or	r30, r21
    445c:	ec af       	std	Y+60, r30	; 0x3c
    445e:	ed ad       	ldd	r30, Y+61	; 0x3d
    4460:	e6 2b       	or	r30, r22
    4462:	ed af       	std	Y+61, r30	; 0x3d
    4464:	ee ad       	ldd	r30, Y+62	; 0x3e
    4466:	e7 2b       	or	r30, r23
    4468:	ee af       	std	Y+62, r30	; 0x3e
    446a:	ef ad       	ldd	r30, Y+63	; 0x3f
    446c:	e8 2b       	or	r30, r24
    446e:	ef af       	std	Y+63, r30	; 0x3f
    4470:	fe 01       	movw	r30, r28
    4472:	e0 5c       	subi	r30, 0xC0	; 192
    4474:	ff 4f       	sbci	r31, 0xFF	; 255
    4476:	e0 81       	ld	r30, Z
    4478:	8e 2f       	mov	r24, r30
    447a:	89 2b       	or	r24, r25
    447c:	fe 01       	movw	r30, r28
    447e:	e0 5c       	subi	r30, 0xC0	; 192
    4480:	ff 4f       	sbci	r31, 0xFF	; 255
    4482:	80 83       	st	Z, r24
    4484:	80 e0       	ldi	r24, 0x00	; 0
    4486:	90 e0       	ldi	r25, 0x00	; 0
    4488:	a0 e8       	ldi	r26, 0x80	; 128
    448a:	bf e3       	ldi	r27, 0x3F	; 63
    448c:	8f a3       	std	Y+39, r24	; 0x27
    448e:	98 a7       	std	Y+40, r25	; 0x28
    4490:	a9 a7       	std	Y+41, r26	; 0x29
    4492:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4494:	6f a1       	ldd	r22, Y+39	; 0x27
    4496:	78 a5       	ldd	r23, Y+40	; 0x28
    4498:	89 a5       	ldd	r24, Y+41	; 0x29
    449a:	9a a5       	ldd	r25, Y+42	; 0x2a
    449c:	20 e0       	ldi	r18, 0x00	; 0
    449e:	30 e0       	ldi	r19, 0x00	; 0
    44a0:	4a e7       	ldi	r20, 0x7A	; 122
    44a2:	53 e4       	ldi	r21, 0x43	; 67
    44a4:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    44a8:	dc 01       	movw	r26, r24
    44aa:	cb 01       	movw	r24, r22
    44ac:	8b a3       	std	Y+35, r24	; 0x23
    44ae:	9c a3       	std	Y+36, r25	; 0x24
    44b0:	ad a3       	std	Y+37, r26	; 0x25
    44b2:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    44b4:	6b a1       	ldd	r22, Y+35	; 0x23
    44b6:	7c a1       	ldd	r23, Y+36	; 0x24
    44b8:	8d a1       	ldd	r24, Y+37	; 0x25
    44ba:	9e a1       	ldd	r25, Y+38	; 0x26
    44bc:	20 e0       	ldi	r18, 0x00	; 0
    44be:	30 e0       	ldi	r19, 0x00	; 0
    44c0:	40 e8       	ldi	r20, 0x80	; 128
    44c2:	5f e3       	ldi	r21, 0x3F	; 63
    44c4:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <__ltsf2>
    44c8:	88 23       	and	r24, r24
    44ca:	2c f4       	brge	.+10     	; 0x44d6 <LCD_enuInit+0x7d2>
		__ticks = 1;
    44cc:	81 e0       	ldi	r24, 0x01	; 1
    44ce:	90 e0       	ldi	r25, 0x00	; 0
    44d0:	9a a3       	std	Y+34, r25	; 0x22
    44d2:	89 a3       	std	Y+33, r24	; 0x21
    44d4:	3f c0       	rjmp	.+126    	; 0x4554 <LCD_enuInit+0x850>
	else if (__tmp > 65535)
    44d6:	6b a1       	ldd	r22, Y+35	; 0x23
    44d8:	7c a1       	ldd	r23, Y+36	; 0x24
    44da:	8d a1       	ldd	r24, Y+37	; 0x25
    44dc:	9e a1       	ldd	r25, Y+38	; 0x26
    44de:	20 e0       	ldi	r18, 0x00	; 0
    44e0:	3f ef       	ldi	r19, 0xFF	; 255
    44e2:	4f e7       	ldi	r20, 0x7F	; 127
    44e4:	57 e4       	ldi	r21, 0x47	; 71
    44e6:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <__gtsf2>
    44ea:	18 16       	cp	r1, r24
    44ec:	4c f5       	brge	.+82     	; 0x4540 <LCD_enuInit+0x83c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44ee:	6f a1       	ldd	r22, Y+39	; 0x27
    44f0:	78 a5       	ldd	r23, Y+40	; 0x28
    44f2:	89 a5       	ldd	r24, Y+41	; 0x29
    44f4:	9a a5       	ldd	r25, Y+42	; 0x2a
    44f6:	20 e0       	ldi	r18, 0x00	; 0
    44f8:	30 e0       	ldi	r19, 0x00	; 0
    44fa:	40 e2       	ldi	r20, 0x20	; 32
    44fc:	51 e4       	ldi	r21, 0x41	; 65
    44fe:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    4502:	dc 01       	movw	r26, r24
    4504:	cb 01       	movw	r24, r22
    4506:	bc 01       	movw	r22, r24
    4508:	cd 01       	movw	r24, r26
    450a:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    450e:	dc 01       	movw	r26, r24
    4510:	cb 01       	movw	r24, r22
    4512:	9a a3       	std	Y+34, r25	; 0x22
    4514:	89 a3       	std	Y+33, r24	; 0x21
    4516:	0f c0       	rjmp	.+30     	; 0x4536 <LCD_enuInit+0x832>
    4518:	89 e1       	ldi	r24, 0x19	; 25
    451a:	90 e0       	ldi	r25, 0x00	; 0
    451c:	98 a3       	std	Y+32, r25	; 0x20
    451e:	8f 8f       	std	Y+31, r24	; 0x1f
    4520:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4522:	98 a1       	ldd	r25, Y+32	; 0x20
    4524:	01 97       	sbiw	r24, 0x01	; 1
    4526:	f1 f7       	brne	.-4      	; 0x4524 <LCD_enuInit+0x820>
    4528:	98 a3       	std	Y+32, r25	; 0x20
    452a:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    452c:	89 a1       	ldd	r24, Y+33	; 0x21
    452e:	9a a1       	ldd	r25, Y+34	; 0x22
    4530:	01 97       	sbiw	r24, 0x01	; 1
    4532:	9a a3       	std	Y+34, r25	; 0x22
    4534:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4536:	89 a1       	ldd	r24, Y+33	; 0x21
    4538:	9a a1       	ldd	r25, Y+34	; 0x22
    453a:	00 97       	sbiw	r24, 0x00	; 0
    453c:	69 f7       	brne	.-38     	; 0x4518 <LCD_enuInit+0x814>
    453e:	14 c0       	rjmp	.+40     	; 0x4568 <LCD_enuInit+0x864>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4540:	6b a1       	ldd	r22, Y+35	; 0x23
    4542:	7c a1       	ldd	r23, Y+36	; 0x24
    4544:	8d a1       	ldd	r24, Y+37	; 0x25
    4546:	9e a1       	ldd	r25, Y+38	; 0x26
    4548:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    454c:	dc 01       	movw	r26, r24
    454e:	cb 01       	movw	r24, r22
    4550:	9a a3       	std	Y+34, r25	; 0x22
    4552:	89 a3       	std	Y+33, r24	; 0x21
    4554:	89 a1       	ldd	r24, Y+33	; 0x21
    4556:	9a a1       	ldd	r25, Y+34	; 0x22
    4558:	9e 8f       	std	Y+30, r25	; 0x1e
    455a:	8d 8f       	std	Y+29, r24	; 0x1d
    455c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    455e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4560:	01 97       	sbiw	r24, 0x01	; 1
    4562:	f1 f7       	brne	.-4      	; 0x4560 <LCD_enuInit+0x85c>
    4564:	9e 8f       	std	Y+30, r25	; 0x1e
    4566:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(1);

		//Display ON
		Local_u64Check |= ((u64)LCD_inenuSendCommand(0x0f) << 36); //cursor appear, blink, LCD ON
    4568:	8f e0       	ldi	r24, 0x0F	; 15
    456a:	0e 94 b8 2a 	call	0x5570	; 0x5570 <LCD_inenuSendCommand>
    456e:	a8 2e       	mov	r10, r24
    4570:	bb 24       	eor	r11, r11
    4572:	cc 24       	eor	r12, r12
    4574:	dd 24       	eor	r13, r13
    4576:	ee 24       	eor	r14, r14
    4578:	ff 24       	eor	r15, r15
    457a:	87 01       	movw	r16, r14
    457c:	2a 2d       	mov	r18, r10
    457e:	3b 2d       	mov	r19, r11
    4580:	4c 2d       	mov	r20, r12
    4582:	5d 2d       	mov	r21, r13
    4584:	6e 2d       	mov	r22, r14
    4586:	7f 2d       	mov	r23, r15
    4588:	80 2f       	mov	r24, r16
    458a:	91 2f       	mov	r25, r17
    458c:	04 e2       	ldi	r16, 0x24	; 36
    458e:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    4592:	a2 2e       	mov	r10, r18
    4594:	b3 2e       	mov	r11, r19
    4596:	c4 2e       	mov	r12, r20
    4598:	d5 2e       	mov	r13, r21
    459a:	e6 2e       	mov	r14, r22
    459c:	f7 2e       	mov	r15, r23
    459e:	08 2f       	mov	r16, r24
    45a0:	19 2f       	mov	r17, r25
    45a2:	2a 2d       	mov	r18, r10
    45a4:	3b 2d       	mov	r19, r11
    45a6:	4c 2d       	mov	r20, r12
    45a8:	5d 2d       	mov	r21, r13
    45aa:	6e 2d       	mov	r22, r14
    45ac:	7f 2d       	mov	r23, r15
    45ae:	80 2f       	mov	r24, r16
    45b0:	91 2f       	mov	r25, r17
    45b2:	e9 ad       	ldd	r30, Y+57	; 0x39
    45b4:	e2 2b       	or	r30, r18
    45b6:	e9 af       	std	Y+57, r30	; 0x39
    45b8:	ea ad       	ldd	r30, Y+58	; 0x3a
    45ba:	e3 2b       	or	r30, r19
    45bc:	ea af       	std	Y+58, r30	; 0x3a
    45be:	eb ad       	ldd	r30, Y+59	; 0x3b
    45c0:	e4 2b       	or	r30, r20
    45c2:	eb af       	std	Y+59, r30	; 0x3b
    45c4:	ec ad       	ldd	r30, Y+60	; 0x3c
    45c6:	e5 2b       	or	r30, r21
    45c8:	ec af       	std	Y+60, r30	; 0x3c
    45ca:	ed ad       	ldd	r30, Y+61	; 0x3d
    45cc:	e6 2b       	or	r30, r22
    45ce:	ed af       	std	Y+61, r30	; 0x3d
    45d0:	ee ad       	ldd	r30, Y+62	; 0x3e
    45d2:	e7 2b       	or	r30, r23
    45d4:	ee af       	std	Y+62, r30	; 0x3e
    45d6:	ef ad       	ldd	r30, Y+63	; 0x3f
    45d8:	e8 2b       	or	r30, r24
    45da:	ef af       	std	Y+63, r30	; 0x3f
    45dc:	fe 01       	movw	r30, r28
    45de:	e0 5c       	subi	r30, 0xC0	; 192
    45e0:	ff 4f       	sbci	r31, 0xFF	; 255
    45e2:	e0 81       	ld	r30, Z
    45e4:	8e 2f       	mov	r24, r30
    45e6:	89 2b       	or	r24, r25
    45e8:	fe 01       	movw	r30, r28
    45ea:	e0 5c       	subi	r30, 0xC0	; 192
    45ec:	ff 4f       	sbci	r31, 0xFF	; 255
    45ee:	80 83       	st	Z, r24
    45f0:	80 e0       	ldi	r24, 0x00	; 0
    45f2:	90 e0       	ldi	r25, 0x00	; 0
    45f4:	a0 e8       	ldi	r26, 0x80	; 128
    45f6:	bf e3       	ldi	r27, 0x3F	; 63
    45f8:	89 8f       	std	Y+25, r24	; 0x19
    45fa:	9a 8f       	std	Y+26, r25	; 0x1a
    45fc:	ab 8f       	std	Y+27, r26	; 0x1b
    45fe:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4600:	69 8d       	ldd	r22, Y+25	; 0x19
    4602:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4604:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4606:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4608:	20 e0       	ldi	r18, 0x00	; 0
    460a:	30 e0       	ldi	r19, 0x00	; 0
    460c:	4a e7       	ldi	r20, 0x7A	; 122
    460e:	53 e4       	ldi	r21, 0x43	; 67
    4610:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    4614:	dc 01       	movw	r26, r24
    4616:	cb 01       	movw	r24, r22
    4618:	8d 8b       	std	Y+21, r24	; 0x15
    461a:	9e 8b       	std	Y+22, r25	; 0x16
    461c:	af 8b       	std	Y+23, r26	; 0x17
    461e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4620:	6d 89       	ldd	r22, Y+21	; 0x15
    4622:	7e 89       	ldd	r23, Y+22	; 0x16
    4624:	8f 89       	ldd	r24, Y+23	; 0x17
    4626:	98 8d       	ldd	r25, Y+24	; 0x18
    4628:	20 e0       	ldi	r18, 0x00	; 0
    462a:	30 e0       	ldi	r19, 0x00	; 0
    462c:	40 e8       	ldi	r20, 0x80	; 128
    462e:	5f e3       	ldi	r21, 0x3F	; 63
    4630:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <__ltsf2>
    4634:	88 23       	and	r24, r24
    4636:	2c f4       	brge	.+10     	; 0x4642 <LCD_enuInit+0x93e>
		__ticks = 1;
    4638:	81 e0       	ldi	r24, 0x01	; 1
    463a:	90 e0       	ldi	r25, 0x00	; 0
    463c:	9c 8b       	std	Y+20, r25	; 0x14
    463e:	8b 8b       	std	Y+19, r24	; 0x13
    4640:	3f c0       	rjmp	.+126    	; 0x46c0 <LCD_enuInit+0x9bc>
	else if (__tmp > 65535)
    4642:	6d 89       	ldd	r22, Y+21	; 0x15
    4644:	7e 89       	ldd	r23, Y+22	; 0x16
    4646:	8f 89       	ldd	r24, Y+23	; 0x17
    4648:	98 8d       	ldd	r25, Y+24	; 0x18
    464a:	20 e0       	ldi	r18, 0x00	; 0
    464c:	3f ef       	ldi	r19, 0xFF	; 255
    464e:	4f e7       	ldi	r20, 0x7F	; 127
    4650:	57 e4       	ldi	r21, 0x47	; 71
    4652:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <__gtsf2>
    4656:	18 16       	cp	r1, r24
    4658:	4c f5       	brge	.+82     	; 0x46ac <LCD_enuInit+0x9a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    465a:	69 8d       	ldd	r22, Y+25	; 0x19
    465c:	7a 8d       	ldd	r23, Y+26	; 0x1a
    465e:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4660:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4662:	20 e0       	ldi	r18, 0x00	; 0
    4664:	30 e0       	ldi	r19, 0x00	; 0
    4666:	40 e2       	ldi	r20, 0x20	; 32
    4668:	51 e4       	ldi	r21, 0x41	; 65
    466a:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    466e:	dc 01       	movw	r26, r24
    4670:	cb 01       	movw	r24, r22
    4672:	bc 01       	movw	r22, r24
    4674:	cd 01       	movw	r24, r26
    4676:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    467a:	dc 01       	movw	r26, r24
    467c:	cb 01       	movw	r24, r22
    467e:	9c 8b       	std	Y+20, r25	; 0x14
    4680:	8b 8b       	std	Y+19, r24	; 0x13
    4682:	0f c0       	rjmp	.+30     	; 0x46a2 <LCD_enuInit+0x99e>
    4684:	89 e1       	ldi	r24, 0x19	; 25
    4686:	90 e0       	ldi	r25, 0x00	; 0
    4688:	9a 8b       	std	Y+18, r25	; 0x12
    468a:	89 8b       	std	Y+17, r24	; 0x11
    468c:	89 89       	ldd	r24, Y+17	; 0x11
    468e:	9a 89       	ldd	r25, Y+18	; 0x12
    4690:	01 97       	sbiw	r24, 0x01	; 1
    4692:	f1 f7       	brne	.-4      	; 0x4690 <LCD_enuInit+0x98c>
    4694:	9a 8b       	std	Y+18, r25	; 0x12
    4696:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4698:	8b 89       	ldd	r24, Y+19	; 0x13
    469a:	9c 89       	ldd	r25, Y+20	; 0x14
    469c:	01 97       	sbiw	r24, 0x01	; 1
    469e:	9c 8b       	std	Y+20, r25	; 0x14
    46a0:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    46a2:	8b 89       	ldd	r24, Y+19	; 0x13
    46a4:	9c 89       	ldd	r25, Y+20	; 0x14
    46a6:	00 97       	sbiw	r24, 0x00	; 0
    46a8:	69 f7       	brne	.-38     	; 0x4684 <LCD_enuInit+0x980>
    46aa:	14 c0       	rjmp	.+40     	; 0x46d4 <LCD_enuInit+0x9d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    46ac:	6d 89       	ldd	r22, Y+21	; 0x15
    46ae:	7e 89       	ldd	r23, Y+22	; 0x16
    46b0:	8f 89       	ldd	r24, Y+23	; 0x17
    46b2:	98 8d       	ldd	r25, Y+24	; 0x18
    46b4:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    46b8:	dc 01       	movw	r26, r24
    46ba:	cb 01       	movw	r24, r22
    46bc:	9c 8b       	std	Y+20, r25	; 0x14
    46be:	8b 8b       	std	Y+19, r24	; 0x13
    46c0:	8b 89       	ldd	r24, Y+19	; 0x13
    46c2:	9c 89       	ldd	r25, Y+20	; 0x14
    46c4:	98 8b       	std	Y+16, r25	; 0x10
    46c6:	8f 87       	std	Y+15, r24	; 0x0f
    46c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    46ca:	98 89       	ldd	r25, Y+16	; 0x10
    46cc:	01 97       	sbiw	r24, 0x01	; 1
    46ce:	f1 f7       	brne	.-4      	; 0x46cc <LCD_enuInit+0x9c8>
    46d0:	98 8b       	std	Y+16, r25	; 0x10
    46d2:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(1);

		//Display clear
		Local_u64Check |= ((u64)LCD_inenuSendCommand(0x01) << 39);
    46d4:	81 e0       	ldi	r24, 0x01	; 1
    46d6:	0e 94 b8 2a 	call	0x5570	; 0x5570 <LCD_inenuSendCommand>
    46da:	a8 2e       	mov	r10, r24
    46dc:	bb 24       	eor	r11, r11
    46de:	cc 24       	eor	r12, r12
    46e0:	dd 24       	eor	r13, r13
    46e2:	ee 24       	eor	r14, r14
    46e4:	ff 24       	eor	r15, r15
    46e6:	87 01       	movw	r16, r14
    46e8:	2a 2d       	mov	r18, r10
    46ea:	3b 2d       	mov	r19, r11
    46ec:	4c 2d       	mov	r20, r12
    46ee:	5d 2d       	mov	r21, r13
    46f0:	6e 2d       	mov	r22, r14
    46f2:	7f 2d       	mov	r23, r15
    46f4:	80 2f       	mov	r24, r16
    46f6:	91 2f       	mov	r25, r17
    46f8:	07 e2       	ldi	r16, 0x27	; 39
    46fa:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    46fe:	a2 2e       	mov	r10, r18
    4700:	b3 2e       	mov	r11, r19
    4702:	c4 2e       	mov	r12, r20
    4704:	d5 2e       	mov	r13, r21
    4706:	e6 2e       	mov	r14, r22
    4708:	f7 2e       	mov	r15, r23
    470a:	08 2f       	mov	r16, r24
    470c:	19 2f       	mov	r17, r25
    470e:	2a 2d       	mov	r18, r10
    4710:	3b 2d       	mov	r19, r11
    4712:	4c 2d       	mov	r20, r12
    4714:	5d 2d       	mov	r21, r13
    4716:	6e 2d       	mov	r22, r14
    4718:	7f 2d       	mov	r23, r15
    471a:	80 2f       	mov	r24, r16
    471c:	91 2f       	mov	r25, r17
    471e:	e9 ad       	ldd	r30, Y+57	; 0x39
    4720:	e2 2b       	or	r30, r18
    4722:	e9 af       	std	Y+57, r30	; 0x39
    4724:	ea ad       	ldd	r30, Y+58	; 0x3a
    4726:	e3 2b       	or	r30, r19
    4728:	ea af       	std	Y+58, r30	; 0x3a
    472a:	eb ad       	ldd	r30, Y+59	; 0x3b
    472c:	e4 2b       	or	r30, r20
    472e:	eb af       	std	Y+59, r30	; 0x3b
    4730:	ec ad       	ldd	r30, Y+60	; 0x3c
    4732:	e5 2b       	or	r30, r21
    4734:	ec af       	std	Y+60, r30	; 0x3c
    4736:	ed ad       	ldd	r30, Y+61	; 0x3d
    4738:	e6 2b       	or	r30, r22
    473a:	ed af       	std	Y+61, r30	; 0x3d
    473c:	ee ad       	ldd	r30, Y+62	; 0x3e
    473e:	e7 2b       	or	r30, r23
    4740:	ee af       	std	Y+62, r30	; 0x3e
    4742:	ef ad       	ldd	r30, Y+63	; 0x3f
    4744:	e8 2b       	or	r30, r24
    4746:	ef af       	std	Y+63, r30	; 0x3f
    4748:	fe 01       	movw	r30, r28
    474a:	e0 5c       	subi	r30, 0xC0	; 192
    474c:	ff 4f       	sbci	r31, 0xFF	; 255
    474e:	e0 81       	ld	r30, Z
    4750:	8e 2f       	mov	r24, r30
    4752:	89 2b       	or	r24, r25
    4754:	fe 01       	movw	r30, r28
    4756:	e0 5c       	subi	r30, 0xC0	; 192
    4758:	ff 4f       	sbci	r31, 0xFF	; 255
    475a:	80 83       	st	Z, r24
    475c:	80 e0       	ldi	r24, 0x00	; 0
    475e:	90 e0       	ldi	r25, 0x00	; 0
    4760:	a0 e0       	ldi	r26, 0x00	; 0
    4762:	b0 e4       	ldi	r27, 0x40	; 64
    4764:	8b 87       	std	Y+11, r24	; 0x0b
    4766:	9c 87       	std	Y+12, r25	; 0x0c
    4768:	ad 87       	std	Y+13, r26	; 0x0d
    476a:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    476c:	6b 85       	ldd	r22, Y+11	; 0x0b
    476e:	7c 85       	ldd	r23, Y+12	; 0x0c
    4770:	8d 85       	ldd	r24, Y+13	; 0x0d
    4772:	9e 85       	ldd	r25, Y+14	; 0x0e
    4774:	20 e0       	ldi	r18, 0x00	; 0
    4776:	30 e0       	ldi	r19, 0x00	; 0
    4778:	4a e7       	ldi	r20, 0x7A	; 122
    477a:	53 e4       	ldi	r21, 0x43	; 67
    477c:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    4780:	dc 01       	movw	r26, r24
    4782:	cb 01       	movw	r24, r22
    4784:	8f 83       	std	Y+7, r24	; 0x07
    4786:	98 87       	std	Y+8, r25	; 0x08
    4788:	a9 87       	std	Y+9, r26	; 0x09
    478a:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    478c:	6f 81       	ldd	r22, Y+7	; 0x07
    478e:	78 85       	ldd	r23, Y+8	; 0x08
    4790:	89 85       	ldd	r24, Y+9	; 0x09
    4792:	9a 85       	ldd	r25, Y+10	; 0x0a
    4794:	20 e0       	ldi	r18, 0x00	; 0
    4796:	30 e0       	ldi	r19, 0x00	; 0
    4798:	40 e8       	ldi	r20, 0x80	; 128
    479a:	5f e3       	ldi	r21, 0x3F	; 63
    479c:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <__ltsf2>
    47a0:	88 23       	and	r24, r24
    47a2:	2c f4       	brge	.+10     	; 0x47ae <LCD_enuInit+0xaaa>
		__ticks = 1;
    47a4:	81 e0       	ldi	r24, 0x01	; 1
    47a6:	90 e0       	ldi	r25, 0x00	; 0
    47a8:	9e 83       	std	Y+6, r25	; 0x06
    47aa:	8d 83       	std	Y+5, r24	; 0x05
    47ac:	3f c0       	rjmp	.+126    	; 0x482c <LCD_enuInit+0xb28>
	else if (__tmp > 65535)
    47ae:	6f 81       	ldd	r22, Y+7	; 0x07
    47b0:	78 85       	ldd	r23, Y+8	; 0x08
    47b2:	89 85       	ldd	r24, Y+9	; 0x09
    47b4:	9a 85       	ldd	r25, Y+10	; 0x0a
    47b6:	20 e0       	ldi	r18, 0x00	; 0
    47b8:	3f ef       	ldi	r19, 0xFF	; 255
    47ba:	4f e7       	ldi	r20, 0x7F	; 127
    47bc:	57 e4       	ldi	r21, 0x47	; 71
    47be:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <__gtsf2>
    47c2:	18 16       	cp	r1, r24
    47c4:	4c f5       	brge	.+82     	; 0x4818 <LCD_enuInit+0xb14>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47c6:	6b 85       	ldd	r22, Y+11	; 0x0b
    47c8:	7c 85       	ldd	r23, Y+12	; 0x0c
    47ca:	8d 85       	ldd	r24, Y+13	; 0x0d
    47cc:	9e 85       	ldd	r25, Y+14	; 0x0e
    47ce:	20 e0       	ldi	r18, 0x00	; 0
    47d0:	30 e0       	ldi	r19, 0x00	; 0
    47d2:	40 e2       	ldi	r20, 0x20	; 32
    47d4:	51 e4       	ldi	r21, 0x41	; 65
    47d6:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    47da:	dc 01       	movw	r26, r24
    47dc:	cb 01       	movw	r24, r22
    47de:	bc 01       	movw	r22, r24
    47e0:	cd 01       	movw	r24, r26
    47e2:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    47e6:	dc 01       	movw	r26, r24
    47e8:	cb 01       	movw	r24, r22
    47ea:	9e 83       	std	Y+6, r25	; 0x06
    47ec:	8d 83       	std	Y+5, r24	; 0x05
    47ee:	0f c0       	rjmp	.+30     	; 0x480e <LCD_enuInit+0xb0a>
    47f0:	89 e1       	ldi	r24, 0x19	; 25
    47f2:	90 e0       	ldi	r25, 0x00	; 0
    47f4:	9c 83       	std	Y+4, r25	; 0x04
    47f6:	8b 83       	std	Y+3, r24	; 0x03
    47f8:	8b 81       	ldd	r24, Y+3	; 0x03
    47fa:	9c 81       	ldd	r25, Y+4	; 0x04
    47fc:	01 97       	sbiw	r24, 0x01	; 1
    47fe:	f1 f7       	brne	.-4      	; 0x47fc <LCD_enuInit+0xaf8>
    4800:	9c 83       	std	Y+4, r25	; 0x04
    4802:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4804:	8d 81       	ldd	r24, Y+5	; 0x05
    4806:	9e 81       	ldd	r25, Y+6	; 0x06
    4808:	01 97       	sbiw	r24, 0x01	; 1
    480a:	9e 83       	std	Y+6, r25	; 0x06
    480c:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    480e:	8d 81       	ldd	r24, Y+5	; 0x05
    4810:	9e 81       	ldd	r25, Y+6	; 0x06
    4812:	00 97       	sbiw	r24, 0x00	; 0
    4814:	69 f7       	brne	.-38     	; 0x47f0 <LCD_enuInit+0xaec>
    4816:	14 c0       	rjmp	.+40     	; 0x4840 <LCD_enuInit+0xb3c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4818:	6f 81       	ldd	r22, Y+7	; 0x07
    481a:	78 85       	ldd	r23, Y+8	; 0x08
    481c:	89 85       	ldd	r24, Y+9	; 0x09
    481e:	9a 85       	ldd	r25, Y+10	; 0x0a
    4820:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    4824:	dc 01       	movw	r26, r24
    4826:	cb 01       	movw	r24, r22
    4828:	9e 83       	std	Y+6, r25	; 0x06
    482a:	8d 83       	std	Y+5, r24	; 0x05
    482c:	8d 81       	ldd	r24, Y+5	; 0x05
    482e:	9e 81       	ldd	r25, Y+6	; 0x06
    4830:	9a 83       	std	Y+2, r25	; 0x02
    4832:	89 83       	std	Y+1, r24	; 0x01
    4834:	89 81       	ldd	r24, Y+1	; 0x01
    4836:	9a 81       	ldd	r25, Y+2	; 0x02
    4838:	01 97       	sbiw	r24, 0x01	; 1
    483a:	f1 f7       	brne	.-4      	; 0x4838 <LCD_enuInit+0xb34>
    483c:	9a 83       	std	Y+2, r25	; 0x02
    483e:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(2);

		//Set Entry mode
		Local_u64Check |= ((u64)LCD_inenuSendCommand(0x06) << 42); // shift disabled , DDRAM address increase
    4840:	86 e0       	ldi	r24, 0x06	; 6
    4842:	0e 94 b8 2a 	call	0x5570	; 0x5570 <LCD_inenuSendCommand>
    4846:	a8 2e       	mov	r10, r24
    4848:	bb 24       	eor	r11, r11
    484a:	cc 24       	eor	r12, r12
    484c:	dd 24       	eor	r13, r13
    484e:	ee 24       	eor	r14, r14
    4850:	ff 24       	eor	r15, r15
    4852:	87 01       	movw	r16, r14
    4854:	2a 2d       	mov	r18, r10
    4856:	3b 2d       	mov	r19, r11
    4858:	4c 2d       	mov	r20, r12
    485a:	5d 2d       	mov	r21, r13
    485c:	6e 2d       	mov	r22, r14
    485e:	7f 2d       	mov	r23, r15
    4860:	80 2f       	mov	r24, r16
    4862:	91 2f       	mov	r25, r17
    4864:	0a e2       	ldi	r16, 0x2A	; 42
    4866:	0e 94 c8 00 	call	0x190	; 0x190 <__ashldi3>
    486a:	a2 2e       	mov	r10, r18
    486c:	b3 2e       	mov	r11, r19
    486e:	c4 2e       	mov	r12, r20
    4870:	d5 2e       	mov	r13, r21
    4872:	e6 2e       	mov	r14, r22
    4874:	f7 2e       	mov	r15, r23
    4876:	08 2f       	mov	r16, r24
    4878:	19 2f       	mov	r17, r25
    487a:	2a 2d       	mov	r18, r10
    487c:	3b 2d       	mov	r19, r11
    487e:	4c 2d       	mov	r20, r12
    4880:	5d 2d       	mov	r21, r13
    4882:	6e 2d       	mov	r22, r14
    4884:	7f 2d       	mov	r23, r15
    4886:	80 2f       	mov	r24, r16
    4888:	91 2f       	mov	r25, r17
    488a:	e9 ad       	ldd	r30, Y+57	; 0x39
    488c:	e2 2b       	or	r30, r18
    488e:	e9 af       	std	Y+57, r30	; 0x39
    4890:	ea ad       	ldd	r30, Y+58	; 0x3a
    4892:	e3 2b       	or	r30, r19
    4894:	ea af       	std	Y+58, r30	; 0x3a
    4896:	eb ad       	ldd	r30, Y+59	; 0x3b
    4898:	e4 2b       	or	r30, r20
    489a:	eb af       	std	Y+59, r30	; 0x3b
    489c:	ec ad       	ldd	r30, Y+60	; 0x3c
    489e:	e5 2b       	or	r30, r21
    48a0:	ec af       	std	Y+60, r30	; 0x3c
    48a2:	ed ad       	ldd	r30, Y+61	; 0x3d
    48a4:	e6 2b       	or	r30, r22
    48a6:	ed af       	std	Y+61, r30	; 0x3d
    48a8:	ee ad       	ldd	r30, Y+62	; 0x3e
    48aa:	e7 2b       	or	r30, r23
    48ac:	ee af       	std	Y+62, r30	; 0x3e
    48ae:	ef ad       	ldd	r30, Y+63	; 0x3f
    48b0:	e8 2b       	or	r30, r24
    48b2:	ef af       	std	Y+63, r30	; 0x3f
    48b4:	fe 01       	movw	r30, r28
    48b6:	e0 5c       	subi	r30, 0xC0	; 192
    48b8:	ff 4f       	sbci	r31, 0xFF	; 255
    48ba:	e0 81       	ld	r30, Z
    48bc:	8e 2f       	mov	r24, r30
    48be:	89 2b       	or	r24, r25
    48c0:	fe 01       	movw	r30, r28
    48c2:	e0 5c       	subi	r30, 0xC0	; 192
    48c4:	ff 4f       	sbci	r31, 0xFF	; 255
    48c6:	80 83       	st	Z, r24

		for(Local_u8Iterator = 0; Local_u8Iterator < 45; Local_u8Iterator+=3)
    48c8:	fe 01       	movw	r30, r28
    48ca:	ef 5b       	subi	r30, 0xBF	; 191
    48cc:	ff 4f       	sbci	r31, 0xFF	; 255
    48ce:	10 82       	st	Z, r1
    48d0:	85 c0       	rjmp	.+266    	; 0x49dc <LCD_enuInit+0xcd8>
		{
			if(((Local_u64Check >> Local_u8Iterator) & (0b111)) != ES_OK)
    48d2:	fe 01       	movw	r30, r28
    48d4:	ef 5b       	subi	r30, 0xBF	; 191
    48d6:	ff 4f       	sbci	r31, 0xFF	; 255
    48d8:	80 81       	ld	r24, Z
    48da:	a8 2f       	mov	r26, r24
    48dc:	b0 e0       	ldi	r27, 0x00	; 0
    48de:	29 ad       	ldd	r18, Y+57	; 0x39
    48e0:	3a ad       	ldd	r19, Y+58	; 0x3a
    48e2:	4b ad       	ldd	r20, Y+59	; 0x3b
    48e4:	5c ad       	ldd	r21, Y+60	; 0x3c
    48e6:	6d ad       	ldd	r22, Y+61	; 0x3d
    48e8:	7e ad       	ldd	r23, Y+62	; 0x3e
    48ea:	8f ad       	ldd	r24, Y+63	; 0x3f
    48ec:	2e 96       	adiw	r28, 0x0e	; 14
    48ee:	df af       	std	Y+63, r29	; 0x3f
    48f0:	ce af       	std	Y+62, r28	; 0x3e
    48f2:	2e 97       	sbiw	r28, 0x0e	; 14
    48f4:	fe 01       	movw	r30, r28
    48f6:	e0 5c       	subi	r30, 0xC0	; 192
    48f8:	ff 4f       	sbci	r31, 0xFF	; 255
    48fa:	90 81       	ld	r25, Z
    48fc:	0a 2f       	mov	r16, r26
    48fe:	0e 94 49 00 	call	0x92	; 0x92 <__lshrdi3>
    4902:	a2 2e       	mov	r10, r18
    4904:	b3 2e       	mov	r11, r19
    4906:	c4 2e       	mov	r12, r20
    4908:	d5 2e       	mov	r13, r21
    490a:	e6 2e       	mov	r14, r22
    490c:	f7 2e       	mov	r15, r23
    490e:	08 2f       	mov	r16, r24
    4910:	19 2f       	mov	r17, r25
    4912:	2a 2d       	mov	r18, r10
    4914:	3b 2d       	mov	r19, r11
    4916:	4c 2d       	mov	r20, r12
    4918:	5d 2d       	mov	r21, r13
    491a:	6e 2d       	mov	r22, r14
    491c:	7f 2d       	mov	r23, r15
    491e:	80 2f       	mov	r24, r16
    4920:	91 2f       	mov	r25, r17
    4922:	e2 2f       	mov	r30, r18
    4924:	e7 70       	andi	r30, 0x07	; 7
    4926:	25 96       	adiw	r28, 0x05	; 5
    4928:	ef af       	std	Y+63, r30	; 0x3f
    492a:	25 97       	sbiw	r28, 0x05	; 5
    492c:	e3 2f       	mov	r30, r19
    492e:	e0 70       	andi	r30, 0x00	; 0
    4930:	26 96       	adiw	r28, 0x06	; 6
    4932:	ef af       	std	Y+63, r30	; 0x3f
    4934:	26 97       	sbiw	r28, 0x06	; 6
    4936:	e4 2f       	mov	r30, r20
    4938:	e0 70       	andi	r30, 0x00	; 0
    493a:	27 96       	adiw	r28, 0x07	; 7
    493c:	ef af       	std	Y+63, r30	; 0x3f
    493e:	27 97       	sbiw	r28, 0x07	; 7
    4940:	e5 2f       	mov	r30, r21
    4942:	e0 70       	andi	r30, 0x00	; 0
    4944:	28 96       	adiw	r28, 0x08	; 8
    4946:	ef af       	std	Y+63, r30	; 0x3f
    4948:	28 97       	sbiw	r28, 0x08	; 8
    494a:	e6 2f       	mov	r30, r22
    494c:	e0 70       	andi	r30, 0x00	; 0
    494e:	29 96       	adiw	r28, 0x09	; 9
    4950:	ef af       	std	Y+63, r30	; 0x3f
    4952:	29 97       	sbiw	r28, 0x09	; 9
    4954:	e7 2f       	mov	r30, r23
    4956:	e0 70       	andi	r30, 0x00	; 0
    4958:	2a 96       	adiw	r28, 0x0a	; 10
    495a:	ef af       	std	Y+63, r30	; 0x3f
    495c:	2a 97       	sbiw	r28, 0x0a	; 10
    495e:	e8 2f       	mov	r30, r24
    4960:	e0 70       	andi	r30, 0x00	; 0
    4962:	2b 96       	adiw	r28, 0x0b	; 11
    4964:	ef af       	std	Y+63, r30	; 0x3f
    4966:	2b 97       	sbiw	r28, 0x0b	; 11
    4968:	e9 2f       	mov	r30, r25
    496a:	e0 70       	andi	r30, 0x00	; 0
    496c:	2c 96       	adiw	r28, 0x0c	; 12
    496e:	ef af       	std	Y+63, r30	; 0x3f
    4970:	2c 97       	sbiw	r28, 0x0c	; 12
    4972:	25 96       	adiw	r28, 0x05	; 5
    4974:	8f ad       	ldd	r24, Y+63	; 0x3f
    4976:	25 97       	sbiw	r28, 0x05	; 5
    4978:	81 30       	cpi	r24, 0x01	; 1
    497a:	19 f5       	brne	.+70     	; 0x49c2 <LCD_enuInit+0xcbe>
    497c:	26 96       	adiw	r28, 0x06	; 6
    497e:	ef ad       	ldd	r30, Y+63	; 0x3f
    4980:	26 97       	sbiw	r28, 0x06	; 6
    4982:	ee 23       	and	r30, r30
    4984:	f1 f4       	brne	.+60     	; 0x49c2 <LCD_enuInit+0xcbe>
    4986:	27 96       	adiw	r28, 0x07	; 7
    4988:	8f ad       	ldd	r24, Y+63	; 0x3f
    498a:	27 97       	sbiw	r28, 0x07	; 7
    498c:	88 23       	and	r24, r24
    498e:	c9 f4       	brne	.+50     	; 0x49c2 <LCD_enuInit+0xcbe>
    4990:	28 96       	adiw	r28, 0x08	; 8
    4992:	ef ad       	ldd	r30, Y+63	; 0x3f
    4994:	28 97       	sbiw	r28, 0x08	; 8
    4996:	ee 23       	and	r30, r30
    4998:	a1 f4       	brne	.+40     	; 0x49c2 <LCD_enuInit+0xcbe>
    499a:	29 96       	adiw	r28, 0x09	; 9
    499c:	8f ad       	ldd	r24, Y+63	; 0x3f
    499e:	29 97       	sbiw	r28, 0x09	; 9
    49a0:	88 23       	and	r24, r24
    49a2:	79 f4       	brne	.+30     	; 0x49c2 <LCD_enuInit+0xcbe>
    49a4:	2a 96       	adiw	r28, 0x0a	; 10
    49a6:	ef ad       	ldd	r30, Y+63	; 0x3f
    49a8:	2a 97       	sbiw	r28, 0x0a	; 10
    49aa:	ee 23       	and	r30, r30
    49ac:	51 f4       	brne	.+20     	; 0x49c2 <LCD_enuInit+0xcbe>
    49ae:	2b 96       	adiw	r28, 0x0b	; 11
    49b0:	8f ad       	ldd	r24, Y+63	; 0x3f
    49b2:	2b 97       	sbiw	r28, 0x0b	; 11
    49b4:	88 23       	and	r24, r24
    49b6:	29 f4       	brne	.+10     	; 0x49c2 <LCD_enuInit+0xcbe>
    49b8:	2c 96       	adiw	r28, 0x0c	; 12
    49ba:	ef ad       	ldd	r30, Y+63	; 0x3f
    49bc:	2c 97       	sbiw	r28, 0x0c	; 12
    49be:	ee 23       	and	r30, r30
    49c0:	21 f0       	breq	.+8      	; 0x49ca <LCD_enuInit+0xcc6>
			{
				return ES_NOK;
    49c2:	24 96       	adiw	r28, 0x04	; 4
    49c4:	1f ae       	std	Y+63, r1	; 0x3f
    49c6:	24 97       	sbiw	r28, 0x04	; 4
    49c8:	1c c0       	rjmp	.+56     	; 0x4a02 <LCD_enuInit+0xcfe>
		_delay_ms(2);

		//Set Entry mode
		Local_u64Check |= ((u64)LCD_inenuSendCommand(0x06) << 42); // shift disabled , DDRAM address increase

		for(Local_u8Iterator = 0; Local_u8Iterator < 45; Local_u8Iterator+=3)
    49ca:	de 01       	movw	r26, r28
    49cc:	af 5b       	subi	r26, 0xBF	; 191
    49ce:	bf 4f       	sbci	r27, 0xFF	; 255
    49d0:	fe 01       	movw	r30, r28
    49d2:	ef 5b       	subi	r30, 0xBF	; 191
    49d4:	ff 4f       	sbci	r31, 0xFF	; 255
    49d6:	80 81       	ld	r24, Z
    49d8:	8d 5f       	subi	r24, 0xFD	; 253
    49da:	8c 93       	st	X, r24
    49dc:	fe 01       	movw	r30, r28
    49de:	ef 5b       	subi	r30, 0xBF	; 191
    49e0:	ff 4f       	sbci	r31, 0xFF	; 255
    49e2:	80 81       	ld	r24, Z
    49e4:	8d 32       	cpi	r24, 0x2D	; 45
    49e6:	08 f4       	brcc	.+2      	; 0x49ea <LCD_enuInit+0xce6>
    49e8:	74 cf       	rjmp	.-280    	; 0x48d2 <LCD_enuInit+0xbce>
			{
				return ES_NOK;
			}
		}

	Local_enuErrorState = ES_OK;
    49ea:	fe 01       	movw	r30, r28
    49ec:	ee 5b       	subi	r30, 0xBE	; 190
    49ee:	ff 4f       	sbci	r31, 0xFF	; 255
    49f0:	81 e0       	ldi	r24, 0x01	; 1
    49f2:	80 83       	st	Z, r24
#else
#error "Unsupported mode"
#endif


	return Local_enuErrorState;
    49f4:	fe 01       	movw	r30, r28
    49f6:	ee 5b       	subi	r30, 0xBE	; 190
    49f8:	ff 4f       	sbci	r31, 0xFF	; 255
    49fa:	80 81       	ld	r24, Z
    49fc:	24 96       	adiw	r28, 0x04	; 4
    49fe:	8f af       	std	Y+63, r24	; 0x3f
    4a00:	24 97       	sbiw	r28, 0x04	; 4
    4a02:	24 96       	adiw	r28, 0x04	; 4
    4a04:	8f ad       	ldd	r24, Y+63	; 0x3f
    4a06:	24 97       	sbiw	r28, 0x04	; 4
}
    4a08:	c3 5b       	subi	r28, 0xB3	; 179
    4a0a:	df 4f       	sbci	r29, 0xFF	; 255
    4a0c:	0f b6       	in	r0, 0x3f	; 63
    4a0e:	f8 94       	cli
    4a10:	de bf       	out	0x3e, r29	; 62
    4a12:	0f be       	out	0x3f, r0	; 63
    4a14:	cd bf       	out	0x3d, r28	; 61
    4a16:	cf 91       	pop	r28
    4a18:	df 91       	pop	r29
    4a1a:	1f 91       	pop	r17
    4a1c:	0f 91       	pop	r16
    4a1e:	ff 90       	pop	r15
    4a20:	ef 90       	pop	r14
    4a22:	df 90       	pop	r13
    4a24:	cf 90       	pop	r12
    4a26:	bf 90       	pop	r11
    4a28:	af 90       	pop	r10
    4a2a:	08 95       	ret

00004a2c <LCD_enuSendChar>:


ES_t LCD_enuSendChar(u8 Copy_u8Data)
{
    4a2c:	df 93       	push	r29
    4a2e:	cf 93       	push	r28
    4a30:	00 d0       	rcall	.+0      	; 0x4a32 <LCD_enuSendChar+0x6>
    4a32:	cd b7       	in	r28, 0x3d	; 61
    4a34:	de b7       	in	r29, 0x3e	; 62
    4a36:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    4a38:	19 82       	std	Y+1, r1	; 0x01

	// select instruction register

	if( DIO_enuSetPinVal( RS_PORT, RS_PIN, DIO_u8HIGH ) == ES_OK)
    4a3a:	80 e0       	ldi	r24, 0x00	; 0
    4a3c:	60 e0       	ldi	r22, 0x00	; 0
    4a3e:	41 e0       	ldi	r20, 0x01	; 1
    4a40:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    4a44:	81 30       	cpi	r24, 0x01	; 1
    4a46:	21 f4       	brne	.+8      	; 0x4a50 <LCD_enuSendChar+0x24>
	{
		Local_enuErrorState = LCD_inenuLatch(Copy_u8Data);
    4a48:	8a 81       	ldd	r24, Y+2	; 0x02
    4a4a:	0e 94 26 28 	call	0x504c	; 0x504c <LCD_inenuLatch>
    4a4e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    4a50:	89 81       	ldd	r24, Y+1	; 0x01
}
    4a52:	0f 90       	pop	r0
    4a54:	0f 90       	pop	r0
    4a56:	cf 91       	pop	r28
    4a58:	df 91       	pop	r29
    4a5a:	08 95       	ret

00004a5c <LCD_enuSendCommand>:


ES_t LCD_enuSendCommand(u8 Copy_u8Command)
{
    4a5c:	df 93       	push	r29
    4a5e:	cf 93       	push	r28
    4a60:	00 d0       	rcall	.+0      	; 0x4a62 <LCD_enuSendCommand+0x6>
    4a62:	cd b7       	in	r28, 0x3d	; 61
    4a64:	de b7       	in	r29, 0x3e	; 62
    4a66:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    4a68:	19 82       	std	Y+1, r1	; 0x01

	// select instruction register
	if( DIO_enuSetPinVal(RS_PORT, RS_PIN, DIO_u8LOW ) == ES_OK )
    4a6a:	80 e0       	ldi	r24, 0x00	; 0
    4a6c:	60 e0       	ldi	r22, 0x00	; 0
    4a6e:	40 e0       	ldi	r20, 0x00	; 0
    4a70:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    4a74:	81 30       	cpi	r24, 0x01	; 1
    4a76:	21 f4       	brne	.+8      	; 0x4a80 <LCD_enuSendCommand+0x24>
	{
		Local_enuErrorState = LCD_inenuLatch(Copy_u8Command);
    4a78:	8a 81       	ldd	r24, Y+2	; 0x02
    4a7a:	0e 94 26 28 	call	0x504c	; 0x504c <LCD_inenuLatch>
    4a7e:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    4a80:	89 81       	ldd	r24, Y+1	; 0x01

}
    4a82:	0f 90       	pop	r0
    4a84:	0f 90       	pop	r0
    4a86:	cf 91       	pop	r28
    4a88:	df 91       	pop	r29
    4a8a:	08 95       	ret

00004a8c <LCD_enuClearDisplay>:

ES_t LCD_enuClearDisplay(void)
{
    4a8c:	df 93       	push	r29
    4a8e:	cf 93       	push	r28
    4a90:	0f 92       	push	r0
    4a92:	cd b7       	in	r28, 0x3d	; 61
    4a94:	de b7       	in	r29, 0x3e	; 62
	ES_t Local_enuErrorState = ES_NOK;
    4a96:	19 82       	std	Y+1, r1	; 0x01

	Local_enuErrorState = LCD_inenuSendCommand(0x01);
    4a98:	81 e0       	ldi	r24, 0x01	; 1
    4a9a:	0e 94 b8 2a 	call	0x5570	; 0x5570 <LCD_inenuSendCommand>
    4a9e:	89 83       	std	Y+1, r24	; 0x01

	return Local_enuErrorState;
    4aa0:	89 81       	ldd	r24, Y+1	; 0x01
}
    4aa2:	0f 90       	pop	r0
    4aa4:	cf 91       	pop	r28
    4aa6:	df 91       	pop	r29
    4aa8:	08 95       	ret

00004aaa <LCD_enuDisplayString>:

ES_t LCD_enuDisplayString(u8* Copy_pu8String)
{
    4aaa:	df 93       	push	r29
    4aac:	cf 93       	push	r28
    4aae:	00 d0       	rcall	.+0      	; 0x4ab0 <LCD_enuDisplayString+0x6>
    4ab0:	00 d0       	rcall	.+0      	; 0x4ab2 <LCD_enuDisplayString+0x8>
    4ab2:	cd b7       	in	r28, 0x3d	; 61
    4ab4:	de b7       	in	r29, 0x3e	; 62
    4ab6:	9c 83       	std	Y+4, r25	; 0x04
    4ab8:	8b 83       	std	Y+3, r24	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    4aba:	1a 82       	std	Y+2, r1	; 0x02

	u8 Local_u8Iterator = 0;
    4abc:	19 82       	std	Y+1, r1	; 0x01
	if( DIO_enuSetPinVal(RS_PORT, RS_PIN, DIO_u8HIGH ) == ES_OK)
    4abe:	80 e0       	ldi	r24, 0x00	; 0
    4ac0:	60 e0       	ldi	r22, 0x00	; 0
    4ac2:	41 e0       	ldi	r20, 0x01	; 1
    4ac4:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    4ac8:	81 30       	cpi	r24, 0x01	; 1
    4aca:	01 f5       	brne	.+64     	; 0x4b0c <LCD_enuDisplayString+0x62>
	{
		Local_enuErrorState = ES_OK;
    4acc:	81 e0       	ldi	r24, 0x01	; 1
    4ace:	8a 83       	std	Y+2, r24	; 0x02
    4ad0:	0f c0       	rjmp	.+30     	; 0x4af0 <LCD_enuDisplayString+0x46>
		while( Copy_pu8String[Local_u8Iterator] && Local_enuErrorState == ES_OK )
		{
			Local_enuErrorState = LCD_inenuLatch(Copy_pu8String[Local_u8Iterator]);
    4ad2:	89 81       	ldd	r24, Y+1	; 0x01
    4ad4:	28 2f       	mov	r18, r24
    4ad6:	30 e0       	ldi	r19, 0x00	; 0
    4ad8:	8b 81       	ldd	r24, Y+3	; 0x03
    4ada:	9c 81       	ldd	r25, Y+4	; 0x04
    4adc:	fc 01       	movw	r30, r24
    4ade:	e2 0f       	add	r30, r18
    4ae0:	f3 1f       	adc	r31, r19
    4ae2:	80 81       	ld	r24, Z
    4ae4:	0e 94 26 28 	call	0x504c	; 0x504c <LCD_inenuLatch>
    4ae8:	8a 83       	std	Y+2, r24	; 0x02
			Local_u8Iterator++;
    4aea:	89 81       	ldd	r24, Y+1	; 0x01
    4aec:	8f 5f       	subi	r24, 0xFF	; 255
    4aee:	89 83       	std	Y+1, r24	; 0x01

	u8 Local_u8Iterator = 0;
	if( DIO_enuSetPinVal(RS_PORT, RS_PIN, DIO_u8HIGH ) == ES_OK)
	{
		Local_enuErrorState = ES_OK;
		while( Copy_pu8String[Local_u8Iterator] && Local_enuErrorState == ES_OK )
    4af0:	89 81       	ldd	r24, Y+1	; 0x01
    4af2:	28 2f       	mov	r18, r24
    4af4:	30 e0       	ldi	r19, 0x00	; 0
    4af6:	8b 81       	ldd	r24, Y+3	; 0x03
    4af8:	9c 81       	ldd	r25, Y+4	; 0x04
    4afa:	fc 01       	movw	r30, r24
    4afc:	e2 0f       	add	r30, r18
    4afe:	f3 1f       	adc	r31, r19
    4b00:	80 81       	ld	r24, Z
    4b02:	88 23       	and	r24, r24
    4b04:	19 f0       	breq	.+6      	; 0x4b0c <LCD_enuDisplayString+0x62>
    4b06:	8a 81       	ldd	r24, Y+2	; 0x02
    4b08:	81 30       	cpi	r24, 0x01	; 1
    4b0a:	19 f3       	breq	.-58     	; 0x4ad2 <LCD_enuDisplayString+0x28>
			Local_enuErrorState = LCD_inenuLatch(Copy_pu8String[Local_u8Iterator]);
			Local_u8Iterator++;
		}
	}

	return Local_enuErrorState;
    4b0c:	8a 81       	ldd	r24, Y+2	; 0x02
}
    4b0e:	0f 90       	pop	r0
    4b10:	0f 90       	pop	r0
    4b12:	0f 90       	pop	r0
    4b14:	0f 90       	pop	r0
    4b16:	cf 91       	pop	r28
    4b18:	df 91       	pop	r29
    4b1a:	08 95       	ret

00004b1c <LCD_enuCreatChar>:




ES_t LCD_enuCreatChar(u8* Copy_Au8NewChar, u8 Copy_u8Size, u8 Copy_u8StartPattern )
{
    4b1c:	df 93       	push	r29
    4b1e:	cf 93       	push	r28
    4b20:	00 d0       	rcall	.+0      	; 0x4b22 <LCD_enuCreatChar+0x6>
    4b22:	00 d0       	rcall	.+0      	; 0x4b24 <LCD_enuCreatChar+0x8>
    4b24:	00 d0       	rcall	.+0      	; 0x4b26 <LCD_enuCreatChar+0xa>
    4b26:	cd b7       	in	r28, 0x3d	; 61
    4b28:	de b7       	in	r29, 0x3e	; 62
    4b2a:	9c 83       	std	Y+4, r25	; 0x04
    4b2c:	8b 83       	std	Y+3, r24	; 0x03
    4b2e:	6d 83       	std	Y+5, r22	; 0x05
    4b30:	4e 83       	std	Y+6, r20	; 0x06
	ES_t Local_enuErrorState = ES_NOK;
    4b32:	1a 82       	std	Y+2, r1	; 0x02

	Local_enuErrorState = LCD_enuSendCommand(0x40 + 8*Copy_u8StartPattern);
    4b34:	8e 81       	ldd	r24, Y+6	; 0x06
    4b36:	88 2f       	mov	r24, r24
    4b38:	90 e0       	ldi	r25, 0x00	; 0
    4b3a:	08 96       	adiw	r24, 0x08	; 8
    4b3c:	88 0f       	add	r24, r24
    4b3e:	99 1f       	adc	r25, r25
    4b40:	88 0f       	add	r24, r24
    4b42:	99 1f       	adc	r25, r25
    4b44:	88 0f       	add	r24, r24
    4b46:	99 1f       	adc	r25, r25
    4b48:	0e 94 2e 25 	call	0x4a5c	; 0x4a5c <LCD_enuSendCommand>
    4b4c:	8a 83       	std	Y+2, r24	; 0x02

	u8 Local_u8Iterator;

	for( Local_u8Iterator = 0 ; Local_u8Iterator < Copy_u8Size*8 ; ++Local_u8Iterator)
    4b4e:	19 82       	std	Y+1, r1	; 0x01
    4b50:	0e c0       	rjmp	.+28     	; 0x4b6e <LCD_enuCreatChar+0x52>
	{
		LCD_enuSendChar(Copy_Au8NewChar[Local_u8Iterator]);
    4b52:	89 81       	ldd	r24, Y+1	; 0x01
    4b54:	28 2f       	mov	r18, r24
    4b56:	30 e0       	ldi	r19, 0x00	; 0
    4b58:	8b 81       	ldd	r24, Y+3	; 0x03
    4b5a:	9c 81       	ldd	r25, Y+4	; 0x04
    4b5c:	fc 01       	movw	r30, r24
    4b5e:	e2 0f       	add	r30, r18
    4b60:	f3 1f       	adc	r31, r19
    4b62:	80 81       	ld	r24, Z
    4b64:	0e 94 16 25 	call	0x4a2c	; 0x4a2c <LCD_enuSendChar>

	Local_enuErrorState = LCD_enuSendCommand(0x40 + 8*Copy_u8StartPattern);

	u8 Local_u8Iterator;

	for( Local_u8Iterator = 0 ; Local_u8Iterator < Copy_u8Size*8 ; ++Local_u8Iterator)
    4b68:	89 81       	ldd	r24, Y+1	; 0x01
    4b6a:	8f 5f       	subi	r24, 0xFF	; 255
    4b6c:	89 83       	std	Y+1, r24	; 0x01
    4b6e:	89 81       	ldd	r24, Y+1	; 0x01
    4b70:	28 2f       	mov	r18, r24
    4b72:	30 e0       	ldi	r19, 0x00	; 0
    4b74:	8d 81       	ldd	r24, Y+5	; 0x05
    4b76:	88 2f       	mov	r24, r24
    4b78:	90 e0       	ldi	r25, 0x00	; 0
    4b7a:	88 0f       	add	r24, r24
    4b7c:	99 1f       	adc	r25, r25
    4b7e:	88 0f       	add	r24, r24
    4b80:	99 1f       	adc	r25, r25
    4b82:	88 0f       	add	r24, r24
    4b84:	99 1f       	adc	r25, r25
    4b86:	28 17       	cp	r18, r24
    4b88:	39 07       	cpc	r19, r25
    4b8a:	1c f3       	brlt	.-58     	; 0x4b52 <LCD_enuCreatChar+0x36>

#if DISPLAY_DIRECTION == RIGHT_TO_LEFT
	LCD_enuSendCommand(0x80);
	LCD_enuSendCommand(0x06);
#elif DISPLAY_DIRECTION == LEFT_TO_RIGHT
	LCD_enuSendCommand(0x8f);
    4b8c:	8f e8       	ldi	r24, 0x8F	; 143
    4b8e:	0e 94 2e 25 	call	0x4a5c	; 0x4a5c <LCD_enuSendCommand>
	LCD_enuSendCommand(0x04);
    4b92:	84 e0       	ldi	r24, 0x04	; 4
    4b94:	0e 94 2e 25 	call	0x4a5c	; 0x4a5c <LCD_enuSendCommand>
//	LCD_enuSendCommand(0x06);
//#else
//#error "Unsupported Display Direction"
//#endif

	return Local_enuErrorState;
    4b98:	8a 81       	ldd	r24, Y+2	; 0x02

}
    4b9a:	26 96       	adiw	r28, 0x06	; 6
    4b9c:	0f b6       	in	r0, 0x3f	; 63
    4b9e:	f8 94       	cli
    4ba0:	de bf       	out	0x3e, r29	; 62
    4ba2:	0f be       	out	0x3f, r0	; 63
    4ba4:	cd bf       	out	0x3d, r28	; 61
    4ba6:	cf 91       	pop	r28
    4ba8:	df 91       	pop	r29
    4baa:	08 95       	ret

00004bac <LCD_enuGoto>:



ES_t LCD_enuGoto(u8 Copy_u8Line,u8 Copy_u8Block)
{
    4bac:	df 93       	push	r29
    4bae:	cf 93       	push	r28
    4bb0:	00 d0       	rcall	.+0      	; 0x4bb2 <LCD_enuGoto+0x6>
    4bb2:	0f 92       	push	r0
    4bb4:	cd b7       	in	r28, 0x3d	; 61
    4bb6:	de b7       	in	r29, 0x3e	; 62
    4bb8:	8a 83       	std	Y+2, r24	; 0x02
    4bba:	6b 83       	std	Y+3, r22	; 0x03
	ES_t Local_enuErrorState = ES_NOK;
    4bbc:	19 82       	std	Y+1, r1	; 0x01

	if (Copy_u8Line == 1)
    4bbe:	8a 81       	ldd	r24, Y+2	; 0x02
    4bc0:	81 30       	cpi	r24, 0x01	; 1
    4bc2:	31 f4       	brne	.+12     	; 0x4bd0 <LCD_enuGoto+0x24>
	{
		Local_enuErrorState = LCD_inenuSendCommand(0x80 + Copy_u8Block);
    4bc4:	8b 81       	ldd	r24, Y+3	; 0x03
    4bc6:	80 58       	subi	r24, 0x80	; 128
    4bc8:	0e 94 b8 2a 	call	0x5570	; 0x5570 <LCD_inenuSendCommand>
    4bcc:	89 83       	std	Y+1, r24	; 0x01
    4bce:	05 c0       	rjmp	.+10     	; 0x4bda <LCD_enuGoto+0x2e>
	}
	else
	{
		Local_enuErrorState = LCD_inenuSendCommand(0xc0 +Copy_u8Block);
    4bd0:	8b 81       	ldd	r24, Y+3	; 0x03
    4bd2:	80 54       	subi	r24, 0x40	; 64
    4bd4:	0e 94 b8 2a 	call	0x5570	; 0x5570 <LCD_inenuSendCommand>
    4bd8:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    4bda:	89 81       	ldd	r24, Y+1	; 0x01
}
    4bdc:	0f 90       	pop	r0
    4bde:	0f 90       	pop	r0
    4be0:	0f 90       	pop	r0
    4be2:	cf 91       	pop	r28
    4be4:	df 91       	pop	r29
    4be6:	08 95       	ret

00004be8 <LCD_enuWriteNumber>:


ES_t LCD_enuWriteNumber(s64 Copy_u8num)
{
    4be8:	8f 92       	push	r8
    4bea:	9f 92       	push	r9
    4bec:	af 92       	push	r10
    4bee:	bf 92       	push	r11
    4bf0:	cf 92       	push	r12
    4bf2:	df 92       	push	r13
    4bf4:	ef 92       	push	r14
    4bf6:	ff 92       	push	r15
    4bf8:	0f 93       	push	r16
    4bfa:	1f 93       	push	r17
    4bfc:	df 93       	push	r29
    4bfe:	cf 93       	push	r28
    4c00:	cd b7       	in	r28, 0x3d	; 61
    4c02:	de b7       	in	r29, 0x3e	; 62
    4c04:	c6 54       	subi	r28, 0x46	; 70
    4c06:	d0 40       	sbci	r29, 0x00	; 0
    4c08:	0f b6       	in	r0, 0x3f	; 63
    4c0a:	f8 94       	cli
    4c0c:	de bf       	out	0x3e, r29	; 62
    4c0e:	0f be       	out	0x3f, r0	; 63
    4c10:	cd bf       	out	0x3d, r28	; 61
    4c12:	2b 8b       	std	Y+19, r18	; 0x13
    4c14:	3c 8b       	std	Y+20, r19	; 0x14
    4c16:	4d 8b       	std	Y+21, r20	; 0x15
    4c18:	5e 8b       	std	Y+22, r21	; 0x16
    4c1a:	6f 8b       	std	Y+23, r22	; 0x17
    4c1c:	78 8f       	std	Y+24, r23	; 0x18
    4c1e:	89 8f       	std	Y+25, r24	; 0x19
    4c20:	9a 8f       	std	Y+26, r25	; 0x1a
	ES_t Local_enuErrorState = ES_NOK;
    4c22:	1a 82       	std	Y+2, r1	; 0x02
	Local_enuErrorState = DIO_enuSetPinVal(RS_PORT, RS_PIN, DIO_u8HIGH );
    4c24:	80 e0       	ldi	r24, 0x00	; 0
    4c26:	60 e0       	ldi	r22, 0x00	; 0
    4c28:	41 e0       	ldi	r20, 0x01	; 1
    4c2a:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    4c2e:	8a 83       	std	Y+2, r24	; 0x02

	u8 Local_Au8Digits[16]={0};
    4c30:	80 e1       	ldi	r24, 0x10	; 16
    4c32:	fe 01       	movw	r30, r28
    4c34:	33 96       	adiw	r30, 0x03	; 3
    4c36:	df 01       	movw	r26, r30
    4c38:	98 2f       	mov	r25, r24
    4c3a:	1d 92       	st	X+, r1
    4c3c:	9a 95       	dec	r25
    4c3e:	e9 f7       	brne	.-6      	; 0x4c3a <LCD_enuWriteNumber+0x52>
	s8 Local_u8Iterator = 0;
    4c40:	19 82       	std	Y+1, r1	; 0x01

	if(Copy_u8num < 0 && Local_enuErrorState == ES_OK)
    4c42:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4c44:	88 23       	and	r24, r24
    4c46:	d4 f0       	brlt	.+52     	; 0x4c7c <LCD_enuWriteNumber+0x94>
    4c48:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4c4a:	88 23       	and	r24, r24
    4c4c:	09 f0       	breq	.+2      	; 0x4c50 <LCD_enuWriteNumber+0x68>
    4c4e:	9c c1       	rjmp	.+824    	; 0x4f88 <LCD_enuWriteNumber+0x3a0>
    4c50:	89 8d       	ldd	r24, Y+25	; 0x19
    4c52:	88 23       	and	r24, r24
    4c54:	09 f0       	breq	.+2      	; 0x4c58 <LCD_enuWriteNumber+0x70>
    4c56:	98 c1       	rjmp	.+816    	; 0x4f88 <LCD_enuWriteNumber+0x3a0>
    4c58:	88 8d       	ldd	r24, Y+24	; 0x18
    4c5a:	88 23       	and	r24, r24
    4c5c:	09 f0       	breq	.+2      	; 0x4c60 <LCD_enuWriteNumber+0x78>
    4c5e:	94 c1       	rjmp	.+808    	; 0x4f88 <LCD_enuWriteNumber+0x3a0>
    4c60:	8f 89       	ldd	r24, Y+23	; 0x17
    4c62:	88 23       	and	r24, r24
    4c64:	09 f0       	breq	.+2      	; 0x4c68 <LCD_enuWriteNumber+0x80>
    4c66:	90 c1       	rjmp	.+800    	; 0x4f88 <LCD_enuWriteNumber+0x3a0>
    4c68:	8e 89       	ldd	r24, Y+22	; 0x16
    4c6a:	88 23       	and	r24, r24
    4c6c:	09 f0       	breq	.+2      	; 0x4c70 <LCD_enuWriteNumber+0x88>
    4c6e:	8c c1       	rjmp	.+792    	; 0x4f88 <LCD_enuWriteNumber+0x3a0>
    4c70:	8d 89       	ldd	r24, Y+21	; 0x15
    4c72:	88 23       	and	r24, r24
    4c74:	09 f0       	breq	.+2      	; 0x4c78 <LCD_enuWriteNumber+0x90>
    4c76:	88 c1       	rjmp	.+784    	; 0x4f88 <LCD_enuWriteNumber+0x3a0>
    4c78:	ac 89       	ldd	r26, Y+20	; 0x14
    4c7a:	86 c1       	rjmp	.+780    	; 0x4f88 <LCD_enuWriteNumber+0x3a0>
    4c7c:	8a 81       	ldd	r24, Y+2	; 0x02
    4c7e:	81 30       	cpi	r24, 0x01	; 1
    4c80:	09 f0       	breq	.+2      	; 0x4c84 <LCD_enuWriteNumber+0x9c>
    4c82:	82 c1       	rjmp	.+772    	; 0x4f88 <LCD_enuWriteNumber+0x3a0>
	{
		Local_enuErrorState = LCD_inenuLatch('-');
    4c84:	8d e2       	ldi	r24, 0x2D	; 45
    4c86:	0e 94 26 28 	call	0x504c	; 0x504c <LCD_inenuLatch>
    4c8a:	8a 83       	std	Y+2, r24	; 0x02
		Copy_u8num *= -1;
    4c8c:	1c 8e       	std	Y+28, r1	; 0x1c
    4c8e:	1d 8e       	std	Y+29, r1	; 0x1d
    4c90:	1e 8e       	std	Y+30, r1	; 0x1e
    4c92:	1f 8e       	std	Y+31, r1	; 0x1f
    4c94:	18 a2       	std	Y+32, r1	; 0x20
    4c96:	19 a2       	std	Y+33, r1	; 0x21
    4c98:	1a a2       	std	Y+34, r1	; 0x22
    4c9a:	1b a2       	std	Y+35, r1	; 0x23
    4c9c:	bb 89       	ldd	r27, Y+19	; 0x13
    4c9e:	bc a3       	std	Y+36, r27	; 0x24
    4ca0:	8c 89       	ldd	r24, Y+20	; 0x14
    4ca2:	8d a3       	std	Y+37, r24	; 0x25
    4ca4:	9d 89       	ldd	r25, Y+21	; 0x15
    4ca6:	9e a3       	std	Y+38, r25	; 0x26
    4ca8:	ae 89       	ldd	r26, Y+22	; 0x16
    4caa:	af a3       	std	Y+39, r26	; 0x27
    4cac:	bf 89       	ldd	r27, Y+23	; 0x17
    4cae:	b8 a7       	std	Y+40, r27	; 0x28
    4cb0:	88 8d       	ldd	r24, Y+24	; 0x18
    4cb2:	89 a7       	std	Y+41, r24	; 0x29
    4cb4:	99 8d       	ldd	r25, Y+25	; 0x19
    4cb6:	9a a7       	std	Y+42, r25	; 0x2a
    4cb8:	aa 8d       	ldd	r26, Y+26	; 0x1a
    4cba:	ab a7       	std	Y+43, r26	; 0x2b
    4cbc:	bc 8d       	ldd	r27, Y+28	; 0x1c
    4cbe:	8c a1       	ldd	r24, Y+36	; 0x24
    4cc0:	b8 1b       	sub	r27, r24
    4cc2:	bc a7       	std	Y+44, r27	; 0x2c
    4cc4:	91 e0       	ldi	r25, 0x01	; 1
    4cc6:	9c ab       	std	Y+52, r25	; 0x34
    4cc8:	ac a5       	ldd	r26, Y+44	; 0x2c
    4cca:	bc 8d       	ldd	r27, Y+28	; 0x1c
    4ccc:	ba 17       	cp	r27, r26
    4cce:	08 f0       	brcs	.+2      	; 0x4cd2 <LCD_enuWriteNumber+0xea>
    4cd0:	1c aa       	std	Y+52, r1	; 0x34
    4cd2:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4cd4:	9d a1       	ldd	r25, Y+37	; 0x25
    4cd6:	89 1b       	sub	r24, r25
    4cd8:	8d a7       	std	Y+45, r24	; 0x2d
    4cda:	a1 e0       	ldi	r26, 0x01	; 1
    4cdc:	ad ab       	std	Y+53, r26	; 0x35
    4cde:	bd a5       	ldd	r27, Y+45	; 0x2d
    4ce0:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4ce2:	8b 17       	cp	r24, r27
    4ce4:	08 f0       	brcs	.+2      	; 0x4ce8 <LCD_enuWriteNumber+0x100>
    4ce6:	1d aa       	std	Y+53, r1	; 0x35
    4ce8:	9d a5       	ldd	r25, Y+45	; 0x2d
    4cea:	ac a9       	ldd	r26, Y+52	; 0x34
    4cec:	9a 1b       	sub	r25, r26
    4cee:	9e ab       	std	Y+54, r25	; 0x36
    4cf0:	b1 e0       	ldi	r27, 0x01	; 1
    4cf2:	bf ab       	std	Y+55, r27	; 0x37
    4cf4:	8e a9       	ldd	r24, Y+54	; 0x36
    4cf6:	9d a5       	ldd	r25, Y+45	; 0x2d
    4cf8:	98 17       	cp	r25, r24
    4cfa:	08 f0       	brcs	.+2      	; 0x4cfe <LCD_enuWriteNumber+0x116>
    4cfc:	1f aa       	std	Y+55, r1	; 0x37
    4cfe:	ad a9       	ldd	r26, Y+53	; 0x35
    4d00:	bf a9       	ldd	r27, Y+55	; 0x37
    4d02:	ab 2b       	or	r26, r27
    4d04:	ad ab       	std	Y+53, r26	; 0x35
    4d06:	8e a9       	ldd	r24, Y+54	; 0x36
    4d08:	8d a7       	std	Y+45, r24	; 0x2d
    4d0a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4d0c:	ae a1       	ldd	r26, Y+38	; 0x26
    4d0e:	9a 1b       	sub	r25, r26
    4d10:	9e a7       	std	Y+46, r25	; 0x2e
    4d12:	b1 e0       	ldi	r27, 0x01	; 1
    4d14:	b8 af       	std	Y+56, r27	; 0x38
    4d16:	8e a5       	ldd	r24, Y+46	; 0x2e
    4d18:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4d1a:	98 17       	cp	r25, r24
    4d1c:	08 f0       	brcs	.+2      	; 0x4d20 <LCD_enuWriteNumber+0x138>
    4d1e:	18 ae       	std	Y+56, r1	; 0x38
    4d20:	ae a5       	ldd	r26, Y+46	; 0x2e
    4d22:	bd a9       	ldd	r27, Y+53	; 0x35
    4d24:	ab 1b       	sub	r26, r27
    4d26:	a9 af       	std	Y+57, r26	; 0x39
    4d28:	81 e0       	ldi	r24, 0x01	; 1
    4d2a:	8a af       	std	Y+58, r24	; 0x3a
    4d2c:	99 ad       	ldd	r25, Y+57	; 0x39
    4d2e:	ae a5       	ldd	r26, Y+46	; 0x2e
    4d30:	a9 17       	cp	r26, r25
    4d32:	08 f0       	brcs	.+2      	; 0x4d36 <LCD_enuWriteNumber+0x14e>
    4d34:	1a ae       	std	Y+58, r1	; 0x3a
    4d36:	b8 ad       	ldd	r27, Y+56	; 0x38
    4d38:	8a ad       	ldd	r24, Y+58	; 0x3a
    4d3a:	b8 2b       	or	r27, r24
    4d3c:	b8 af       	std	Y+56, r27	; 0x38
    4d3e:	99 ad       	ldd	r25, Y+57	; 0x39
    4d40:	9e a7       	std	Y+46, r25	; 0x2e
    4d42:	af 8d       	ldd	r26, Y+31	; 0x1f
    4d44:	bf a1       	ldd	r27, Y+39	; 0x27
    4d46:	ab 1b       	sub	r26, r27
    4d48:	af a7       	std	Y+47, r26	; 0x2f
    4d4a:	81 e0       	ldi	r24, 0x01	; 1
    4d4c:	8b af       	std	Y+59, r24	; 0x3b
    4d4e:	9f a5       	ldd	r25, Y+47	; 0x2f
    4d50:	af 8d       	ldd	r26, Y+31	; 0x1f
    4d52:	a9 17       	cp	r26, r25
    4d54:	08 f0       	brcs	.+2      	; 0x4d58 <LCD_enuWriteNumber+0x170>
    4d56:	1b ae       	std	Y+59, r1	; 0x3b
    4d58:	bf a5       	ldd	r27, Y+47	; 0x2f
    4d5a:	88 ad       	ldd	r24, Y+56	; 0x38
    4d5c:	b8 1b       	sub	r27, r24
    4d5e:	bc af       	std	Y+60, r27	; 0x3c
    4d60:	91 e0       	ldi	r25, 0x01	; 1
    4d62:	9d af       	std	Y+61, r25	; 0x3d
    4d64:	ac ad       	ldd	r26, Y+60	; 0x3c
    4d66:	bf a5       	ldd	r27, Y+47	; 0x2f
    4d68:	ba 17       	cp	r27, r26
    4d6a:	08 f0       	brcs	.+2      	; 0x4d6e <LCD_enuWriteNumber+0x186>
    4d6c:	1d ae       	std	Y+61, r1	; 0x3d
    4d6e:	8b ad       	ldd	r24, Y+59	; 0x3b
    4d70:	9d ad       	ldd	r25, Y+61	; 0x3d
    4d72:	89 2b       	or	r24, r25
    4d74:	8b af       	std	Y+59, r24	; 0x3b
    4d76:	ac ad       	ldd	r26, Y+60	; 0x3c
    4d78:	af a7       	std	Y+47, r26	; 0x2f
    4d7a:	b8 a1       	ldd	r27, Y+32	; 0x20
    4d7c:	88 a5       	ldd	r24, Y+40	; 0x28
    4d7e:	b8 1b       	sub	r27, r24
    4d80:	b8 ab       	std	Y+48, r27	; 0x30
    4d82:	91 e0       	ldi	r25, 0x01	; 1
    4d84:	9e af       	std	Y+62, r25	; 0x3e
    4d86:	a8 a9       	ldd	r26, Y+48	; 0x30
    4d88:	b8 a1       	ldd	r27, Y+32	; 0x20
    4d8a:	ba 17       	cp	r27, r26
    4d8c:	08 f0       	brcs	.+2      	; 0x4d90 <LCD_enuWriteNumber+0x1a8>
    4d8e:	1e ae       	std	Y+62, r1	; 0x3e
    4d90:	88 a9       	ldd	r24, Y+48	; 0x30
    4d92:	9b ad       	ldd	r25, Y+59	; 0x3b
    4d94:	89 1b       	sub	r24, r25
    4d96:	8f af       	std	Y+63, r24	; 0x3f
    4d98:	a1 e0       	ldi	r26, 0x01	; 1
    4d9a:	21 96       	adiw	r28, 0x01	; 1
    4d9c:	af af       	std	Y+63, r26	; 0x3f
    4d9e:	21 97       	sbiw	r28, 0x01	; 1
    4da0:	bf ad       	ldd	r27, Y+63	; 0x3f
    4da2:	88 a9       	ldd	r24, Y+48	; 0x30
    4da4:	8b 17       	cp	r24, r27
    4da6:	18 f0       	brcs	.+6      	; 0x4dae <LCD_enuWriteNumber+0x1c6>
    4da8:	21 96       	adiw	r28, 0x01	; 1
    4daa:	1f ae       	std	Y+63, r1	; 0x3f
    4dac:	21 97       	sbiw	r28, 0x01	; 1
    4dae:	9e ad       	ldd	r25, Y+62	; 0x3e
    4db0:	21 96       	adiw	r28, 0x01	; 1
    4db2:	af ad       	ldd	r26, Y+63	; 0x3f
    4db4:	21 97       	sbiw	r28, 0x01	; 1
    4db6:	9a 2b       	or	r25, r26
    4db8:	9e af       	std	Y+62, r25	; 0x3e
    4dba:	bf ad       	ldd	r27, Y+63	; 0x3f
    4dbc:	b8 ab       	std	Y+48, r27	; 0x30
    4dbe:	89 a1       	ldd	r24, Y+33	; 0x21
    4dc0:	99 a5       	ldd	r25, Y+41	; 0x29
    4dc2:	89 1b       	sub	r24, r25
    4dc4:	89 ab       	std	Y+49, r24	; 0x31
    4dc6:	a1 e0       	ldi	r26, 0x01	; 1
    4dc8:	22 96       	adiw	r28, 0x02	; 2
    4dca:	af af       	std	Y+63, r26	; 0x3f
    4dcc:	22 97       	sbiw	r28, 0x02	; 2
    4dce:	b9 a9       	ldd	r27, Y+49	; 0x31
    4dd0:	89 a1       	ldd	r24, Y+33	; 0x21
    4dd2:	8b 17       	cp	r24, r27
    4dd4:	18 f0       	brcs	.+6      	; 0x4ddc <LCD_enuWriteNumber+0x1f4>
    4dd6:	22 96       	adiw	r28, 0x02	; 2
    4dd8:	1f ae       	std	Y+63, r1	; 0x3f
    4dda:	22 97       	sbiw	r28, 0x02	; 2
    4ddc:	99 a9       	ldd	r25, Y+49	; 0x31
    4dde:	ae ad       	ldd	r26, Y+62	; 0x3e
    4de0:	9a 1b       	sub	r25, r26
    4de2:	23 96       	adiw	r28, 0x03	; 3
    4de4:	9f af       	std	Y+63, r25	; 0x3f
    4de6:	23 97       	sbiw	r28, 0x03	; 3
    4de8:	b1 e0       	ldi	r27, 0x01	; 1
    4dea:	24 96       	adiw	r28, 0x04	; 4
    4dec:	bf af       	std	Y+63, r27	; 0x3f
    4dee:	24 97       	sbiw	r28, 0x04	; 4
    4df0:	23 96       	adiw	r28, 0x03	; 3
    4df2:	8f ad       	ldd	r24, Y+63	; 0x3f
    4df4:	23 97       	sbiw	r28, 0x03	; 3
    4df6:	99 a9       	ldd	r25, Y+49	; 0x31
    4df8:	98 17       	cp	r25, r24
    4dfa:	18 f0       	brcs	.+6      	; 0x4e02 <LCD_enuWriteNumber+0x21a>
    4dfc:	24 96       	adiw	r28, 0x04	; 4
    4dfe:	1f ae       	std	Y+63, r1	; 0x3f
    4e00:	24 97       	sbiw	r28, 0x04	; 4
    4e02:	22 96       	adiw	r28, 0x02	; 2
    4e04:	af ad       	ldd	r26, Y+63	; 0x3f
    4e06:	22 97       	sbiw	r28, 0x02	; 2
    4e08:	24 96       	adiw	r28, 0x04	; 4
    4e0a:	bf ad       	ldd	r27, Y+63	; 0x3f
    4e0c:	24 97       	sbiw	r28, 0x04	; 4
    4e0e:	ab 2b       	or	r26, r27
    4e10:	22 96       	adiw	r28, 0x02	; 2
    4e12:	af af       	std	Y+63, r26	; 0x3f
    4e14:	22 97       	sbiw	r28, 0x02	; 2
    4e16:	23 96       	adiw	r28, 0x03	; 3
    4e18:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e1a:	23 97       	sbiw	r28, 0x03	; 3
    4e1c:	89 ab       	std	Y+49, r24	; 0x31
    4e1e:	9a a1       	ldd	r25, Y+34	; 0x22
    4e20:	aa a5       	ldd	r26, Y+42	; 0x2a
    4e22:	9a 1b       	sub	r25, r26
    4e24:	9a ab       	std	Y+50, r25	; 0x32
    4e26:	b1 e0       	ldi	r27, 0x01	; 1
    4e28:	25 96       	adiw	r28, 0x05	; 5
    4e2a:	bf af       	std	Y+63, r27	; 0x3f
    4e2c:	25 97       	sbiw	r28, 0x05	; 5
    4e2e:	8a a9       	ldd	r24, Y+50	; 0x32
    4e30:	9a a1       	ldd	r25, Y+34	; 0x22
    4e32:	98 17       	cp	r25, r24
    4e34:	18 f0       	brcs	.+6      	; 0x4e3c <LCD_enuWriteNumber+0x254>
    4e36:	25 96       	adiw	r28, 0x05	; 5
    4e38:	1f ae       	std	Y+63, r1	; 0x3f
    4e3a:	25 97       	sbiw	r28, 0x05	; 5
    4e3c:	aa a9       	ldd	r26, Y+50	; 0x32
    4e3e:	22 96       	adiw	r28, 0x02	; 2
    4e40:	bf ad       	ldd	r27, Y+63	; 0x3f
    4e42:	22 97       	sbiw	r28, 0x02	; 2
    4e44:	ab 1b       	sub	r26, r27
    4e46:	26 96       	adiw	r28, 0x06	; 6
    4e48:	af af       	std	Y+63, r26	; 0x3f
    4e4a:	26 97       	sbiw	r28, 0x06	; 6
    4e4c:	81 e0       	ldi	r24, 0x01	; 1
    4e4e:	27 96       	adiw	r28, 0x07	; 7
    4e50:	8f af       	std	Y+63, r24	; 0x3f
    4e52:	27 97       	sbiw	r28, 0x07	; 7
    4e54:	26 96       	adiw	r28, 0x06	; 6
    4e56:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e58:	26 97       	sbiw	r28, 0x06	; 6
    4e5a:	aa a9       	ldd	r26, Y+50	; 0x32
    4e5c:	a9 17       	cp	r26, r25
    4e5e:	18 f0       	brcs	.+6      	; 0x4e66 <LCD_enuWriteNumber+0x27e>
    4e60:	27 96       	adiw	r28, 0x07	; 7
    4e62:	1f ae       	std	Y+63, r1	; 0x3f
    4e64:	27 97       	sbiw	r28, 0x07	; 7
    4e66:	25 96       	adiw	r28, 0x05	; 5
    4e68:	bf ad       	ldd	r27, Y+63	; 0x3f
    4e6a:	25 97       	sbiw	r28, 0x05	; 5
    4e6c:	27 96       	adiw	r28, 0x07	; 7
    4e6e:	8f ad       	ldd	r24, Y+63	; 0x3f
    4e70:	27 97       	sbiw	r28, 0x07	; 7
    4e72:	b8 2b       	or	r27, r24
    4e74:	25 96       	adiw	r28, 0x05	; 5
    4e76:	bf af       	std	Y+63, r27	; 0x3f
    4e78:	25 97       	sbiw	r28, 0x05	; 5
    4e7a:	26 96       	adiw	r28, 0x06	; 6
    4e7c:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e7e:	26 97       	sbiw	r28, 0x06	; 6
    4e80:	9a ab       	std	Y+50, r25	; 0x32
    4e82:	ab a1       	ldd	r26, Y+35	; 0x23
    4e84:	bb a5       	ldd	r27, Y+43	; 0x2b
    4e86:	ab 1b       	sub	r26, r27
    4e88:	ab ab       	std	Y+51, r26	; 0x33
    4e8a:	8b a9       	ldd	r24, Y+51	; 0x33
    4e8c:	25 96       	adiw	r28, 0x05	; 5
    4e8e:	9f ad       	ldd	r25, Y+63	; 0x3f
    4e90:	25 97       	sbiw	r28, 0x05	; 5
    4e92:	89 1b       	sub	r24, r25
    4e94:	8b ab       	std	Y+51, r24	; 0x33
    4e96:	ac a5       	ldd	r26, Y+44	; 0x2c
    4e98:	ab 8b       	std	Y+19, r26	; 0x13
    4e9a:	bd a5       	ldd	r27, Y+45	; 0x2d
    4e9c:	bc 8b       	std	Y+20, r27	; 0x14
    4e9e:	8e a5       	ldd	r24, Y+46	; 0x2e
    4ea0:	8d 8b       	std	Y+21, r24	; 0x15
    4ea2:	9f a5       	ldd	r25, Y+47	; 0x2f
    4ea4:	9e 8b       	std	Y+22, r25	; 0x16
    4ea6:	a8 a9       	ldd	r26, Y+48	; 0x30
    4ea8:	af 8b       	std	Y+23, r26	; 0x17
    4eaa:	b9 a9       	ldd	r27, Y+49	; 0x31
    4eac:	b8 8f       	std	Y+24, r27	; 0x18
    4eae:	8a a9       	ldd	r24, Y+50	; 0x32
    4eb0:	89 8f       	std	Y+25, r24	; 0x19
    4eb2:	9b a9       	ldd	r25, Y+51	; 0x33
    4eb4:	9a 8f       	std	Y+26, r25	; 0x1a
    4eb6:	68 c0       	rjmp	.+208    	; 0x4f88 <LCD_enuWriteNumber+0x3a0>
	}


	while (Copy_u8num > 0 && Local_enuErrorState == ES_OK)
	{
		Local_Au8Digits[Local_u8Iterator] = Copy_u8num % 10;
    4eb8:	89 81       	ldd	r24, Y+1	; 0x01
    4eba:	88 2e       	mov	r8, r24
    4ebc:	99 24       	eor	r9, r9
    4ebe:	87 fc       	sbrc	r8, 7
    4ec0:	90 94       	com	r9
    4ec2:	ab 88       	ldd	r10, Y+19	; 0x13
    4ec4:	bc 88       	ldd	r11, Y+20	; 0x14
    4ec6:	cd 88       	ldd	r12, Y+21	; 0x15
    4ec8:	de 88       	ldd	r13, Y+22	; 0x16
    4eca:	ef 88       	ldd	r14, Y+23	; 0x17
    4ecc:	f8 8c       	ldd	r15, Y+24	; 0x18
    4ece:	09 8d       	ldd	r16, Y+25	; 0x19
    4ed0:	1a 8d       	ldd	r17, Y+26	; 0x1a
    4ed2:	2a 2d       	mov	r18, r10
    4ed4:	3b 2d       	mov	r19, r11
    4ed6:	4c 2d       	mov	r20, r12
    4ed8:	5d 2d       	mov	r21, r13
    4eda:	6e 2d       	mov	r22, r14
    4edc:	7f 2d       	mov	r23, r15
    4ede:	80 2f       	mov	r24, r16
    4ee0:	91 2f       	mov	r25, r17
    4ee2:	0f 2e       	mov	r0, r31
    4ee4:	fa e0       	ldi	r31, 0x0A	; 10
    4ee6:	af 2e       	mov	r10, r31
    4ee8:	f0 2d       	mov	r31, r0
    4eea:	bb 24       	eor	r11, r11
    4eec:	cc 24       	eor	r12, r12
    4eee:	dd 24       	eor	r13, r13
    4ef0:	ee 24       	eor	r14, r14
    4ef2:	ff 24       	eor	r15, r15
    4ef4:	00 e0       	ldi	r16, 0x00	; 0
    4ef6:	10 e0       	ldi	r17, 0x00	; 0
    4ef8:	0e 94 9b 09 	call	0x1336	; 0x1336 <__moddi3>
    4efc:	a2 2e       	mov	r10, r18
    4efe:	b3 2e       	mov	r11, r19
    4f00:	c4 2e       	mov	r12, r20
    4f02:	d5 2e       	mov	r13, r21
    4f04:	e6 2e       	mov	r14, r22
    4f06:	f7 2e       	mov	r15, r23
    4f08:	08 2f       	mov	r16, r24
    4f0a:	19 2f       	mov	r17, r25
    4f0c:	2a 2d       	mov	r18, r10
    4f0e:	3b 2d       	mov	r19, r11
    4f10:	4c 2d       	mov	r20, r12
    4f12:	5d 2d       	mov	r21, r13
    4f14:	6e 2d       	mov	r22, r14
    4f16:	7f 2d       	mov	r23, r15
    4f18:	80 2f       	mov	r24, r16
    4f1a:	91 2f       	mov	r25, r17
    4f1c:	ce 01       	movw	r24, r28
    4f1e:	03 96       	adiw	r24, 0x03	; 3
    4f20:	fc 01       	movw	r30, r24
    4f22:	e8 0d       	add	r30, r8
    4f24:	f9 1d       	adc	r31, r9
    4f26:	20 83       	st	Z, r18
		Local_u8Iterator++;
    4f28:	89 81       	ldd	r24, Y+1	; 0x01
    4f2a:	8f 5f       	subi	r24, 0xFF	; 255
    4f2c:	89 83       	std	Y+1, r24	; 0x01
		Copy_u8num/=10;
    4f2e:	ab 88       	ldd	r10, Y+19	; 0x13
    4f30:	bc 88       	ldd	r11, Y+20	; 0x14
    4f32:	cd 88       	ldd	r12, Y+21	; 0x15
    4f34:	de 88       	ldd	r13, Y+22	; 0x16
    4f36:	ef 88       	ldd	r14, Y+23	; 0x17
    4f38:	f8 8c       	ldd	r15, Y+24	; 0x18
    4f3a:	09 8d       	ldd	r16, Y+25	; 0x19
    4f3c:	1a 8d       	ldd	r17, Y+26	; 0x1a
    4f3e:	2a 2d       	mov	r18, r10
    4f40:	3b 2d       	mov	r19, r11
    4f42:	4c 2d       	mov	r20, r12
    4f44:	5d 2d       	mov	r21, r13
    4f46:	6e 2d       	mov	r22, r14
    4f48:	7f 2d       	mov	r23, r15
    4f4a:	80 2f       	mov	r24, r16
    4f4c:	91 2f       	mov	r25, r17
    4f4e:	0f 2e       	mov	r0, r31
    4f50:	fa e0       	ldi	r31, 0x0A	; 10
    4f52:	af 2e       	mov	r10, r31
    4f54:	f0 2d       	mov	r31, r0
    4f56:	bb 24       	eor	r11, r11
    4f58:	cc 24       	eor	r12, r12
    4f5a:	dd 24       	eor	r13, r13
    4f5c:	ee 24       	eor	r14, r14
    4f5e:	ff 24       	eor	r15, r15
    4f60:	00 e0       	ldi	r16, 0x00	; 0
    4f62:	10 e0       	ldi	r17, 0x00	; 0
    4f64:	0e 94 73 01 	call	0x2e6	; 0x2e6 <__divdi3>
    4f68:	a2 2e       	mov	r10, r18
    4f6a:	b3 2e       	mov	r11, r19
    4f6c:	c4 2e       	mov	r12, r20
    4f6e:	d5 2e       	mov	r13, r21
    4f70:	e6 2e       	mov	r14, r22
    4f72:	f7 2e       	mov	r15, r23
    4f74:	08 2f       	mov	r16, r24
    4f76:	19 2f       	mov	r17, r25
    4f78:	ab 8a       	std	Y+19, r10	; 0x13
    4f7a:	bc 8a       	std	Y+20, r11	; 0x14
    4f7c:	cd 8a       	std	Y+21, r12	; 0x15
    4f7e:	de 8a       	std	Y+22, r13	; 0x16
    4f80:	ef 8a       	std	Y+23, r14	; 0x17
    4f82:	f8 8e       	std	Y+24, r15	; 0x18
    4f84:	09 8f       	std	Y+25, r16	; 0x19
    4f86:	1a 8f       	std	Y+26, r17	; 0x1a
		Local_enuErrorState = LCD_inenuLatch('-');
		Copy_u8num *= -1;
	}


	while (Copy_u8num > 0 && Local_enuErrorState == ES_OK)
    4f88:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4f8a:	18 16       	cp	r1, r24
    4f8c:	54 f1       	brlt	.+84     	; 0x4fe2 <LCD_enuWriteNumber+0x3fa>
    4f8e:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4f90:	88 23       	and	r24, r24
    4f92:	59 f5       	brne	.+86     	; 0x4fea <LCD_enuWriteNumber+0x402>
    4f94:	89 8d       	ldd	r24, Y+25	; 0x19
    4f96:	88 23       	and	r24, r24
    4f98:	21 f5       	brne	.+72     	; 0x4fe2 <LCD_enuWriteNumber+0x3fa>
    4f9a:	89 8d       	ldd	r24, Y+25	; 0x19
    4f9c:	88 23       	and	r24, r24
    4f9e:	29 f5       	brne	.+74     	; 0x4fea <LCD_enuWriteNumber+0x402>
    4fa0:	88 8d       	ldd	r24, Y+24	; 0x18
    4fa2:	88 23       	and	r24, r24
    4fa4:	f1 f4       	brne	.+60     	; 0x4fe2 <LCD_enuWriteNumber+0x3fa>
    4fa6:	88 8d       	ldd	r24, Y+24	; 0x18
    4fa8:	88 23       	and	r24, r24
    4faa:	f9 f4       	brne	.+62     	; 0x4fea <LCD_enuWriteNumber+0x402>
    4fac:	8f 89       	ldd	r24, Y+23	; 0x17
    4fae:	88 23       	and	r24, r24
    4fb0:	c1 f4       	brne	.+48     	; 0x4fe2 <LCD_enuWriteNumber+0x3fa>
    4fb2:	8f 89       	ldd	r24, Y+23	; 0x17
    4fb4:	88 23       	and	r24, r24
    4fb6:	c9 f4       	brne	.+50     	; 0x4fea <LCD_enuWriteNumber+0x402>
    4fb8:	8e 89       	ldd	r24, Y+22	; 0x16
    4fba:	88 23       	and	r24, r24
    4fbc:	91 f4       	brne	.+36     	; 0x4fe2 <LCD_enuWriteNumber+0x3fa>
    4fbe:	8e 89       	ldd	r24, Y+22	; 0x16
    4fc0:	88 23       	and	r24, r24
    4fc2:	99 f4       	brne	.+38     	; 0x4fea <LCD_enuWriteNumber+0x402>
    4fc4:	8d 89       	ldd	r24, Y+21	; 0x15
    4fc6:	88 23       	and	r24, r24
    4fc8:	61 f4       	brne	.+24     	; 0x4fe2 <LCD_enuWriteNumber+0x3fa>
    4fca:	8d 89       	ldd	r24, Y+21	; 0x15
    4fcc:	88 23       	and	r24, r24
    4fce:	69 f4       	brne	.+26     	; 0x4fea <LCD_enuWriteNumber+0x402>
    4fd0:	8c 89       	ldd	r24, Y+20	; 0x14
    4fd2:	88 23       	and	r24, r24
    4fd4:	31 f4       	brne	.+12     	; 0x4fe2 <LCD_enuWriteNumber+0x3fa>
    4fd6:	8c 89       	ldd	r24, Y+20	; 0x14
    4fd8:	88 23       	and	r24, r24
    4fda:	39 f4       	brne	.+14     	; 0x4fea <LCD_enuWriteNumber+0x402>
    4fdc:	8b 89       	ldd	r24, Y+19	; 0x13
    4fde:	88 23       	and	r24, r24
    4fe0:	21 f0       	breq	.+8      	; 0x4fea <LCD_enuWriteNumber+0x402>
    4fe2:	8a 81       	ldd	r24, Y+2	; 0x02
    4fe4:	81 30       	cpi	r24, 0x01	; 1
    4fe6:	09 f4       	brne	.+2      	; 0x4fea <LCD_enuWriteNumber+0x402>
    4fe8:	67 cf       	rjmp	.-306    	; 0x4eb8 <LCD_enuWriteNumber+0x2d0>
		Local_Au8Digits[Local_u8Iterator] = Copy_u8num % 10;
		Local_u8Iterator++;
		Copy_u8num/=10;
	}

	Local_u8Iterator--;
    4fea:	89 81       	ldd	r24, Y+1	; 0x01
    4fec:	81 50       	subi	r24, 0x01	; 1
    4fee:	89 83       	std	Y+1, r24	; 0x01
    4ff0:	12 c0       	rjmp	.+36     	; 0x5016 <LCD_enuWriteNumber+0x42e>


	while( Local_u8Iterator >= 0 && Local_enuErrorState == ES_OK) //786
	{
		Local_enuErrorState = LCD_inenuLatch( Local_Au8Digits[Local_u8Iterator]+'0');
    4ff2:	89 81       	ldd	r24, Y+1	; 0x01
    4ff4:	28 2f       	mov	r18, r24
    4ff6:	33 27       	eor	r19, r19
    4ff8:	27 fd       	sbrc	r18, 7
    4ffa:	30 95       	com	r19
    4ffc:	ce 01       	movw	r24, r28
    4ffe:	03 96       	adiw	r24, 0x03	; 3
    5000:	fc 01       	movw	r30, r24
    5002:	e2 0f       	add	r30, r18
    5004:	f3 1f       	adc	r31, r19
    5006:	80 81       	ld	r24, Z
    5008:	80 5d       	subi	r24, 0xD0	; 208
    500a:	0e 94 26 28 	call	0x504c	; 0x504c <LCD_inenuLatch>
    500e:	8a 83       	std	Y+2, r24	; 0x02
		Local_u8Iterator--;
    5010:	89 81       	ldd	r24, Y+1	; 0x01
    5012:	81 50       	subi	r24, 0x01	; 1
    5014:	89 83       	std	Y+1, r24	; 0x01
	}

	Local_u8Iterator--;


	while( Local_u8Iterator >= 0 && Local_enuErrorState == ES_OK) //786
    5016:	89 81       	ldd	r24, Y+1	; 0x01
    5018:	88 23       	and	r24, r24
    501a:	1c f0       	brlt	.+6      	; 0x5022 <LCD_enuWriteNumber+0x43a>
    501c:	8a 81       	ldd	r24, Y+2	; 0x02
    501e:	81 30       	cpi	r24, 0x01	; 1
    5020:	41 f3       	breq	.-48     	; 0x4ff2 <LCD_enuWriteNumber+0x40a>
	{
		Local_enuErrorState = LCD_inenuLatch( Local_Au8Digits[Local_u8Iterator]+'0');
		Local_u8Iterator--;
	}

	return Local_enuErrorState;
    5022:	8a 81       	ldd	r24, Y+2	; 0x02
}
    5024:	ca 5b       	subi	r28, 0xBA	; 186
    5026:	df 4f       	sbci	r29, 0xFF	; 255
    5028:	0f b6       	in	r0, 0x3f	; 63
    502a:	f8 94       	cli
    502c:	de bf       	out	0x3e, r29	; 62
    502e:	0f be       	out	0x3f, r0	; 63
    5030:	cd bf       	out	0x3d, r28	; 61
    5032:	cf 91       	pop	r28
    5034:	df 91       	pop	r29
    5036:	1f 91       	pop	r17
    5038:	0f 91       	pop	r16
    503a:	ff 90       	pop	r15
    503c:	ef 90       	pop	r14
    503e:	df 90       	pop	r13
    5040:	cf 90       	pop	r12
    5042:	bf 90       	pop	r11
    5044:	af 90       	pop	r10
    5046:	9f 90       	pop	r9
    5048:	8f 90       	pop	r8
    504a:	08 95       	ret

0000504c <LCD_inenuLatch>:



static ES_t LCD_inenuLatch( u8 Copy_u8Data )
{
    504c:	df 93       	push	r29
    504e:	cf 93       	push	r28
    5050:	cd b7       	in	r28, 0x3d	; 61
    5052:	de b7       	in	r29, 0x3e	; 62
    5054:	a4 97       	sbiw	r28, 0x24	; 36
    5056:	0f b6       	in	r0, 0x3f	; 63
    5058:	f8 94       	cli
    505a:	de bf       	out	0x3e, r29	; 62
    505c:	0f be       	out	0x3f, r0	; 63
    505e:	cd bf       	out	0x3d, r28	; 61
    5060:	8b a3       	std	Y+35, r24	; 0x23
	ES_t Local_enuErrorState = ES_NOK;
    5062:	1a a2       	std	Y+34, r1	; 0x22
	u8 Local_u8Iterator;
	u32 Copy_u32Check = 0;
    5064:	1d 8e       	std	Y+29, r1	; 0x1d
    5066:	1e 8e       	std	Y+30, r1	; 0x1e
    5068:	1f 8e       	std	Y+31, r1	; 0x1f
    506a:	18 a2       	std	Y+32, r1	; 0x20

	// choose write mode
	Copy_u32Check |= ((u32)(DIO_enuSetPinVal(RW_PORT, RW_PIN, DIO_u8LOW )<<0));
    506c:	80 e0       	ldi	r24, 0x00	; 0
    506e:	61 e0       	ldi	r22, 0x01	; 1
    5070:	40 e0       	ldi	r20, 0x00	; 0
    5072:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    5076:	28 2f       	mov	r18, r24
    5078:	30 e0       	ldi	r19, 0x00	; 0
    507a:	40 e0       	ldi	r20, 0x00	; 0
    507c:	50 e0       	ldi	r21, 0x00	; 0
    507e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5080:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5082:	af 8d       	ldd	r26, Y+31	; 0x1f
    5084:	b8 a1       	ldd	r27, Y+32	; 0x20
    5086:	82 2b       	or	r24, r18
    5088:	93 2b       	or	r25, r19
    508a:	a4 2b       	or	r26, r20
    508c:	b5 2b       	or	r27, r21
    508e:	8d 8f       	std	Y+29, r24	; 0x1d
    5090:	9e 8f       	std	Y+30, r25	; 0x1e
    5092:	af 8f       	std	Y+31, r26	; 0x1f
    5094:	b8 a3       	std	Y+32, r27	; 0x20
	Copy_u32Check |= ((u32)(DIO_enuSetPinVal(EN_PORT, EN_PIN, DIO_u8LOW )<<3));
    5096:	83 e0       	ldi	r24, 0x03	; 3
    5098:	63 e0       	ldi	r22, 0x03	; 3
    509a:	40 e0       	ldi	r20, 0x00	; 0
    509c:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    50a0:	88 2f       	mov	r24, r24
    50a2:	90 e0       	ldi	r25, 0x00	; 0
    50a4:	88 0f       	add	r24, r24
    50a6:	99 1f       	adc	r25, r25
    50a8:	88 0f       	add	r24, r24
    50aa:	99 1f       	adc	r25, r25
    50ac:	88 0f       	add	r24, r24
    50ae:	99 1f       	adc	r25, r25
    50b0:	9c 01       	movw	r18, r24
    50b2:	44 27       	eor	r20, r20
    50b4:	37 fd       	sbrc	r19, 7
    50b6:	40 95       	com	r20
    50b8:	54 2f       	mov	r21, r20
    50ba:	8d 8d       	ldd	r24, Y+29	; 0x1d
    50bc:	9e 8d       	ldd	r25, Y+30	; 0x1e
    50be:	af 8d       	ldd	r26, Y+31	; 0x1f
    50c0:	b8 a1       	ldd	r27, Y+32	; 0x20
    50c2:	82 2b       	or	r24, r18
    50c4:	93 2b       	or	r25, r19
    50c6:	a4 2b       	or	r26, r20
    50c8:	b5 2b       	or	r27, r21
    50ca:	8d 8f       	std	Y+29, r24	; 0x1d
    50cc:	9e 8f       	std	Y+30, r25	; 0x1e
    50ce:	af 8f       	std	Y+31, r26	; 0x1f
    50d0:	b8 a3       	std	Y+32, r27	; 0x20

	// write command

	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB7_PORT, DB7_PIN, (Copy_u8Data>>7)&1 )<<6 ));
    50d2:	8b a1       	ldd	r24, Y+35	; 0x23
    50d4:	98 2f       	mov	r25, r24
    50d6:	99 1f       	adc	r25, r25
    50d8:	99 27       	eor	r25, r25
    50da:	99 1f       	adc	r25, r25
    50dc:	82 e0       	ldi	r24, 0x02	; 2
    50de:	62 e0       	ldi	r22, 0x02	; 2
    50e0:	49 2f       	mov	r20, r25
    50e2:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    50e6:	88 2f       	mov	r24, r24
    50e8:	90 e0       	ldi	r25, 0x00	; 0
    50ea:	a0 e0       	ldi	r26, 0x00	; 0
    50ec:	b0 e0       	ldi	r27, 0x00	; 0
    50ee:	88 0f       	add	r24, r24
    50f0:	99 1f       	adc	r25, r25
    50f2:	aa 1f       	adc	r26, r26
    50f4:	bb 1f       	adc	r27, r27
    50f6:	88 0f       	add	r24, r24
    50f8:	99 1f       	adc	r25, r25
    50fa:	aa 1f       	adc	r26, r26
    50fc:	bb 1f       	adc	r27, r27
    50fe:	88 0f       	add	r24, r24
    5100:	99 1f       	adc	r25, r25
    5102:	aa 1f       	adc	r26, r26
    5104:	bb 1f       	adc	r27, r27
    5106:	88 0f       	add	r24, r24
    5108:	99 1f       	adc	r25, r25
    510a:	aa 1f       	adc	r26, r26
    510c:	bb 1f       	adc	r27, r27
    510e:	88 0f       	add	r24, r24
    5110:	99 1f       	adc	r25, r25
    5112:	aa 1f       	adc	r26, r26
    5114:	bb 1f       	adc	r27, r27
    5116:	88 0f       	add	r24, r24
    5118:	99 1f       	adc	r25, r25
    511a:	aa 1f       	adc	r26, r26
    511c:	bb 1f       	adc	r27, r27
    511e:	9c 01       	movw	r18, r24
    5120:	ad 01       	movw	r20, r26
    5122:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5124:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5126:	af 8d       	ldd	r26, Y+31	; 0x1f
    5128:	b8 a1       	ldd	r27, Y+32	; 0x20
    512a:	82 2b       	or	r24, r18
    512c:	93 2b       	or	r25, r19
    512e:	a4 2b       	or	r26, r20
    5130:	b5 2b       	or	r27, r21
    5132:	8d 8f       	std	Y+29, r24	; 0x1d
    5134:	9e 8f       	std	Y+30, r25	; 0x1e
    5136:	af 8f       	std	Y+31, r26	; 0x1f
    5138:	b8 a3       	std	Y+32, r27	; 0x20
	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB6_PORT, DB6_PIN, (Copy_u8Data>>6)&1 )<<9 ));
    513a:	8b a1       	ldd	r24, Y+35	; 0x23
    513c:	82 95       	swap	r24
    513e:	86 95       	lsr	r24
    5140:	86 95       	lsr	r24
    5142:	83 70       	andi	r24, 0x03	; 3
    5144:	98 2f       	mov	r25, r24
    5146:	91 70       	andi	r25, 0x01	; 1
    5148:	80 e0       	ldi	r24, 0x00	; 0
    514a:	62 e0       	ldi	r22, 0x02	; 2
    514c:	49 2f       	mov	r20, r25
    514e:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    5152:	88 2f       	mov	r24, r24
    5154:	90 e0       	ldi	r25, 0x00	; 0
    5156:	a0 e0       	ldi	r26, 0x00	; 0
    5158:	b0 e0       	ldi	r27, 0x00	; 0
    515a:	9c 01       	movw	r18, r24
    515c:	ad 01       	movw	r20, r26
    515e:	01 2e       	mov	r0, r17
    5160:	19 e0       	ldi	r17, 0x09	; 9
    5162:	22 0f       	add	r18, r18
    5164:	33 1f       	adc	r19, r19
    5166:	44 1f       	adc	r20, r20
    5168:	55 1f       	adc	r21, r21
    516a:	1a 95       	dec	r17
    516c:	d1 f7       	brne	.-12     	; 0x5162 <LCD_inenuLatch+0x116>
    516e:	10 2d       	mov	r17, r0
    5170:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5172:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5174:	af 8d       	ldd	r26, Y+31	; 0x1f
    5176:	b8 a1       	ldd	r27, Y+32	; 0x20
    5178:	82 2b       	or	r24, r18
    517a:	93 2b       	or	r25, r19
    517c:	a4 2b       	or	r26, r20
    517e:	b5 2b       	or	r27, r21
    5180:	8d 8f       	std	Y+29, r24	; 0x1d
    5182:	9e 8f       	std	Y+30, r25	; 0x1e
    5184:	af 8f       	std	Y+31, r26	; 0x1f
    5186:	b8 a3       	std	Y+32, r27	; 0x20
	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB5_PORT, DB5_PIN, (Copy_u8Data>>5)&1 )<<12 ));
    5188:	8b a1       	ldd	r24, Y+35	; 0x23
    518a:	82 95       	swap	r24
    518c:	86 95       	lsr	r24
    518e:	87 70       	andi	r24, 0x07	; 7
    5190:	98 2f       	mov	r25, r24
    5192:	91 70       	andi	r25, 0x01	; 1
    5194:	83 e0       	ldi	r24, 0x03	; 3
    5196:	61 e0       	ldi	r22, 0x01	; 1
    5198:	49 2f       	mov	r20, r25
    519a:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    519e:	88 2f       	mov	r24, r24
    51a0:	90 e0       	ldi	r25, 0x00	; 0
    51a2:	a0 e0       	ldi	r26, 0x00	; 0
    51a4:	b0 e0       	ldi	r27, 0x00	; 0
    51a6:	9c 01       	movw	r18, r24
    51a8:	ad 01       	movw	r20, r26
    51aa:	01 2e       	mov	r0, r17
    51ac:	1c e0       	ldi	r17, 0x0C	; 12
    51ae:	22 0f       	add	r18, r18
    51b0:	33 1f       	adc	r19, r19
    51b2:	44 1f       	adc	r20, r20
    51b4:	55 1f       	adc	r21, r21
    51b6:	1a 95       	dec	r17
    51b8:	d1 f7       	brne	.-12     	; 0x51ae <LCD_inenuLatch+0x162>
    51ba:	10 2d       	mov	r17, r0
    51bc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    51be:	9e 8d       	ldd	r25, Y+30	; 0x1e
    51c0:	af 8d       	ldd	r26, Y+31	; 0x1f
    51c2:	b8 a1       	ldd	r27, Y+32	; 0x20
    51c4:	82 2b       	or	r24, r18
    51c6:	93 2b       	or	r25, r19
    51c8:	a4 2b       	or	r26, r20
    51ca:	b5 2b       	or	r27, r21
    51cc:	8d 8f       	std	Y+29, r24	; 0x1d
    51ce:	9e 8f       	std	Y+30, r25	; 0x1e
    51d0:	af 8f       	std	Y+31, r26	; 0x1f
    51d2:	b8 a3       	std	Y+32, r27	; 0x20
	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB4_PORT, DB4_PIN, (Copy_u8Data>>4)&1 )<<15));
    51d4:	8b a1       	ldd	r24, Y+35	; 0x23
    51d6:	82 95       	swap	r24
    51d8:	8f 70       	andi	r24, 0x0F	; 15
    51da:	98 2f       	mov	r25, r24
    51dc:	91 70       	andi	r25, 0x01	; 1
    51de:	83 e0       	ldi	r24, 0x03	; 3
    51e0:	60 e0       	ldi	r22, 0x00	; 0
    51e2:	49 2f       	mov	r20, r25
    51e4:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    51e8:	88 2f       	mov	r24, r24
    51ea:	90 e0       	ldi	r25, 0x00	; 0
    51ec:	a0 e0       	ldi	r26, 0x00	; 0
    51ee:	b0 e0       	ldi	r27, 0x00	; 0
    51f0:	9c 01       	movw	r18, r24
    51f2:	ad 01       	movw	r20, r26
    51f4:	01 2e       	mov	r0, r17
    51f6:	1f e0       	ldi	r17, 0x0F	; 15
    51f8:	22 0f       	add	r18, r18
    51fa:	33 1f       	adc	r19, r19
    51fc:	44 1f       	adc	r20, r20
    51fe:	55 1f       	adc	r21, r21
    5200:	1a 95       	dec	r17
    5202:	d1 f7       	brne	.-12     	; 0x51f8 <LCD_inenuLatch+0x1ac>
    5204:	10 2d       	mov	r17, r0
    5206:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5208:	9e 8d       	ldd	r25, Y+30	; 0x1e
    520a:	af 8d       	ldd	r26, Y+31	; 0x1f
    520c:	b8 a1       	ldd	r27, Y+32	; 0x20
    520e:	82 2b       	or	r24, r18
    5210:	93 2b       	or	r25, r19
    5212:	a4 2b       	or	r26, r20
    5214:	b5 2b       	or	r27, r21
    5216:	8d 8f       	std	Y+29, r24	; 0x1d
    5218:	9e 8f       	std	Y+30, r25	; 0x1e
    521a:	af 8f       	std	Y+31, r26	; 0x1f
    521c:	b8 a3       	std	Y+32, r27	; 0x20

#if LCD_MODE == EIGHT_BIT

	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB3_PORT, DB3_PIN, (Copy_u8Data>>3)&1 )<<18));
    521e:	8b a1       	ldd	r24, Y+35	; 0x23
    5220:	86 95       	lsr	r24
    5222:	86 95       	lsr	r24
    5224:	86 95       	lsr	r24
    5226:	98 2f       	mov	r25, r24
    5228:	91 70       	andi	r25, 0x01	; 1
    522a:	82 e0       	ldi	r24, 0x02	; 2
    522c:	61 e0       	ldi	r22, 0x01	; 1
    522e:	49 2f       	mov	r20, r25
    5230:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    5234:	88 2f       	mov	r24, r24
    5236:	90 e0       	ldi	r25, 0x00	; 0
    5238:	a0 e0       	ldi	r26, 0x00	; 0
    523a:	b0 e0       	ldi	r27, 0x00	; 0
    523c:	9c 01       	movw	r18, r24
    523e:	ad 01       	movw	r20, r26
    5240:	01 2e       	mov	r0, r17
    5242:	12 e1       	ldi	r17, 0x12	; 18
    5244:	22 0f       	add	r18, r18
    5246:	33 1f       	adc	r19, r19
    5248:	44 1f       	adc	r20, r20
    524a:	55 1f       	adc	r21, r21
    524c:	1a 95       	dec	r17
    524e:	d1 f7       	brne	.-12     	; 0x5244 <LCD_inenuLatch+0x1f8>
    5250:	10 2d       	mov	r17, r0
    5252:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5254:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5256:	af 8d       	ldd	r26, Y+31	; 0x1f
    5258:	b8 a1       	ldd	r27, Y+32	; 0x20
    525a:	82 2b       	or	r24, r18
    525c:	93 2b       	or	r25, r19
    525e:	a4 2b       	or	r26, r20
    5260:	b5 2b       	or	r27, r21
    5262:	8d 8f       	std	Y+29, r24	; 0x1d
    5264:	9e 8f       	std	Y+30, r25	; 0x1e
    5266:	af 8f       	std	Y+31, r26	; 0x1f
    5268:	b8 a3       	std	Y+32, r27	; 0x20
	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB2_PORT, DB2_PIN, (Copy_u8Data>>2)&1 )<<21));
    526a:	8b a1       	ldd	r24, Y+35	; 0x23
    526c:	86 95       	lsr	r24
    526e:	86 95       	lsr	r24
    5270:	98 2f       	mov	r25, r24
    5272:	91 70       	andi	r25, 0x01	; 1
    5274:	82 e0       	ldi	r24, 0x02	; 2
    5276:	60 e0       	ldi	r22, 0x00	; 0
    5278:	49 2f       	mov	r20, r25
    527a:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    527e:	88 2f       	mov	r24, r24
    5280:	90 e0       	ldi	r25, 0x00	; 0
    5282:	a0 e0       	ldi	r26, 0x00	; 0
    5284:	b0 e0       	ldi	r27, 0x00	; 0
    5286:	9c 01       	movw	r18, r24
    5288:	ad 01       	movw	r20, r26
    528a:	01 2e       	mov	r0, r17
    528c:	15 e1       	ldi	r17, 0x15	; 21
    528e:	22 0f       	add	r18, r18
    5290:	33 1f       	adc	r19, r19
    5292:	44 1f       	adc	r20, r20
    5294:	55 1f       	adc	r21, r21
    5296:	1a 95       	dec	r17
    5298:	d1 f7       	brne	.-12     	; 0x528e <LCD_inenuLatch+0x242>
    529a:	10 2d       	mov	r17, r0
    529c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    529e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    52a0:	af 8d       	ldd	r26, Y+31	; 0x1f
    52a2:	b8 a1       	ldd	r27, Y+32	; 0x20
    52a4:	82 2b       	or	r24, r18
    52a6:	93 2b       	or	r25, r19
    52a8:	a4 2b       	or	r26, r20
    52aa:	b5 2b       	or	r27, r21
    52ac:	8d 8f       	std	Y+29, r24	; 0x1d
    52ae:	9e 8f       	std	Y+30, r25	; 0x1e
    52b0:	af 8f       	std	Y+31, r26	; 0x1f
    52b2:	b8 a3       	std	Y+32, r27	; 0x20
	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB1_PORT, DB1_PIN, (Copy_u8Data>>1)&1 )<<24));
    52b4:	8b a1       	ldd	r24, Y+35	; 0x23
    52b6:	86 95       	lsr	r24
    52b8:	98 2f       	mov	r25, r24
    52ba:	91 70       	andi	r25, 0x01	; 1
    52bc:	81 e0       	ldi	r24, 0x01	; 1
    52be:	61 e0       	ldi	r22, 0x01	; 1
    52c0:	49 2f       	mov	r20, r25
    52c2:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    52c6:	88 2f       	mov	r24, r24
    52c8:	90 e0       	ldi	r25, 0x00	; 0
    52ca:	a0 e0       	ldi	r26, 0x00	; 0
    52cc:	b0 e0       	ldi	r27, 0x00	; 0
    52ce:	58 2f       	mov	r21, r24
    52d0:	44 27       	eor	r20, r20
    52d2:	33 27       	eor	r19, r19
    52d4:	22 27       	eor	r18, r18
    52d6:	8d 8d       	ldd	r24, Y+29	; 0x1d
    52d8:	9e 8d       	ldd	r25, Y+30	; 0x1e
    52da:	af 8d       	ldd	r26, Y+31	; 0x1f
    52dc:	b8 a1       	ldd	r27, Y+32	; 0x20
    52de:	82 2b       	or	r24, r18
    52e0:	93 2b       	or	r25, r19
    52e2:	a4 2b       	or	r26, r20
    52e4:	b5 2b       	or	r27, r21
    52e6:	8d 8f       	std	Y+29, r24	; 0x1d
    52e8:	9e 8f       	std	Y+30, r25	; 0x1e
    52ea:	af 8f       	std	Y+31, r26	; 0x1f
    52ec:	b8 a3       	std	Y+32, r27	; 0x20
	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB0_PORT, DB0_PIN, (Copy_u8Data>>0)&1 )<<27));
    52ee:	8b a1       	ldd	r24, Y+35	; 0x23
    52f0:	98 2f       	mov	r25, r24
    52f2:	91 70       	andi	r25, 0x01	; 1
    52f4:	81 e0       	ldi	r24, 0x01	; 1
    52f6:	60 e0       	ldi	r22, 0x00	; 0
    52f8:	49 2f       	mov	r20, r25
    52fa:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    52fe:	88 2f       	mov	r24, r24
    5300:	90 e0       	ldi	r25, 0x00	; 0
    5302:	a0 e0       	ldi	r26, 0x00	; 0
    5304:	b0 e0       	ldi	r27, 0x00	; 0
    5306:	9c 01       	movw	r18, r24
    5308:	ad 01       	movw	r20, r26
    530a:	01 2e       	mov	r0, r17
    530c:	1b e1       	ldi	r17, 0x1B	; 27
    530e:	22 0f       	add	r18, r18
    5310:	33 1f       	adc	r19, r19
    5312:	44 1f       	adc	r20, r20
    5314:	55 1f       	adc	r21, r21
    5316:	1a 95       	dec	r17
    5318:	d1 f7       	brne	.-12     	; 0x530e <LCD_inenuLatch+0x2c2>
    531a:	10 2d       	mov	r17, r0
    531c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    531e:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5320:	af 8d       	ldd	r26, Y+31	; 0x1f
    5322:	b8 a1       	ldd	r27, Y+32	; 0x20
    5324:	82 2b       	or	r24, r18
    5326:	93 2b       	or	r25, r19
    5328:	a4 2b       	or	r26, r20
    532a:	b5 2b       	or	r27, r21
    532c:	8d 8f       	std	Y+29, r24	; 0x1d
    532e:	9e 8f       	std	Y+30, r25	; 0x1e
    5330:	af 8f       	std	Y+31, r26	; 0x1f
    5332:	b8 a3       	std	Y+32, r27	; 0x20

	for(Local_u8Iterator = 0; Local_u8Iterator < 30; Local_u8Iterator+=3)
    5334:	19 a2       	std	Y+33, r1	; 0x21
    5336:	1d c0       	rjmp	.+58     	; 0x5372 <LCD_inenuLatch+0x326>
	{
		if(((Copy_u32Check >> Local_u8Iterator) & (0b111)) != ES_OK)
    5338:	89 a1       	ldd	r24, Y+33	; 0x21
    533a:	28 2f       	mov	r18, r24
    533c:	30 e0       	ldi	r19, 0x00	; 0
    533e:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5340:	9e 8d       	ldd	r25, Y+30	; 0x1e
    5342:	af 8d       	ldd	r26, Y+31	; 0x1f
    5344:	b8 a1       	ldd	r27, Y+32	; 0x20
    5346:	02 2e       	mov	r0, r18
    5348:	04 c0       	rjmp	.+8      	; 0x5352 <LCD_inenuLatch+0x306>
    534a:	b6 95       	lsr	r27
    534c:	a7 95       	ror	r26
    534e:	97 95       	ror	r25
    5350:	87 95       	ror	r24
    5352:	0a 94       	dec	r0
    5354:	d2 f7       	brpl	.-12     	; 0x534a <LCD_inenuLatch+0x2fe>
    5356:	87 70       	andi	r24, 0x07	; 7
    5358:	90 70       	andi	r25, 0x00	; 0
    535a:	a0 70       	andi	r26, 0x00	; 0
    535c:	b0 70       	andi	r27, 0x00	; 0
    535e:	81 30       	cpi	r24, 0x01	; 1
    5360:	91 05       	cpc	r25, r1
    5362:	a1 05       	cpc	r26, r1
    5364:	b1 05       	cpc	r27, r1
    5366:	11 f0       	breq	.+4      	; 0x536c <LCD_inenuLatch+0x320>
		{
			return ES_NOK;
    5368:	1c a2       	std	Y+36, r1	; 0x24
    536a:	f8 c0       	rjmp	.+496    	; 0x555c <LCD_inenuLatch+0x510>
	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB3_PORT, DB3_PIN, (Copy_u8Data>>3)&1 )<<18));
	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB2_PORT, DB2_PIN, (Copy_u8Data>>2)&1 )<<21));
	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB1_PORT, DB1_PIN, (Copy_u8Data>>1)&1 )<<24));
	Copy_u32Check |= (((u32)DIO_enuSetPinVal(DB0_PORT, DB0_PIN, (Copy_u8Data>>0)&1 )<<27));

	for(Local_u8Iterator = 0; Local_u8Iterator < 30; Local_u8Iterator+=3)
    536c:	89 a1       	ldd	r24, Y+33	; 0x21
    536e:	8d 5f       	subi	r24, 0xFD	; 253
    5370:	89 a3       	std	Y+33, r24	; 0x21
    5372:	89 a1       	ldd	r24, Y+33	; 0x21
    5374:	8e 31       	cpi	r24, 0x1E	; 30
    5376:	00 f3       	brcs	.-64     	; 0x5338 <LCD_inenuLatch+0x2ec>
		{
			return ES_NOK;
		}
	}

	Local_enuErrorState = ES_OK;
    5378:	81 e0       	ldi	r24, 0x01	; 1
    537a:	8a a3       	std	Y+34, r24	; 0x22
#else
#error "Unsupported mode"
#endif
	// enable latch

	DIO_enuSetPinVal(EN_PORT, EN_PIN, DIO_u8HIGH);
    537c:	83 e0       	ldi	r24, 0x03	; 3
    537e:	63 e0       	ldi	r22, 0x03	; 3
    5380:	41 e0       	ldi	r20, 0x01	; 1
    5382:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    5386:	80 e0       	ldi	r24, 0x00	; 0
    5388:	90 e0       	ldi	r25, 0x00	; 0
    538a:	a0 e8       	ldi	r26, 0x80	; 128
    538c:	bf e3       	ldi	r27, 0x3F	; 63
    538e:	89 8f       	std	Y+25, r24	; 0x19
    5390:	9a 8f       	std	Y+26, r25	; 0x1a
    5392:	ab 8f       	std	Y+27, r26	; 0x1b
    5394:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5396:	69 8d       	ldd	r22, Y+25	; 0x19
    5398:	7a 8d       	ldd	r23, Y+26	; 0x1a
    539a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    539c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    539e:	20 e0       	ldi	r18, 0x00	; 0
    53a0:	30 e0       	ldi	r19, 0x00	; 0
    53a2:	4a e7       	ldi	r20, 0x7A	; 122
    53a4:	53 e4       	ldi	r21, 0x43	; 67
    53a6:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    53aa:	dc 01       	movw	r26, r24
    53ac:	cb 01       	movw	r24, r22
    53ae:	8d 8b       	std	Y+21, r24	; 0x15
    53b0:	9e 8b       	std	Y+22, r25	; 0x16
    53b2:	af 8b       	std	Y+23, r26	; 0x17
    53b4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    53b6:	6d 89       	ldd	r22, Y+21	; 0x15
    53b8:	7e 89       	ldd	r23, Y+22	; 0x16
    53ba:	8f 89       	ldd	r24, Y+23	; 0x17
    53bc:	98 8d       	ldd	r25, Y+24	; 0x18
    53be:	20 e0       	ldi	r18, 0x00	; 0
    53c0:	30 e0       	ldi	r19, 0x00	; 0
    53c2:	40 e8       	ldi	r20, 0x80	; 128
    53c4:	5f e3       	ldi	r21, 0x3F	; 63
    53c6:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <__ltsf2>
    53ca:	88 23       	and	r24, r24
    53cc:	2c f4       	brge	.+10     	; 0x53d8 <LCD_inenuLatch+0x38c>
		__ticks = 1;
    53ce:	81 e0       	ldi	r24, 0x01	; 1
    53d0:	90 e0       	ldi	r25, 0x00	; 0
    53d2:	9c 8b       	std	Y+20, r25	; 0x14
    53d4:	8b 8b       	std	Y+19, r24	; 0x13
    53d6:	3f c0       	rjmp	.+126    	; 0x5456 <LCD_inenuLatch+0x40a>
	else if (__tmp > 65535)
    53d8:	6d 89       	ldd	r22, Y+21	; 0x15
    53da:	7e 89       	ldd	r23, Y+22	; 0x16
    53dc:	8f 89       	ldd	r24, Y+23	; 0x17
    53de:	98 8d       	ldd	r25, Y+24	; 0x18
    53e0:	20 e0       	ldi	r18, 0x00	; 0
    53e2:	3f ef       	ldi	r19, 0xFF	; 255
    53e4:	4f e7       	ldi	r20, 0x7F	; 127
    53e6:	57 e4       	ldi	r21, 0x47	; 71
    53e8:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <__gtsf2>
    53ec:	18 16       	cp	r1, r24
    53ee:	4c f5       	brge	.+82     	; 0x5442 <LCD_inenuLatch+0x3f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    53f0:	69 8d       	ldd	r22, Y+25	; 0x19
    53f2:	7a 8d       	ldd	r23, Y+26	; 0x1a
    53f4:	8b 8d       	ldd	r24, Y+27	; 0x1b
    53f6:	9c 8d       	ldd	r25, Y+28	; 0x1c
    53f8:	20 e0       	ldi	r18, 0x00	; 0
    53fa:	30 e0       	ldi	r19, 0x00	; 0
    53fc:	40 e2       	ldi	r20, 0x20	; 32
    53fe:	51 e4       	ldi	r21, 0x41	; 65
    5400:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    5404:	dc 01       	movw	r26, r24
    5406:	cb 01       	movw	r24, r22
    5408:	bc 01       	movw	r22, r24
    540a:	cd 01       	movw	r24, r26
    540c:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    5410:	dc 01       	movw	r26, r24
    5412:	cb 01       	movw	r24, r22
    5414:	9c 8b       	std	Y+20, r25	; 0x14
    5416:	8b 8b       	std	Y+19, r24	; 0x13
    5418:	0f c0       	rjmp	.+30     	; 0x5438 <LCD_inenuLatch+0x3ec>
    541a:	89 e1       	ldi	r24, 0x19	; 25
    541c:	90 e0       	ldi	r25, 0x00	; 0
    541e:	9a 8b       	std	Y+18, r25	; 0x12
    5420:	89 8b       	std	Y+17, r24	; 0x11
    5422:	89 89       	ldd	r24, Y+17	; 0x11
    5424:	9a 89       	ldd	r25, Y+18	; 0x12
    5426:	01 97       	sbiw	r24, 0x01	; 1
    5428:	f1 f7       	brne	.-4      	; 0x5426 <LCD_inenuLatch+0x3da>
    542a:	9a 8b       	std	Y+18, r25	; 0x12
    542c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    542e:	8b 89       	ldd	r24, Y+19	; 0x13
    5430:	9c 89       	ldd	r25, Y+20	; 0x14
    5432:	01 97       	sbiw	r24, 0x01	; 1
    5434:	9c 8b       	std	Y+20, r25	; 0x14
    5436:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5438:	8b 89       	ldd	r24, Y+19	; 0x13
    543a:	9c 89       	ldd	r25, Y+20	; 0x14
    543c:	00 97       	sbiw	r24, 0x00	; 0
    543e:	69 f7       	brne	.-38     	; 0x541a <LCD_inenuLatch+0x3ce>
    5440:	14 c0       	rjmp	.+40     	; 0x546a <LCD_inenuLatch+0x41e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5442:	6d 89       	ldd	r22, Y+21	; 0x15
    5444:	7e 89       	ldd	r23, Y+22	; 0x16
    5446:	8f 89       	ldd	r24, Y+23	; 0x17
    5448:	98 8d       	ldd	r25, Y+24	; 0x18
    544a:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    544e:	dc 01       	movw	r26, r24
    5450:	cb 01       	movw	r24, r22
    5452:	9c 8b       	std	Y+20, r25	; 0x14
    5454:	8b 8b       	std	Y+19, r24	; 0x13
    5456:	8b 89       	ldd	r24, Y+19	; 0x13
    5458:	9c 89       	ldd	r25, Y+20	; 0x14
    545a:	98 8b       	std	Y+16, r25	; 0x10
    545c:	8f 87       	std	Y+15, r24	; 0x0f
    545e:	8f 85       	ldd	r24, Y+15	; 0x0f
    5460:	98 89       	ldd	r25, Y+16	; 0x10
    5462:	01 97       	sbiw	r24, 0x01	; 1
    5464:	f1 f7       	brne	.-4      	; 0x5462 <LCD_inenuLatch+0x416>
    5466:	98 8b       	std	Y+16, r25	; 0x10
    5468:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_enuSetPinVal(EN_PORT, EN_PIN, DIO_u8LOW);
    546a:	83 e0       	ldi	r24, 0x03	; 3
    546c:	63 e0       	ldi	r22, 0x03	; 3
    546e:	40 e0       	ldi	r20, 0x00	; 0
    5470:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    5474:	80 e0       	ldi	r24, 0x00	; 0
    5476:	90 e0       	ldi	r25, 0x00	; 0
    5478:	a0 e8       	ldi	r26, 0x80	; 128
    547a:	bf e3       	ldi	r27, 0x3F	; 63
    547c:	8b 87       	std	Y+11, r24	; 0x0b
    547e:	9c 87       	std	Y+12, r25	; 0x0c
    5480:	ad 87       	std	Y+13, r26	; 0x0d
    5482:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    5484:	6b 85       	ldd	r22, Y+11	; 0x0b
    5486:	7c 85       	ldd	r23, Y+12	; 0x0c
    5488:	8d 85       	ldd	r24, Y+13	; 0x0d
    548a:	9e 85       	ldd	r25, Y+14	; 0x0e
    548c:	20 e0       	ldi	r18, 0x00	; 0
    548e:	30 e0       	ldi	r19, 0x00	; 0
    5490:	4a e7       	ldi	r20, 0x7A	; 122
    5492:	53 e4       	ldi	r21, 0x43	; 67
    5494:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    5498:	dc 01       	movw	r26, r24
    549a:	cb 01       	movw	r24, r22
    549c:	8f 83       	std	Y+7, r24	; 0x07
    549e:	98 87       	std	Y+8, r25	; 0x08
    54a0:	a9 87       	std	Y+9, r26	; 0x09
    54a2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    54a4:	6f 81       	ldd	r22, Y+7	; 0x07
    54a6:	78 85       	ldd	r23, Y+8	; 0x08
    54a8:	89 85       	ldd	r24, Y+9	; 0x09
    54aa:	9a 85       	ldd	r25, Y+10	; 0x0a
    54ac:	20 e0       	ldi	r18, 0x00	; 0
    54ae:	30 e0       	ldi	r19, 0x00	; 0
    54b0:	40 e8       	ldi	r20, 0x80	; 128
    54b2:	5f e3       	ldi	r21, 0x3F	; 63
    54b4:	0e 94 dc 14 	call	0x29b8	; 0x29b8 <__ltsf2>
    54b8:	88 23       	and	r24, r24
    54ba:	2c f4       	brge	.+10     	; 0x54c6 <LCD_inenuLatch+0x47a>
		__ticks = 1;
    54bc:	81 e0       	ldi	r24, 0x01	; 1
    54be:	90 e0       	ldi	r25, 0x00	; 0
    54c0:	9e 83       	std	Y+6, r25	; 0x06
    54c2:	8d 83       	std	Y+5, r24	; 0x05
    54c4:	3f c0       	rjmp	.+126    	; 0x5544 <LCD_inenuLatch+0x4f8>
	else if (__tmp > 65535)
    54c6:	6f 81       	ldd	r22, Y+7	; 0x07
    54c8:	78 85       	ldd	r23, Y+8	; 0x08
    54ca:	89 85       	ldd	r24, Y+9	; 0x09
    54cc:	9a 85       	ldd	r25, Y+10	; 0x0a
    54ce:	20 e0       	ldi	r18, 0x00	; 0
    54d0:	3f ef       	ldi	r19, 0xFF	; 255
    54d2:	4f e7       	ldi	r20, 0x7F	; 127
    54d4:	57 e4       	ldi	r21, 0x47	; 71
    54d6:	0e 94 7c 14 	call	0x28f8	; 0x28f8 <__gtsf2>
    54da:	18 16       	cp	r1, r24
    54dc:	4c f5       	brge	.+82     	; 0x5530 <LCD_inenuLatch+0x4e4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    54de:	6b 85       	ldd	r22, Y+11	; 0x0b
    54e0:	7c 85       	ldd	r23, Y+12	; 0x0c
    54e2:	8d 85       	ldd	r24, Y+13	; 0x0d
    54e4:	9e 85       	ldd	r25, Y+14	; 0x0e
    54e6:	20 e0       	ldi	r18, 0x00	; 0
    54e8:	30 e0       	ldi	r19, 0x00	; 0
    54ea:	40 e2       	ldi	r20, 0x20	; 32
    54ec:	51 e4       	ldi	r21, 0x41	; 65
    54ee:	0e 94 82 13 	call	0x2704	; 0x2704 <__mulsf3>
    54f2:	dc 01       	movw	r26, r24
    54f4:	cb 01       	movw	r24, r22
    54f6:	bc 01       	movw	r22, r24
    54f8:	cd 01       	movw	r24, r26
    54fa:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    54fe:	dc 01       	movw	r26, r24
    5500:	cb 01       	movw	r24, r22
    5502:	9e 83       	std	Y+6, r25	; 0x06
    5504:	8d 83       	std	Y+5, r24	; 0x05
    5506:	0f c0       	rjmp	.+30     	; 0x5526 <LCD_inenuLatch+0x4da>
    5508:	89 e1       	ldi	r24, 0x19	; 25
    550a:	90 e0       	ldi	r25, 0x00	; 0
    550c:	9c 83       	std	Y+4, r25	; 0x04
    550e:	8b 83       	std	Y+3, r24	; 0x03
    5510:	8b 81       	ldd	r24, Y+3	; 0x03
    5512:	9c 81       	ldd	r25, Y+4	; 0x04
    5514:	01 97       	sbiw	r24, 0x01	; 1
    5516:	f1 f7       	brne	.-4      	; 0x5514 <LCD_inenuLatch+0x4c8>
    5518:	9c 83       	std	Y+4, r25	; 0x04
    551a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    551c:	8d 81       	ldd	r24, Y+5	; 0x05
    551e:	9e 81       	ldd	r25, Y+6	; 0x06
    5520:	01 97       	sbiw	r24, 0x01	; 1
    5522:	9e 83       	std	Y+6, r25	; 0x06
    5524:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5526:	8d 81       	ldd	r24, Y+5	; 0x05
    5528:	9e 81       	ldd	r25, Y+6	; 0x06
    552a:	00 97       	sbiw	r24, 0x00	; 0
    552c:	69 f7       	brne	.-38     	; 0x5508 <LCD_inenuLatch+0x4bc>
    552e:	14 c0       	rjmp	.+40     	; 0x5558 <LCD_inenuLatch+0x50c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5530:	6f 81       	ldd	r22, Y+7	; 0x07
    5532:	78 85       	ldd	r23, Y+8	; 0x08
    5534:	89 85       	ldd	r24, Y+9	; 0x09
    5536:	9a 85       	ldd	r25, Y+10	; 0x0a
    5538:	0e 94 47 01 	call	0x28e	; 0x28e <__fixunssfsi>
    553c:	dc 01       	movw	r26, r24
    553e:	cb 01       	movw	r24, r22
    5540:	9e 83       	std	Y+6, r25	; 0x06
    5542:	8d 83       	std	Y+5, r24	; 0x05
    5544:	8d 81       	ldd	r24, Y+5	; 0x05
    5546:	9e 81       	ldd	r25, Y+6	; 0x06
    5548:	9a 83       	std	Y+2, r25	; 0x02
    554a:	89 83       	std	Y+1, r24	; 0x01
    554c:	89 81       	ldd	r24, Y+1	; 0x01
    554e:	9a 81       	ldd	r25, Y+2	; 0x02
    5550:	01 97       	sbiw	r24, 0x01	; 1
    5552:	f1 f7       	brne	.-4      	; 0x5550 <LCD_inenuLatch+0x504>
    5554:	9a 83       	std	Y+2, r25	; 0x02
    5556:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);

	return Local_enuErrorState;
    5558:	8a a1       	ldd	r24, Y+34	; 0x22
    555a:	8c a3       	std	Y+36, r24	; 0x24
    555c:	8c a1       	ldd	r24, Y+36	; 0x24
}
    555e:	a4 96       	adiw	r28, 0x24	; 36
    5560:	0f b6       	in	r0, 0x3f	; 63
    5562:	f8 94       	cli
    5564:	de bf       	out	0x3e, r29	; 62
    5566:	0f be       	out	0x3f, r0	; 63
    5568:	cd bf       	out	0x3d, r28	; 61
    556a:	cf 91       	pop	r28
    556c:	df 91       	pop	r29
    556e:	08 95       	ret

00005570 <LCD_inenuSendCommand>:


static inline ES_t LCD_inenuSendCommand(u8 Copy_u8Command)
{
    5570:	df 93       	push	r29
    5572:	cf 93       	push	r28
    5574:	00 d0       	rcall	.+0      	; 0x5576 <LCD_inenuSendCommand+0x6>
    5576:	cd b7       	in	r28, 0x3d	; 61
    5578:	de b7       	in	r29, 0x3e	; 62
    557a:	8a 83       	std	Y+2, r24	; 0x02
	ES_t Local_enuErrorState = ES_NOK;
    557c:	19 82       	std	Y+1, r1	; 0x01

	// select instruction register
	if(DIO_enuSetPinVal(RS_PORT, RS_PIN, DIO_u8LOW ) == ES_OK)
    557e:	80 e0       	ldi	r24, 0x00	; 0
    5580:	60 e0       	ldi	r22, 0x00	; 0
    5582:	40 e0       	ldi	r20, 0x00	; 0
    5584:	0e 94 6f 19 	call	0x32de	; 0x32de <DIO_enuSetPinVal>
    5588:	81 30       	cpi	r24, 0x01	; 1
    558a:	21 f4       	brne	.+8      	; 0x5594 <LCD_inenuSendCommand+0x24>
	{
		Local_enuErrorState = LCD_inenuLatch(Copy_u8Command);
    558c:	8a 81       	ldd	r24, Y+2	; 0x02
    558e:	0e 94 26 28 	call	0x504c	; 0x504c <LCD_inenuLatch>
    5592:	89 83       	std	Y+1, r24	; 0x01
	}

	return Local_enuErrorState;
    5594:	89 81       	ldd	r24, Y+1	; 0x01
}
    5596:	0f 90       	pop	r0
    5598:	0f 90       	pop	r0
    559a:	cf 91       	pop	r28
    559c:	df 91       	pop	r29
    559e:	08 95       	ret

000055a0 <main>:
#include "Keypad_int.h"
#include "LCD_int.h"


int main()
{
    55a0:	df 93       	push	r29
    55a2:	cf 93       	push	r28
    55a4:	0f 92       	push	r0
    55a6:	cd b7       	in	r28, 0x3d	; 61
    55a8:	de b7       	in	r29, 0x3e	; 62
	//DIO_enuInit();
	LCD_enuInit();
    55aa:	0e 94 82 1e 	call	0x3d04	; 0x3d04 <LCD_enuInit>
	Keypad_enuInit();
    55ae:	0e 94 87 1b 	call	0x370e	; 0x370e <Keypad_enuInit>
	u8 Local_u8PressedKey = NOT_PRESSED;
    55b2:	8f ef       	ldi	r24, 0xFF	; 255
    55b4:	89 83       	std	Y+1, r24	; 0x01
while(1)
{
	Local_u8PressedKey = NOT_PRESSED;
    55b6:	8f ef       	ldi	r24, 0xFF	; 255
    55b8:	89 83       	std	Y+1, r24	; 0x01
    55ba:	04 c0       	rjmp	.+8      	; 0x55c4 <main+0x24>
	while(Local_u8PressedKey == NOT_PRESSED){
	Keypad_enuGetPressedKey(&Local_u8PressedKey);
    55bc:	ce 01       	movw	r24, r28
    55be:	01 96       	adiw	r24, 0x01	; 1
    55c0:	0e 94 26 1d 	call	0x3a4c	; 0x3a4c <Keypad_enuGetPressedKey>
	Keypad_enuInit();
	u8 Local_u8PressedKey = NOT_PRESSED;
while(1)
{
	Local_u8PressedKey = NOT_PRESSED;
	while(Local_u8PressedKey == NOT_PRESSED){
    55c4:	89 81       	ldd	r24, Y+1	; 0x01
    55c6:	8f 3f       	cpi	r24, 0xFF	; 255
    55c8:	c9 f3       	breq	.-14     	; 0x55bc <main+0x1c>
	Keypad_enuGetPressedKey(&Local_u8PressedKey);
	}
	LCD_enuSendChar(Local_u8PressedKey);
    55ca:	89 81       	ldd	r24, Y+1	; 0x01
    55cc:	0e 94 16 25 	call	0x4a2c	; 0x4a2c <LCD_enuSendChar>
    55d0:	f2 cf       	rjmp	.-28     	; 0x55b6 <main+0x16>

000055d2 <__mulsi3>:
    55d2:	62 9f       	mul	r22, r18
    55d4:	d0 01       	movw	r26, r0
    55d6:	73 9f       	mul	r23, r19
    55d8:	f0 01       	movw	r30, r0
    55da:	82 9f       	mul	r24, r18
    55dc:	e0 0d       	add	r30, r0
    55de:	f1 1d       	adc	r31, r1
    55e0:	64 9f       	mul	r22, r20
    55e2:	e0 0d       	add	r30, r0
    55e4:	f1 1d       	adc	r31, r1
    55e6:	92 9f       	mul	r25, r18
    55e8:	f0 0d       	add	r31, r0
    55ea:	83 9f       	mul	r24, r19
    55ec:	f0 0d       	add	r31, r0
    55ee:	74 9f       	mul	r23, r20
    55f0:	f0 0d       	add	r31, r0
    55f2:	65 9f       	mul	r22, r21
    55f4:	f0 0d       	add	r31, r0
    55f6:	99 27       	eor	r25, r25
    55f8:	72 9f       	mul	r23, r18
    55fa:	b0 0d       	add	r27, r0
    55fc:	e1 1d       	adc	r30, r1
    55fe:	f9 1f       	adc	r31, r25
    5600:	63 9f       	mul	r22, r19
    5602:	b0 0d       	add	r27, r0
    5604:	e1 1d       	adc	r30, r1
    5606:	f9 1f       	adc	r31, r25
    5608:	bd 01       	movw	r22, r26
    560a:	cf 01       	movw	r24, r30
    560c:	11 24       	eor	r1, r1
    560e:	08 95       	ret

00005610 <__udivmodsi4>:
    5610:	a1 e2       	ldi	r26, 0x21	; 33
    5612:	1a 2e       	mov	r1, r26
    5614:	aa 1b       	sub	r26, r26
    5616:	bb 1b       	sub	r27, r27
    5618:	fd 01       	movw	r30, r26
    561a:	0d c0       	rjmp	.+26     	; 0x5636 <__udivmodsi4_ep>

0000561c <__udivmodsi4_loop>:
    561c:	aa 1f       	adc	r26, r26
    561e:	bb 1f       	adc	r27, r27
    5620:	ee 1f       	adc	r30, r30
    5622:	ff 1f       	adc	r31, r31
    5624:	a2 17       	cp	r26, r18
    5626:	b3 07       	cpc	r27, r19
    5628:	e4 07       	cpc	r30, r20
    562a:	f5 07       	cpc	r31, r21
    562c:	20 f0       	brcs	.+8      	; 0x5636 <__udivmodsi4_ep>
    562e:	a2 1b       	sub	r26, r18
    5630:	b3 0b       	sbc	r27, r19
    5632:	e4 0b       	sbc	r30, r20
    5634:	f5 0b       	sbc	r31, r21

00005636 <__udivmodsi4_ep>:
    5636:	66 1f       	adc	r22, r22
    5638:	77 1f       	adc	r23, r23
    563a:	88 1f       	adc	r24, r24
    563c:	99 1f       	adc	r25, r25
    563e:	1a 94       	dec	r1
    5640:	69 f7       	brne	.-38     	; 0x561c <__udivmodsi4_loop>
    5642:	60 95       	com	r22
    5644:	70 95       	com	r23
    5646:	80 95       	com	r24
    5648:	90 95       	com	r25
    564a:	9b 01       	movw	r18, r22
    564c:	ac 01       	movw	r20, r24
    564e:	bd 01       	movw	r22, r26
    5650:	cf 01       	movw	r24, r30
    5652:	08 95       	ret

00005654 <__prologue_saves__>:
    5654:	2f 92       	push	r2
    5656:	3f 92       	push	r3
    5658:	4f 92       	push	r4
    565a:	5f 92       	push	r5
    565c:	6f 92       	push	r6
    565e:	7f 92       	push	r7
    5660:	8f 92       	push	r8
    5662:	9f 92       	push	r9
    5664:	af 92       	push	r10
    5666:	bf 92       	push	r11
    5668:	cf 92       	push	r12
    566a:	df 92       	push	r13
    566c:	ef 92       	push	r14
    566e:	ff 92       	push	r15
    5670:	0f 93       	push	r16
    5672:	1f 93       	push	r17
    5674:	cf 93       	push	r28
    5676:	df 93       	push	r29
    5678:	cd b7       	in	r28, 0x3d	; 61
    567a:	de b7       	in	r29, 0x3e	; 62
    567c:	ca 1b       	sub	r28, r26
    567e:	db 0b       	sbc	r29, r27
    5680:	0f b6       	in	r0, 0x3f	; 63
    5682:	f8 94       	cli
    5684:	de bf       	out	0x3e, r29	; 62
    5686:	0f be       	out	0x3f, r0	; 63
    5688:	cd bf       	out	0x3d, r28	; 61
    568a:	09 94       	ijmp

0000568c <__epilogue_restores__>:
    568c:	2a 88       	ldd	r2, Y+18	; 0x12
    568e:	39 88       	ldd	r3, Y+17	; 0x11
    5690:	48 88       	ldd	r4, Y+16	; 0x10
    5692:	5f 84       	ldd	r5, Y+15	; 0x0f
    5694:	6e 84       	ldd	r6, Y+14	; 0x0e
    5696:	7d 84       	ldd	r7, Y+13	; 0x0d
    5698:	8c 84       	ldd	r8, Y+12	; 0x0c
    569a:	9b 84       	ldd	r9, Y+11	; 0x0b
    569c:	aa 84       	ldd	r10, Y+10	; 0x0a
    569e:	b9 84       	ldd	r11, Y+9	; 0x09
    56a0:	c8 84       	ldd	r12, Y+8	; 0x08
    56a2:	df 80       	ldd	r13, Y+7	; 0x07
    56a4:	ee 80       	ldd	r14, Y+6	; 0x06
    56a6:	fd 80       	ldd	r15, Y+5	; 0x05
    56a8:	0c 81       	ldd	r16, Y+4	; 0x04
    56aa:	1b 81       	ldd	r17, Y+3	; 0x03
    56ac:	aa 81       	ldd	r26, Y+2	; 0x02
    56ae:	b9 81       	ldd	r27, Y+1	; 0x01
    56b0:	ce 0f       	add	r28, r30
    56b2:	d1 1d       	adc	r29, r1
    56b4:	0f b6       	in	r0, 0x3f	; 63
    56b6:	f8 94       	cli
    56b8:	de bf       	out	0x3e, r29	; 62
    56ba:	0f be       	out	0x3f, r0	; 63
    56bc:	cd bf       	out	0x3d, r28	; 61
    56be:	ed 01       	movw	r28, r26
    56c0:	08 95       	ret

000056c2 <_exit>:
    56c2:	f8 94       	cli

000056c4 <__stop_program>:
    56c4:	ff cf       	rjmp	.-2      	; 0x56c4 <__stop_program>
